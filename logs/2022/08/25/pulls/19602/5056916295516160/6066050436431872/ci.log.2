[0;34m node0 2022-08-25T21:18:35.957427Z [scheduler] [wallet/wallet.h:827] [WalletLogPrintf] [default wallet] AddToWallet 30989d9ccefcdded0927ab25094eac3f2bf692329143996ca929abe1b0e42ad6  new [0m
[0;34m node0 2022-08-25T21:18:35.957488Z [httpworker.0] [logging/timer.h:57] [Log] [lock] Enter: lock contention ::cs_main, validation.cpp:5030 completed (10Î¼s) [0m
[0;34m node0 2022-08-25T21:18:35.957613Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_args, util/system.cpp:1095 started [0m
[0;34m node0 2022-08-25T21:18:35.957705Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_args, util/system.cpp:1095 completed (11Î¼s) [0m
[0;34m node0 2022-08-25T21:18:35.957797Z [httpworker.0] [validation.cpp:2710] [ConnectTip] [bench]   - Using cached block [0m
[0;34m node0 2022-08-25T21:18:35.957897Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention m_node.mempool->cs, node/interfaces.cpp:619 started [0m
[0;34m node0 2022-08-25T21:18:35.957967Z [httpworker.0] [validation.cpp:2717] [ConnectTip] [bench]   - Load block from disk: 0.24ms [0.01s (0.05ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.958123Z [httpworker.0] [validation.cpp:2060] [ConnectBlock] [bench]     - Sanity checks: 0.01ms [0.00s (0.01ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.958222Z [httpworker.0] [validation.cpp:2159] [ConnectBlock] [bench]     - Fork checks: 0.11ms [0.02s (0.13ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.958320Z [httpworker.0] [validation.cpp:2244] [ConnectBlock] [bench]       - Connect 1 transactions: 0.09ms (0.087ms/tx, 0.000ms/txin) [0.02s (0.09ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.958409Z [httpworker.0] [validation.cpp:2257] [ConnectBlock] [bench]     - Verify 0 txins: 0.18ms (0.000ms/txin) [0.03s (0.18ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.958575Z [httpworker.0] [validation.cpp:2267] [ConnectBlock] [bench]     - Write undo data: 0.15ms [0.01s (0.07ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.958635Z [httpworker.0] [validation.cpp:2278] [ConnectBlock] [bench]     - Index writing: 0.08ms [0.01s (0.03ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.958702Z [httpworker.0] [validationinterface.cpp:252] [BlockChecked] [validation] BlockChecked: block hash=15f1686d4f637b8c17517b36bacecd3a85e47cedef3b3ed949b33ab79aafcbfb state=Valid [0m
[0;34m node0 2022-08-25T21:18:35.958789Z [httpworker.0] [validation.cpp:2729] [ConnectTip] [bench]   - Connect total: 0.91ms [0.07s (0.41ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.958842Z [httpworker.0] [validation.cpp:2734] [ConnectTip] [bench]   - Flush: 0.06ms [0.01s (0.03ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.958907Z [httpworker.0] [validation.cpp:2740] [ConnectTip] [bench]   - Writing chainstate: 0.06ms [0.01s (0.03ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.959547Z [httpworker.0] [policy/fees.cpp:667] [processBlock] [estimatefee] Blockpolicy estimates updated by 0 of 0 block txs, since last block 0 of 0 tracked, mempool map size 0, max target 0 from current [0m
[0;34m node0 2022-08-25T21:18:35.959675Z [httpworker.0] [validation.cpp:2519] [UpdateTipLog] UpdateTip: new best=15f1686d4f637b8c17517b36bacecd3a85e47cedef3b3ed949b33ab79aafcbfb height=87 version=0x20000000 log2_work=7.459432 tx=88 date='2022-08-25T21:18:51Z' progress=1.000000 cache=0.0MiB(87txo) [0m
[0;34m node0 2022-08-25T21:18:35.959740Z [httpworker.0] [validation.cpp:2751] [ConnectTip] [bench]   - Connect postprocess: 0.83ms [0.07s (0.42ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.959786Z [httpworker.0] [validation.cpp:2752] [ConnectTip] [bench] - Connect block: 2.10ms [0.17s (0.95ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.959841Z [httpworker.0] [txmempool.cpp:736] [check] [mempool] Checking mempool with 0 transactions and 0 inputs [0m
[0;34m node0 2022-08-25T21:18:35.959936Z [httpworker.0] [validationinterface.cpp:229] [BlockConnected] [validation] Enqueuing BlockConnected: block hash=15f1686d4f637b8c17517b36bacecd3a85e47cedef3b3ed949b33ab79aafcbfb block height=87 [0m
[0;34m node0 2022-08-25T21:18:35.960014Z [httpworker.0] [validationinterface.cpp:202] [UpdatedBlockTip] [validation] Enqueuing UpdatedBlockTip: new block hash=15f1686d4f637b8c17517b36bacecd3a85e47cedef3b3ed949b33ab79aafcbfb fork block hash=50c384fa9c4ac2a5049edc6b52812e45ab8cf7b666e17145e7b35626bdea5fdc (in IBD=false) [0m
[0;34m node0 2022-08-25T21:18:35.960180Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention m_node.mempool->cs, node/interfaces.cpp:619 completed (2196Î¼s) [0m
[0;34m node0 2022-08-25T21:18:35.960554Z [scheduler] [validationinterface.cpp:202] [operator()] [validation] UpdatedBlockTip: new block hash=50c384fa9c4ac2a5049edc6b52812e45ab8cf7b666e17145e7b35626bdea5fdc fork block hash=1fc7e8d8df4e1558fe03efbd5dfb59b3a70a28151f6a52b83d58fd8c1cfcea22 (in IBD=false) [0m
[0;34m node0 2022-08-25T21:18:35.960889Z [scheduler] [validationinterface.cpp:229] [operator()] [validation] BlockConnected: block hash=15f1686d4f637b8c17517b36bacecd3a85e47cedef3b3ed949b33ab79aafcbfb block height=87 [0m
[0;34m node0 2022-08-25T21:18:35.961800Z [httpworker.0] [node/miner.cpp:163] [CreateNewBlock] CreateNewBlock(): block weight: 900 txs: 0 fees: 0 sigops 400 [0m
[0;34m node0 2022-08-25T21:18:35.961894Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, net_processing.cpp:1720 started [0m
[0;34m node0 2022-08-25T21:18:35.961983Z [httpworker.0] [validation.cpp:2060] [ConnectBlock] [bench]     - Sanity checks: 0.01ms [0.00s (0.01ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.962077Z [httpworker.0] [validation.cpp:2159] [ConnectBlock] [bench]     - Fork checks: 0.11ms [0.02s (0.13ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.962154Z [httpworker.0] [validation.cpp:2244] [ConnectBlock] [bench]       - Connect 1 transactions: 0.09ms (0.086ms/tx, 0.000ms/txin) [0.02s (0.09ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.962222Z [httpworker.0] [validation.cpp:2257] [ConnectBlock] [bench]     - Verify 0 txins: 0.16ms (0.000ms/txin) [0.03s (0.18ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.962283Z [httpworker.0] [node/miner.cpp:178] [CreateNewBlock] [bench] CreateNewBlock() packages: 0.04ms (0 packages, 0 updated descendants), validity: 1.36ms (total 1.40ms) [0m
[0;34m node0 2022-08-25T21:18:35.962386Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, net_processing.cpp:1720 completed (406Î¼s) [0m
[0;34m node0 2022-08-25T21:18:35.962453Z [httpworker.0] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, validation.cpp:3788 started [0m
[0;34m node0 2022-08-25T21:18:35.962518Z [httpworker.0] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, validation.cpp:3788 completed (8Î¼s) [0m
[0;34m node0 2022-08-25T21:18:35.962936Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, node/interfaces.cpp:543 started [0m
[0;34m node0 2022-08-25T21:18:35.963028Z [httpworker.0] [validationinterface.cpp:257] [NewPoWValidBlock] [validation] NewPoWValidBlock: block hash=3d01664a985031a145af2bf563ca309910ab4c78d15b9f87a241546314a90a72 [0m
[0;34m node0 2022-08-25T21:18:35.963627Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, node/interfaces.cpp:543 completed (623Î¼s) [0m
[0;34m node0 2022-08-25T21:18:35.963860Z [httpworker.0] [logging/timer.h:57] [Log] [lock] Enter: lock contention ::cs_main, validation.cpp:5030 started [0m
[0;34m node0 2022-08-25T21:18:35.963932Z [scheduler] [wallet/wallet.h:827] [WalletLogPrintf] [default wallet] AddToWallet c365e7db7f48e89e1898826bb155473e877de54f158cf7b3909bc76f7b609855  new [0m
[0;34m node0 2022-08-25T21:18:35.963991Z [httpworker.0] [logging/timer.h:57] [Log] [lock] Enter: lock contention ::cs_main, validation.cpp:5030 completed (9Î¼s) [0m
[0;34m node0 2022-08-25T21:18:35.964170Z [httpworker.0] [validation.cpp:2710] [ConnectTip] [bench]   - Using cached block [0m
[0;34m node0 2022-08-25T21:18:35.964231Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention m_node.mempool->cs, node/interfaces.cpp:619 started [0m
[0;34m node0 2022-08-25T21:18:35.964292Z [httpworker.0] [validation.cpp:2717] [ConnectTip] [bench]   - Load block from disk: 0.06ms [0.01s (0.05ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.964383Z [httpworker.0] [validation.cpp:2060] [ConnectBlock] [bench]     - Sanity checks: 0.00ms [0.00s (0.01ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.964454Z [httpworker.0] [validation.cpp:2159] [ConnectBlock] [bench]     - Fork checks: 0.07ms [0.02s (0.12ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.964527Z [httpworker.0] [validation.cpp:2244] [ConnectBlock] [bench]       - Connect 1 transactions: 0.07ms (0.065ms/tx, 0.000ms/txin) [0.02s (0.09ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.964604Z [httpworker.0] [validation.cpp:2257] [ConnectBlock] [bench]     - Verify 0 txins: 0.14ms (0.000ms/txin) [0.03s (0.18ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.964721Z [httpworker.0] [validation.cpp:2267] [ConnectBlock] [bench]     - Write undo data: 0.12ms [0.01s (0.07ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.964770Z [httpworker.0] [validation.cpp:2278] [ConnectBlock] [bench]     - Index writing: 0.05ms [0.01s (0.03ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.964831Z [httpworker.0] [validationinterface.cpp:252] [BlockChecked] [validation] BlockChecked: block hash=3d01664a985031a145af2bf563ca309910ab4c78d15b9f87a241546314a90a72 state=Valid [0m
[0;34m node0 2022-08-25T21:18:35.964918Z [httpworker.0] [validation.cpp:2729] [ConnectTip] [bench]   - Connect total: 0.69ms [0.07s (0.41ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.964969Z [httpworker.0] [validation.cpp:2734] [ConnectTip] [bench]   - Flush: 0.06ms [0.01s (0.03ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.965032Z [httpworker.0] [validation.cpp:2740] [ConnectTip] [bench]   - Writing chainstate: 0.06ms [0.01s (0.03ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.965512Z [httpworker.0] [policy/fees.cpp:667] [processBlock] [estimatefee] Blockpolicy estimates updated by 0 of 0 block txs, since last block 0 of 0 tracked, mempool map size 0, max target 0 from current [0m
[0;34m node0 2022-08-25T21:18:35.965633Z [httpworker.0] [validation.cpp:2519] [UpdateTipLog] UpdateTip: new best=3d01664a985031a145af2bf563ca309910ab4c78d15b9f87a241546314a90a72 height=88 version=0x20000000 log2_work=7.475733 tx=89 date='2022-08-25T21:18:51Z' progress=1.000000 cache=0.0MiB(88txo) [0m
[0;34m node0 2022-08-25T21:18:35.965685Z [httpworker.0] [validation.cpp:2751] [ConnectTip] [bench]   - Connect postprocess: 0.65ms [0.07s (0.42ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.965727Z [httpworker.0] [validation.cpp:2752] [ConnectTip] [bench] - Connect block: 1.51ms [0.17s (0.95ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.965779Z [httpworker.0] [txmempool.cpp:736] [check] [mempool] Checking mempool with 0 transactions and 0 inputs [0m
[0;34m node0 2022-08-25T21:18:35.965873Z [httpworker.0] [validationinterface.cpp:229] [BlockConnected] [validation] Enqueuing BlockConnected: block hash=3d01664a985031a145af2bf563ca309910ab4c78d15b9f87a241546314a90a72 block height=88 [0m
[0;34m node0 2022-08-25T21:18:35.965949Z [httpworker.0] [validationinterface.cpp:202] [UpdatedBlockTip] [validation] Enqueuing UpdatedBlockTip: new block hash=3d01664a985031a145af2bf563ca309910ab4c78d15b9f87a241546314a90a72 fork block hash=15f1686d4f637b8c17517b36bacecd3a85e47cedef3b3ed949b33ab79aafcbfb (in IBD=false) [0m
[0;34m node0 2022-08-25T21:18:35.966084Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention m_node.mempool->cs, node/interfaces.cpp:619 completed (1766Î¼s) [0m
[0;34m node0 2022-08-25T21:18:35.966350Z [scheduler] [validationinterface.cpp:202] [operator()] [validation] UpdatedBlockTip: new block hash=15f1686d4f637b8c17517b36bacecd3a85e47cedef3b3ed949b33ab79aafcbfb fork block hash=50c384fa9c4ac2a5049edc6b52812e45ab8cf7b666e17145e7b35626bdea5fdc (in IBD=false) [0m
[0;34m node0 2022-08-25T21:18:35.966740Z [scheduler] [validationinterface.cpp:229] [operator()] [validation] BlockConnected: block hash=3d01664a985031a145af2bf563ca309910ab4c78d15b9f87a241546314a90a72 block height=88 [0m
[0;34m node0 2022-08-25T21:18:35.966882Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, net_processing.cpp:1720 started [0m
[0;34m node0 2022-08-25T21:18:35.966950Z [httpworker.0] [node/miner.cpp:163] [CreateNewBlock] CreateNewBlock(): block weight: 900 txs: 0 fees: 0 sigops 400 [0m
[0;34m node0 2022-08-25T21:18:35.967119Z [httpworker.0] [validation.cpp:2060] [ConnectBlock] [bench]     - Sanity checks: 0.01ms [0.00s (0.01ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.967193Z [httpworker.0] [validation.cpp:2159] [ConnectBlock] [bench]     - Fork checks: 0.08ms [0.02s (0.12ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.967266Z [httpworker.0] [validation.cpp:2244] [ConnectBlock] [bench]       - Connect 1 transactions: 0.06ms (0.063ms/tx, 0.000ms/txin) [0.02s (0.09ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.967332Z [httpworker.0] [validation.cpp:2257] [ConnectBlock] [bench]     - Verify 0 txins: 0.13ms (0.000ms/txin) [0.03s (0.18ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.967392Z [httpworker.0] [node/miner.cpp:178] [CreateNewBlock] [bench] CreateNewBlock() packages: 0.05ms (0 packages, 0 updated descendants), validity: 0.56ms (total 0.61ms) [0m
[0;34m node0 2022-08-25T21:18:35.967480Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, net_processing.cpp:1720 completed (521Î¼s) [0m
[0;34m node0 2022-08-25T21:18:35.967544Z [httpworker.0] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, validation.cpp:3788 started [0m
[0;34m node0 2022-08-25T21:18:35.967615Z [httpworker.0] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, validation.cpp:3788 completed (9Î¼s) [0m
[0;34m node0 2022-08-25T21:18:35.967916Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, node/interfaces.cpp:543 started [0m
[0;34m node0 2022-08-25T21:18:35.968100Z [httpworker.0] [validationinterface.cpp:257] [NewPoWValidBlock] [validation] NewPoWValidBlock: block hash=407d5119b17315c6707a8787a66b35f8f57efe4591da11a99165551941f867f9 [0m
[0;34m node0 2022-08-25T21:18:35.968685Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, node/interfaces.cpp:543 completed (704Î¼s) [0m
[0;34m node0 2022-08-25T21:18:35.968740Z [httpworker.0] [logging/timer.h:57] [Log] [lock] Enter: lock contention ::cs_main, validation.cpp:5030 started [0m
[0;34m node0 2022-08-25T21:18:35.968815Z [scheduler] [wallet/wallet.h:827] [WalletLogPrintf] [default wallet] AddToWallet 610c3db309ba6515455ee5bab55b702a38262dbecff315390b7758bdb47028fa  new [0m
[0;34m node0 2022-08-25T21:18:35.968868Z [httpworker.0] [logging/timer.h:57] [Log] [lock] Enter: lock contention ::cs_main, validation.cpp:5030 completed (10Î¼s) [0m
[0;34m node0 2022-08-25T21:18:35.969071Z [httpworker.0] [validation.cpp:2710] [ConnectTip] [bench]   - Using cached block [0m
[0;34m node0 2022-08-25T21:18:35.969139Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention m_node.mempool->cs, node/interfaces.cpp:619 started [0m
[0;34m node0 2022-08-25T21:18:35.969200Z [httpworker.0] [validation.cpp:2717] [ConnectTip] [bench]   - Load block from disk: 0.07ms [0.01s (0.05ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.969290Z [httpworker.0] [validation.cpp:2060] [ConnectBlock] [bench]     - Sanity checks: 0.00ms [0.00s (0.01ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.969359Z [httpworker.0] [validation.cpp:2159] [ConnectBlock] [bench]     - Fork checks: 0.07ms [0.02s (0.12ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.969431Z [httpworker.0] [validation.cpp:2244] [ConnectBlock] [bench]       - Connect 1 transactions: 0.06ms (0.064ms/tx, 0.000ms/txin) [0.02s (0.09ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.969498Z [httpworker.0] [validation.cpp:2257] [ConnectBlock] [bench]     - Verify 0 txins: 0.14ms (0.000ms/txin) [0.03s (0.18ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.969628Z [httpworker.0] [validation.cpp:2267] [ConnectBlock] [bench]     - Write undo data: 0.13ms [0.01s (0.07ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.970459Z [httpworker.0] [validation.cpp:2278] [ConnectBlock] [bench]     - Index writing: 0.83ms [0.01s (0.04ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.970526Z [httpworker.0] [validationinterface.cpp:252] [BlockChecked] [validation] BlockChecked: block hash=407d5119b17315c6707a8787a66b35f8f57efe4591da11a99165551941f867f9 state=Valid [0m
[0;34m node0 2022-08-25T21:18:35.970617Z [httpworker.0] [validation.cpp:2729] [ConnectTip] [bench]   - Connect total: 1.48ms [0.07s (0.41ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.970670Z [httpworker.0] [validation.cpp:2734] [ConnectTip] [bench]   - Flush: 0.06ms [0.01s (0.03ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.970734Z [httpworker.0] [validation.cpp:2740] [ConnectTip] [bench]   - Writing chainstate: 0.06ms [0.01s (0.03ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.971205Z [httpworker.0] [policy/fees.cpp:667] [processBlock] [estimatefee] Blockpolicy estimates updated by 0 of 0 block txs, since last block 0 of 0 tracked, mempool map size 0, max target 0 from current [0m
[0;34m node0 2022-08-25T21:18:35.971319Z [httpworker.0] [validation.cpp:2519] [UpdateTipLog] UpdateTip: new best=407d5119b17315c6707a8787a66b35f8f57efe4591da11a99165551941f867f9 height=89 version=0x20000000 log2_work=7.491853 tx=90 date='2022-08-25T21:18:51Z' progress=1.000000 cache=0.0MiB(89txo) [0m
[0;34m node0 2022-08-25T21:18:35.971370Z [httpworker.0] [validation.cpp:2751] [ConnectTip] [bench]   - Connect postprocess: 0.64ms [0.08s (0.42ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.971415Z [httpworker.0] [validation.cpp:2752] [ConnectTip] [bench] - Connect block: 2.31ms [0.17s (0.95ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.971468Z [httpworker.0] [txmempool.cpp:736] [check] [mempool] Checking mempool with 0 transactions and 0 inputs [0m
[0;34m node0 2022-08-25T21:18:35.971569Z [httpworker.0] [validationinterface.cpp:229] [BlockConnected] [validation] Enqueuing BlockConnected: block hash=407d5119b17315c6707a8787a66b35f8f57efe4591da11a99165551941f867f9 block height=89 [0m
[0;34m node0 2022-08-25T21:18:35.971645Z [httpworker.0] [validationinterface.cpp:202] [UpdatedBlockTip] [validation] Enqueuing UpdatedBlockTip: new block hash=407d5119b17315c6707a8787a66b35f8f57efe4591da11a99165551941f867f9 fork block hash=3d01664a985031a145af2bf563ca309910ab4c78d15b9f87a241546314a90a72 (in IBD=false) [0m
[0;34m node0 2022-08-25T21:18:35.971768Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention m_node.mempool->cs, node/interfaces.cpp:619 completed (2552Î¼s) [0m
[0;34m node0 2022-08-25T21:18:35.972008Z [scheduler] [validationinterface.cpp:202] [operator()] [validation] UpdatedBlockTip: new block hash=3d01664a985031a145af2bf563ca309910ab4c78d15b9f87a241546314a90a72 fork block hash=15f1686d4f637b8c17517b36bacecd3a85e47cedef3b3ed949b33ab79aafcbfb (in IBD=false) [0m
[0;34m node0 2022-08-25T21:18:35.972305Z [scheduler] [validationinterface.cpp:229] [operator()] [validation] BlockConnected: block hash=407d5119b17315c6707a8787a66b35f8f57efe4591da11a99165551941f867f9 block height=89 [0m
[0;34m node0 2022-08-25T21:18:35.972471Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, net_processing.cpp:1720 started [0m
[0;34m node0 2022-08-25T21:18:35.972537Z [httpworker.0] [node/miner.cpp:163] [CreateNewBlock] CreateNewBlock(): block weight: 900 txs: 0 fees: 0 sigops 400 [0m
[0;34m node0 2022-08-25T21:18:35.972689Z [httpworker.0] [validation.cpp:2060] [ConnectBlock] [bench]     - Sanity checks: 0.01ms [0.00s (0.01ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.972762Z [httpworker.0] [validation.cpp:2159] [ConnectBlock] [bench]     - Fork checks: 0.08ms [0.02s (0.12ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.972835Z [httpworker.0] [validation.cpp:2244] [ConnectBlock] [bench]       - Connect 1 transactions: 0.07ms (0.065ms/tx, 0.000ms/txin) [0.02s (0.09ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.972901Z [httpworker.0] [validation.cpp:2257] [ConnectBlock] [bench]     - Verify 0 txins: 0.14ms (0.000ms/txin) [0.03s (0.18ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.972960Z [httpworker.0] [node/miner.cpp:178] [CreateNewBlock] [bench] CreateNewBlock() packages: 0.06ms (0 packages, 0 updated descendants), validity: 0.48ms (total 0.53ms) [0m
[0;34m node0 2022-08-25T21:18:35.973067Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, net_processing.cpp:1720 completed (522Î¼s) [0m
[0;34m node0 2022-08-25T21:18:35.973130Z [httpworker.0] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, validation.cpp:3788 started [0m
[0;34m node0 2022-08-25T21:18:35.973200Z [httpworker.0] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, validation.cpp:3788 completed (8Î¼s) [0m
[0;34m node0 2022-08-25T21:18:35.973507Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, node/interfaces.cpp:543 started [0m
[0;34m node0 2022-08-25T21:18:35.973666Z [httpworker.0] [validationinterface.cpp:257] [NewPoWValidBlock] [validation] NewPoWValidBlock: block hash=4bb1264031937909c38599679ecd9c93deec69de694219219afa165dd1f3479c [0m
[0;34m node0 2022-08-25T21:18:35.974268Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, node/interfaces.cpp:543 completed (699Î¼s) [0m
[0;34m node0 2022-08-25T21:18:35.974348Z [httpworker.0] [logging/timer.h:57] [Log] [lock] Enter: lock contention ::cs_main, validation.cpp:5030 started [0m
[0;34m node0 2022-08-25T21:18:35.974425Z [scheduler] [wallet/wallet.h:827] [WalletLogPrintf] [default wallet] AddToWallet 75e6a6193c78e7eb574f2ffbfc1ce7e87e2bd1149a4e7fa2d6276129e2ca4446  new [0m
[0;34m node0 2022-08-25T21:18:35.974478Z [httpworker.0] [logging/timer.h:57] [Log] [lock] Enter: lock contention ::cs_main, validation.cpp:5030 completed (10Î¼s) [0m
[0;34m node0 2022-08-25T21:18:35.974668Z [httpworker.0] [validation.cpp:2710] [ConnectTip] [bench]   - Using cached block [0m
[0;34m node0 2022-08-25T21:18:35.974735Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention m_node.mempool->cs, node/interfaces.cpp:619 started [0m
[0;34m node0 2022-08-25T21:18:35.974789Z [httpworker.0] [validation.cpp:2717] [ConnectTip] [bench]   - Load block from disk: 0.06ms [0.01s (0.05ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.974878Z [httpworker.0] [validation.cpp:2060] [ConnectBlock] [bench]     - Sanity checks: 0.00ms [0.00s (0.01ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.974948Z [httpworker.0] [validation.cpp:2159] [ConnectBlock] [bench]     - Fork checks: 0.07ms [0.02s (0.12ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.975021Z [httpworker.0] [validation.cpp:2244] [ConnectBlock] [bench]       - Connect 1 transactions: 0.06ms (0.064ms/tx, 0.000ms/txin) [0.02s (0.09ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.976109Z [httpworker.0] [validation.cpp:2257] [ConnectBlock] [bench]     - Verify 0 txins: 1.15ms (0.000ms/txin) [0.03s (0.19ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.976229Z [httpworker.0] [validation.cpp:2267] [ConnectBlock] [bench]     - Write undo data: 0.12ms [0.01s (0.07ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.976278Z [httpworker.0] [validation.cpp:2278] [ConnectBlock] [bench]     - Index writing: 0.05ms [0.01s (0.04ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.976339Z [httpworker.0] [validationinterface.cpp:252] [BlockChecked] [validation] BlockChecked: block hash=4bb1264031937909c38599679ecd9c93deec69de694219219afa165dd1f3479c state=Valid [0m
[0;34m node0 2022-08-25T21:18:35.976422Z [httpworker.0] [validation.cpp:2729] [ConnectTip] [bench]   - Connect total: 1.69ms [0.08s (0.42ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.976474Z [httpworker.0] [validation.cpp:2734] [ConnectTip] [bench]   - Flush: 0.05ms [0.01s (0.03ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.976537Z [httpworker.0] [validation.cpp:2740] [ConnectTip] [bench]   - Writing chainstate: 0.06ms [0.01s (0.03ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.976989Z [httpworker.0] [policy/fees.cpp:667] [processBlock] [estimatefee] Blockpolicy estimates updated by 0 of 0 block txs, since last block 0 of 0 tracked, mempool map size 0, max target 0 from current [0m
[0;34m node0 2022-08-25T21:18:35.977533Z [httpworker.0] [validation.cpp:2519] [UpdateTipLog] UpdateTip: new best=4bb1264031937909c38599679ecd9c93deec69de694219219afa165dd1f3479c height=90 version=0x20000000 log2_work=7.507795 tx=91 date='2022-08-25T21:18:51Z' progress=1.000000 cache=0.0MiB(90txo) [0m
[0;34m node0 2022-08-25T21:18:35.977597Z [httpworker.0] [validation.cpp:2751] [ConnectTip] [bench]   - Connect postprocess: 1.06ms [0.08s (0.42ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.977643Z [httpworker.0] [validation.cpp:2752] [ConnectTip] [bench] - Connect block: 2.92ms [0.17s (0.95ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.977696Z [httpworker.0] [txmempool.cpp:736] [check] [mempool] Checking mempool with 0 transactions and 0 inputs [0m
[0;34m node0 2022-08-25T21:18:35.977792Z [httpworker.0] [validationinterface.cpp:229] [BlockConnected] [validation] Enqueuing BlockConnected: block hash=4bb1264031937909c38599679ecd9c93deec69de694219219afa165dd1f3479c block height=90 [0m
[0;34m node0 2022-08-25T21:18:35.977868Z [httpworker.0] [validationinterface.cpp:202] [UpdatedBlockTip] [validation] Enqueuing UpdatedBlockTip: new block hash=4bb1264031937909c38599679ecd9c93deec69de694219219afa165dd1f3479c fork block hash=407d5119b17315c6707a8787a66b35f8f57efe4591da11a99165551941f867f9 (in IBD=false) [0m
[0;34m node0 2022-08-25T21:18:35.977992Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention m_node.mempool->cs, node/interfaces.cpp:619 completed (3180Î¼s) [0m
[0;34m node0 2022-08-25T21:18:35.978269Z [scheduler] [validationinterface.cpp:202] [operator()] [validation] UpdatedBlockTip: new block hash=407d5119b17315c6707a8787a66b35f8f57efe4591da11a99165551941f867f9 fork block hash=3d01664a985031a145af2bf563ca309910ab4c78d15b9f87a241546314a90a72 (in IBD=false) [0m
[0;34m node0 2022-08-25T21:18:35.978734Z [scheduler] [validationinterface.cpp:229] [operator()] [validation] BlockConnected: block hash=4bb1264031937909c38599679ecd9c93deec69de694219219afa165dd1f3479c block height=90 [0m
[0;34m node0 2022-08-25T21:18:35.980260Z [httpworker.0] [node/miner.cpp:163] [CreateNewBlock] CreateNewBlock(): block weight: 900 txs: 0 fees: 0 sigops 400 [0m
[0;34m node0 2022-08-25T21:18:35.980330Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, net_processing.cpp:1720 started [0m
[0;34m node0 2022-08-25T21:18:35.980423Z [httpworker.0] [validation.cpp:2060] [ConnectBlock] [bench]     - Sanity checks: 0.01ms [0.00s (0.01ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.980500Z [httpworker.0] [validation.cpp:2159] [ConnectBlock] [bench]     - Fork checks: 0.09ms [0.02s (0.12ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.980583Z [httpworker.0] [validation.cpp:2244] [ConnectBlock] [bench]       - Connect 1 transactions: 0.07ms (0.067ms/tx, 0.000ms/txin) [0.02s (0.09ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.980652Z [httpworker.0] [validation.cpp:2257] [ConnectBlock] [bench]     - Verify 0 txins: 0.15ms (0.000ms/txin) [0.03s (0.19ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.980712Z [httpworker.0] [node/miner.cpp:178] [CreateNewBlock] [bench] CreateNewBlock() packages: 0.04ms (0 packages, 0 updated descendants), validity: 1.89ms (total 1.93ms) [0m
[0;34m node0 2022-08-25T21:18:35.981179Z [httpworker.0] [validationinterface.cpp:257] [NewPoWValidBlock] [validation] NewPoWValidBlock: block hash=558c056e0612d808de4c992fe83ea832236eed71bd13e5ef1f67a74d3adbb5c3 [0m
[0;34m node0 2022-08-25T21:18:35.981927Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, net_processing.cpp:1720 completed (1498Î¼s) [0m
[0;34m node0 2022-08-25T21:18:35.982567Z [httpworker.0] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, validation.cpp:2989 started [0m
[0;34m node0 2022-08-25T21:18:35.982645Z [httpworker.0] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, validation.cpp:2989 completed (10Î¼s) [0m
[0;34m node0 2022-08-25T21:18:35.982813Z [httpworker.0] [validation.cpp:2710] [ConnectTip] [bench]   - Using cached block [0m
[0;34m node0 2022-08-25T21:18:35.982869Z [httpworker.0] [validation.cpp:2717] [ConnectTip] [bench]   - Load block from disk: 0.05ms [0.01s (0.05ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.982955Z [httpworker.0] [validation.cpp:2060] [ConnectBlock] [bench]     - Sanity checks: 0.00ms [0.00s (0.01ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.983018Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, node/interfaces.cpp:543 started [0m
[0;34m node0 2022-08-25T21:18:35.983159Z [httpworker.0] [validation.cpp:2159] [ConnectBlock] [bench]     - Fork checks: 0.07ms [0.02s (0.12ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.983240Z [httpworker.0] [validation.cpp:2244] [ConnectBlock] [bench]       - Connect 1 transactions: 0.20ms (0.204ms/tx, 0.000ms/txin) [0.02s (0.09ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.983307Z [httpworker.0] [validation.cpp:2257] [ConnectBlock] [bench]     - Verify 0 txins: 0.28ms (0.000ms/txin) [0.03s (0.19ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.983424Z [httpworker.0] [validation.cpp:2267] [ConnectBlock] [bench]     - Write undo data: 0.12ms [0.01s (0.07ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.983476Z [httpworker.0] [validation.cpp:2278] [ConnectBlock] [bench]     - Index writing: 0.06ms [0.01s (0.04ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.983539Z [httpworker.0] [validationinterface.cpp:252] [BlockChecked] [validation] BlockChecked: block hash=558c056e0612d808de4c992fe83ea832236eed71bd13e5ef1f67a74d3adbb5c3 state=Valid [0m
[0;34m node0 2022-08-25T21:18:35.983633Z [httpworker.0] [validation.cpp:2729] [ConnectTip] [bench]   - Connect total: 0.77ms [0.08s (0.42ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.984322Z [httpworker.0] [validation.cpp:2734] [ConnectTip] [bench]   - Flush: 0.68ms [0.01s (0.04ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.984396Z [httpworker.0] [validation.cpp:2740] [ConnectTip] [bench]   - Writing chainstate: 0.08ms [0.01s (0.03ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.984884Z [httpworker.0] [policy/fees.cpp:667] [processBlock] [estimatefee] Blockpolicy estimates updated by 0 of 0 block txs, since last block 0 of 0 tracked, mempool map size 0, max target 0 from current [0m
[0;34m node0 2022-08-25T21:18:35.985008Z [httpworker.0] [validation.cpp:2519] [UpdateTipLog] UpdateTip: new best=558c056e0612d808de4c992fe83ea832236eed71bd13e5ef1f67a74d3adbb5c3 height=91 version=0x20000000 log2_work=7.523562 tx=92 date='2022-08-25T21:18:51Z' progress=1.000000 cache=0.0MiB(91txo) [0m
[0;34m node0 2022-08-25T21:18:35.985726Z [httpworker.0] [validation.cpp:2751] [ConnectTip] [bench]   - Connect postprocess: 1.32ms [0.08s (0.43ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.985774Z [httpworker.0] [validation.cpp:2752] [ConnectTip] [bench] - Connect block: 2.91ms [0.18s (0.96ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.985829Z [httpworker.0] [txmempool.cpp:736] [check] [mempool] Checking mempool with 0 transactions and 0 inputs [0m
[0;34m node0 2022-08-25T21:18:35.985926Z [httpworker.0] [validationinterface.cpp:229] [BlockConnected] [validation] Enqueuing BlockConnected: block hash=558c056e0612d808de4c992fe83ea832236eed71bd13e5ef1f67a74d3adbb5c3 block height=91 [0m
[0;34m node0 2022-08-25T21:18:35.986003Z [httpworker.0] [validationinterface.cpp:202] [UpdatedBlockTip] [validation] Enqueuing UpdatedBlockTip: new block hash=558c056e0612d808de4c992fe83ea832236eed71bd13e5ef1f67a74d3adbb5c3 fork block hash=4bb1264031937909c38599679ecd9c93deec69de694219219afa165dd1f3479c (in IBD=false) [0m
[0;34m node0 2022-08-25T21:18:35.986480Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, node/interfaces.cpp:543 completed (3314Î¼s) [0m
[0;34m node0 2022-08-25T21:18:35.986579Z [httpworker.0] [logging/timer.h:57] [Log] [lock] Enter: lock contention ::cs_main, validation.cpp:5030 started [0m
[0;34m node0 2022-08-25T21:18:35.986681Z [scheduler] [wallet/wallet.h:827] [WalletLogPrintf] [default wallet] AddToWallet 754d92603ec56104299c39e5d6a81ee44d582abe977226dbbd9930840b56b9fe  new [0m
[0;34m node0 2022-08-25T21:18:35.986748Z [httpworker.0] [logging/timer.h:57] [Log] [lock] Enter: lock contention ::cs_main, validation.cpp:5030 completed (9Î¼s) [0m
[0;34m node0 2022-08-25T21:18:35.986887Z [httpworker.0] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_args, util/system.cpp:1095 started [0m
[0;34m node0 2022-08-25T21:18:35.986957Z [httpworker.0] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_args, util/system.cpp:1095 completed (11Î¼s) [0m
[0;34m node0 2022-08-25T21:18:35.987068Z [scheduler] [validationinterface.cpp:202] [operator()] [validation] UpdatedBlockTip: new block hash=4bb1264031937909c38599679ecd9c93deec69de694219219afa165dd1f3479c fork block hash=407d5119b17315c6707a8787a66b35f8f57efe4591da11a99165551941f867f9 (in IBD=false) [0m
[0;34m node0 2022-08-25T21:18:35.988030Z [httpworker.0] [node/miner.cpp:163] [CreateNewBlock] CreateNewBlock(): block weight: 900 txs: 0 fees: 0 sigops 400 [0m
[0;34m node0 2022-08-25T21:18:35.988271Z [scheduler] [validationinterface.cpp:229] [operator()] [validation] BlockConnected: block hash=558c056e0612d808de4c992fe83ea832236eed71bd13e5ef1f67a74d3adbb5c3 block height=91 [0m
[0;34m node0 2022-08-25T21:18:35.988356Z [httpworker.0] [validation.cpp:2060] [ConnectBlock] [bench]     - Sanity checks: 0.01ms [0.00s (0.01ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.988418Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, net_processing.cpp:1720 started [0m
[0;34m node0 2022-08-25T21:18:35.988498Z [httpworker.0] [validation.cpp:2159] [ConnectBlock] [bench]     - Fork checks: 0.14ms [0.02s (0.12ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.988584Z [httpworker.0] [validation.cpp:2244] [ConnectBlock] [bench]       - Connect 1 transactions: 0.13ms (0.133ms/tx, 0.000ms/txin) [0.02s (0.09ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.988652Z [httpworker.0] [validation.cpp:2257] [ConnectBlock] [bench]     - Verify 0 txins: 0.21ms (0.000ms/txin) [0.03s (0.19ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.988710Z [httpworker.0] [node/miner.cpp:178] [CreateNewBlock] [bench] CreateNewBlock() packages: 0.21ms (0 packages, 0 updated descendants), validity: 1.66ms (total 1.86ms) [0m
[0;34m node0 2022-08-25T21:18:35.988810Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, net_processing.cpp:1720 completed (313Î¼s) [0m
[0;34m node0 2022-08-25T21:18:35.988889Z [httpworker.0] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, validation.cpp:3788 started [0m
[0;34m node0 2022-08-25T21:18:35.988954Z [httpworker.0] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, validation.cpp:3788 completed (9Î¼s) [0m
[0;34m node0 2022-08-25T21:18:35.989338Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, node/interfaces.cpp:543 started [0m
[0;34m node0 2022-08-25T21:18:35.989532Z [httpworker.0] [validationinterface.cpp:257] [NewPoWValidBlock] [validation] NewPoWValidBlock: block hash=7fbe1f7983a263281406b7b6c6850f4a0e011f4544b61efa6aa35c44d78efc0e [0m
[0;34m node0 2022-08-25T21:18:35.990162Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, node/interfaces.cpp:543 completed (754Î¼s) [0m
[0;34m node0 2022-08-25T21:18:35.990236Z [httpworker.0] [logging/timer.h:57] [Log] [lock] Enter: lock contention ::cs_main, validation.cpp:5030 started [0m
[0;34m node0 2022-08-25T21:18:35.990317Z [scheduler] [wallet/wallet.h:827] [WalletLogPrintf] [default wallet] AddToWallet 37c769eca7ad845e5cb6848d171358753d573d4fb61a7e7ade09c3a0db5c7b33  new [0m
[0;34m node0 2022-08-25T21:18:35.990375Z [httpworker.0] [logging/timer.h:57] [Log] [lock] Enter: lock contention ::cs_main, validation.cpp:5030 completed (10Î¼s) [0m
[0;34m node0 2022-08-25T21:18:35.990561Z [httpworker.0] [validation.cpp:2710] [ConnectTip] [bench]   - Using cached block [0m
[0;34m node0 2022-08-25T21:18:35.990630Z [httpworker.0] [validation.cpp:2717] [ConnectTip] [bench]   - Load block from disk: 0.06ms [0.01s (0.05ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.990683Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention m_node.mempool->cs, node/interfaces.cpp:619 started [0m
[0;34m node0 2022-08-25T21:18:35.990759Z [httpworker.0] [validation.cpp:2060] [ConnectBlock] [bench]     - Sanity checks: 0.00ms [0.00s (0.01ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.990832Z [httpworker.0] [validation.cpp:2159] [ConnectBlock] [bench]     - Fork checks: 0.11ms [0.02s (0.12ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.990904Z [httpworker.0] [validation.cpp:2244] [ConnectBlock] [bench]       - Connect 1 transactions: 0.06ms (0.064ms/tx, 0.000ms/txin) [0.02s (0.09ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.990971Z [httpworker.0] [validation.cpp:2257] [ConnectBlock] [bench]     - Verify 0 txins: 0.14ms (0.000ms/txin) [0.03s (0.19ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.991112Z [httpworker.0] [validation.cpp:2267] [ConnectBlock] [bench]     - Write undo data: 0.14ms [0.01s (0.07ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.991164Z [httpworker.0] [validation.cpp:2278] [ConnectBlock] [bench]     - Index writing: 0.06ms [0.01s (0.04ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.991227Z [httpworker.0] [validationinterface.cpp:252] [BlockChecked] [validation] BlockChecked: block hash=7fbe1f7983a263281406b7b6c6850f4a0e011f4544b61efa6aa35c44d78efc0e state=Valid [0m
[0;34m node0 2022-08-25T21:18:35.991310Z [httpworker.0] [validation.cpp:2729] [ConnectTip] [bench]   - Connect total: 0.69ms [0.08s (0.42ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.991361Z [httpworker.0] [validation.cpp:2734] [ConnectTip] [bench]   - Flush: 0.05ms [0.01s (0.04ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.991425Z [httpworker.0] [validation.cpp:2740] [ConnectTip] [bench]   - Writing chainstate: 0.06ms [0.01s (0.03ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.991899Z [httpworker.0] [policy/fees.cpp:667] [processBlock] [estimatefee] Blockpolicy estimates updated by 0 of 0 block txs, since last block 0 of 0 tracked, mempool map size 0, max target 0 from current [0m
[0;34m node0 2022-08-25T21:18:35.992012Z [httpworker.0] [validation.cpp:2519] [UpdateTipLog] UpdateTip: new best=7fbe1f7983a263281406b7b6c6850f4a0e011f4544b61efa6aa35c44d78efc0e height=92 version=0x20000000 log2_work=7.539159 tx=93 date='2022-08-25T21:18:52Z' progress=1.000000 cache=0.0MiB(92txo) [0m
[0;34m node0 2022-08-25T21:18:35.992083Z [httpworker.0] [validation.cpp:2751] [ConnectTip] [bench]   - Connect postprocess: 0.66ms [0.08s (0.42ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.992130Z [httpworker.0] [validation.cpp:2752] [ConnectTip] [bench] - Connect block: 1.52ms [0.18s (0.96ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.992185Z [httpworker.0] [txmempool.cpp:736] [check] [mempool] Checking mempool with 0 transactions and 0 inputs [0m
[0;34m node0 2022-08-25T21:18:35.992279Z [httpworker.0] [validationinterface.cpp:229] [BlockConnected] [validation] Enqueuing BlockConnected: block hash=7fbe1f7983a263281406b7b6c6850f4a0e011f4544b61efa6aa35c44d78efc0e block height=92 [0m
[0;34m node0 2022-08-25T21:18:35.992355Z [httpworker.0] [validationinterface.cpp:202] [UpdatedBlockTip] [validation] Enqueuing UpdatedBlockTip: new block hash=7fbe1f7983a263281406b7b6c6850f4a0e011f4544b61efa6aa35c44d78efc0e fork block hash=558c056e0612d808de4c992fe83ea832236eed71bd13e5ef1f67a74d3adbb5c3 (in IBD=false) [0m
[0;34m node0 2022-08-25T21:18:35.992484Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention m_node.mempool->cs, node/interfaces.cpp:619 completed (1721Î¼s) [0m
[0;34m node0 2022-08-25T21:18:35.992817Z [scheduler] [validationinterface.cpp:202] [operator()] [validation] UpdatedBlockTip: new block hash=558c056e0612d808de4c992fe83ea832236eed71bd13e5ef1f67a74d3adbb5c3 fork block hash=4bb1264031937909c38599679ecd9c93deec69de694219219afa165dd1f3479c (in IBD=false) [0m
[0;34m node0 2022-08-25T21:18:35.993126Z [scheduler] [validationinterface.cpp:229] [operator()] [validation] BlockConnected: block hash=7fbe1f7983a263281406b7b6c6850f4a0e011f4544b61efa6aa35c44d78efc0e block height=92 [0m
[0;34m node0 2022-08-25T21:18:35.993539Z [httpworker.0] [node/miner.cpp:163] [CreateNewBlock] CreateNewBlock(): block weight: 900 txs: 0 fees: 0 sigops 400 [0m
[0;34m node0 2022-08-25T21:18:35.993802Z [httpworker.0] [validation.cpp:2060] [ConnectBlock] [bench]     - Sanity checks: 0.01ms [0.00s (0.01ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.993871Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, node/interfaces.cpp:543 started [0m
[0;34m node0 2022-08-25T21:18:35.993948Z [httpworker.0] [validation.cpp:2159] [ConnectBlock] [bench]     - Fork checks: 0.10ms [0.02s (0.12ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.994026Z [httpworker.0] [validation.cpp:2244] [ConnectBlock] [bench]       - Connect 1 transactions: 0.13ms (0.128ms/tx, 0.000ms/txin) [0.02s (0.09ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.994115Z [httpworker.0] [validation.cpp:2257] [ConnectBlock] [bench]     - Verify 0 txins: 0.22ms (0.000ms/txin) [0.03s (0.19ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.994175Z [httpworker.0] [node/miner.cpp:178] [CreateNewBlock] [bench] CreateNewBlock() packages: 0.17ms (0 packages, 0 updated descendants), validity: 0.70ms (total 0.86ms) [0m
[0;34m node0 2022-08-25T21:18:35.994273Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, node/interfaces.cpp:543 completed (322Î¼s) [0m
[0;34m node0 2022-08-25T21:18:35.994344Z [httpworker.0] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, validation.cpp:3788 started [0m
[0;34m node0 2022-08-25T21:18:35.994415Z [scheduler] [wallet/wallet.h:827] [WalletLogPrintf] [default wallet] AddToWallet f70e51df49c902b01d1f56993f0e00d29327299da0f4a99503711ab87765d480  new [0m
[0;34m node0 2022-08-25T21:18:35.994481Z [httpworker.0] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, validation.cpp:3788 completed (9Î¼s) [0m
[0;34m node0 2022-08-25T21:18:35.994729Z [scheduler] [validationinterface.cpp:202] [operator()] [validation] UpdatedBlockTip: new block hash=7fbe1f7983a263281406b7b6c6850f4a0e011f4544b61efa6aa35c44d78efc0e fork block hash=558c056e0612d808de4c992fe83ea832236eed71bd13e5ef1f67a74d3adbb5c3 (in IBD=false) [0m
[0;34m node0 2022-08-25T21:18:35.995248Z [httpworker.0] [validationinterface.cpp:257] [NewPoWValidBlock] [validation] NewPoWValidBlock: block hash=34a9cab10b34c679f4bee871b50f7a84606b6ba3aa7509e21f88a5595c4a796f [0m
[0;34m node0 2022-08-25T21:18:35.996435Z [httpworker.0] [validation.cpp:2710] [ConnectTip] [bench]   - Using cached block [0m
[0;34m node0 2022-08-25T21:18:35.997081Z [httpworker.0] [validation.cpp:2717] [ConnectTip] [bench]   - Load block from disk: 0.62ms [0.01s (0.05ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.997176Z [httpworker.0] [validation.cpp:2060] [ConnectBlock] [bench]     - Sanity checks: 0.00ms [0.00s (0.01ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.997249Z [httpworker.0] [validation.cpp:2159] [ConnectBlock] [bench]     - Fork checks: 0.08ms [0.02s (0.12ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.997324Z [httpworker.0] [validation.cpp:2244] [ConnectBlock] [bench]       - Connect 1 transactions: 0.07ms (0.066ms/tx, 0.000ms/txin) [0.02s (0.09ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.997392Z [httpworker.0] [validation.cpp:2257] [ConnectBlock] [bench]     - Verify 0 txins: 0.14ms (0.000ms/txin) [0.03s (0.19ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.997509Z [httpworker.0] [validation.cpp:2267] [ConnectBlock] [bench]     - Write undo data: 0.12ms [0.01s (0.07ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.997577Z [httpworker.0] [validation.cpp:2278] [ConnectBlock] [bench]     - Index writing: 0.06ms [0.01s (0.04ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.997640Z [httpworker.0] [validationinterface.cpp:252] [BlockChecked] [validation] BlockChecked: block hash=34a9cab10b34c679f4bee871b50f7a84606b6ba3aa7509e21f88a5595c4a796f state=Valid [0m
[0;34m node0 2022-08-25T21:18:35.998318Z [httpworker.0] [validation.cpp:2729] [ConnectTip] [bench]   - Connect total: 1.26ms [0.08s (0.42ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.998375Z [httpworker.0] [validation.cpp:2734] [ConnectTip] [bench]   - Flush: 0.06ms [0.01s (0.04ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.998439Z [httpworker.0] [validation.cpp:2740] [ConnectTip] [bench]   - Writing chainstate: 0.06ms [0.01s (0.03ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.998914Z [httpworker.0] [policy/fees.cpp:667] [processBlock] [estimatefee] Blockpolicy estimates updated by 0 of 0 block txs, since last block 0 of 0 tracked, mempool map size 0, max target 0 from current [0m
[0;34m node0 2022-08-25T21:18:35.999472Z [httpworker.0] [validation.cpp:2519] [UpdateTipLog] UpdateTip: new best=34a9cab10b34c679f4bee871b50f7a84606b6ba3aa7509e21f88a5595c4a796f height=93 version=0x20000000 log2_work=7.554589 tx=94 date='2022-08-25T21:18:52Z' progress=1.000000 cache=0.0MiB(93txo) [0m
[0;34m node0 2022-08-25T21:18:35.999529Z [httpworker.0] [validation.cpp:2751] [ConnectTip] [bench]   - Connect postprocess: 1.09ms [0.08s (0.43ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.999582Z [httpworker.0] [validation.cpp:2752] [ConnectTip] [bench] - Connect block: 3.09ms [0.18s (0.96ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:35.999638Z [httpworker.0] [txmempool.cpp:736] [check] [mempool] Checking mempool with 0 transactions and 0 inputs [0m
[0;34m node0 2022-08-25T21:18:35.999740Z [httpworker.0] [validationinterface.cpp:229] [BlockConnected] [validation] Enqueuing BlockConnected: block hash=34a9cab10b34c679f4bee871b50f7a84606b6ba3aa7509e21f88a5595c4a796f block height=93 [0m
[0;34m node0 2022-08-25T21:18:35.999844Z [httpworker.0] [validationinterface.cpp:202] [UpdatedBlockTip] [validation] Enqueuing UpdatedBlockTip: new block hash=34a9cab10b34c679f4bee871b50f7a84606b6ba3aa7509e21f88a5595c4a796f fork block hash=7fbe1f7983a263281406b7b6c6850f4a0e011f4544b61efa6aa35c44d78efc0e (in IBD=false) [0m
[0;34m node0 2022-08-25T21:18:35.999943Z [scheduler] [validationinterface.cpp:229] [operator()] [validation] BlockConnected: block hash=34a9cab10b34c679f4bee871b50f7a84606b6ba3aa7509e21f88a5595c4a796f block height=93 [0m
[0;34m node0 2022-08-25T21:18:36.000158Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, net_processing.cpp:1720 started [0m
[0;34m node0 2022-08-25T21:18:36.000383Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, net_processing.cpp:1720 completed (147Î¼s) [0m
[0;34m node0 2022-08-25T21:18:36.000459Z [httpworker.0] [logging/timer.h:57] [Log] [lock] Enter: lock contention ::cs_main, validation.cpp:5030 started [0m
[0;34m node0 2022-08-25T21:18:36.000531Z [httpworker.0] [logging/timer.h:57] [Log] [lock] Enter: lock contention ::cs_main, validation.cpp:5030 completed (10Î¼s) [0m
[0;34m node0 2022-08-25T21:18:36.000751Z [httpworker.0] [node/miner.cpp:163] [CreateNewBlock] CreateNewBlock(): block weight: 900 txs: 0 fees: 0 sigops 400 [0m
[0;34m node0 2022-08-25T21:18:36.000882Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, node/interfaces.cpp:543 started [0m
[0;34m node0 2022-08-25T21:18:36.000946Z [httpworker.0] [validation.cpp:2060] [ConnectBlock] [bench]     - Sanity checks: 0.01ms [0.00s (0.01ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.001021Z [httpworker.0] [validation.cpp:2159] [ConnectBlock] [bench]     - Fork checks: 0.08ms [0.02s (0.12ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.001119Z [httpworker.0] [validation.cpp:2244] [ConnectBlock] [bench]       - Connect 1 transactions: 0.09ms (0.089ms/tx, 0.000ms/txin) [0.02s (0.09ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.001186Z [httpworker.0] [validation.cpp:2257] [ConnectBlock] [bench]     - Verify 0 txins: 0.16ms (0.000ms/txin) [0.03s (0.19ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.001245Z [httpworker.0] [node/miner.cpp:178] [CreateNewBlock] [bench] CreateNewBlock() packages: 0.06ms (0 packages, 0 updated descendants), validity: 0.55ms (total 0.61ms) [0m
[0;34m node0 2022-08-25T21:18:36.001355Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, node/interfaces.cpp:543 completed (401Î¼s) [0m
[0;34m node0 2022-08-25T21:18:36.001426Z [httpworker.0] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, validation.cpp:3788 started [0m
[0;34m node0 2022-08-25T21:18:36.001508Z [httpworker.0] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, validation.cpp:3788 completed (9Î¼s) [0m
[0;34m node0 2022-08-25T21:18:36.001571Z [scheduler] [wallet/wallet.h:827] [WalletLogPrintf] [default wallet] AddToWallet e40f724e057da282ffff082dd0494187074d28647a2a79ee96ac1943496e50d4  new [0m
[0;34m node0 2022-08-25T21:18:36.002022Z [scheduler] [validationinterface.cpp:202] [operator()] [validation] UpdatedBlockTip: new block hash=34a9cab10b34c679f4bee871b50f7a84606b6ba3aa7509e21f88a5595c4a796f fork block hash=7fbe1f7983a263281406b7b6c6850f4a0e011f4544b61efa6aa35c44d78efc0e (in IBD=false) [0m
[0;34m node0 2022-08-25T21:18:36.002421Z [httpworker.0] [validationinterface.cpp:257] [NewPoWValidBlock] [validation] NewPoWValidBlock: block hash=73e2238b06b26fc137e105b05f6d93a234df2153fc1c16ac817c7bbfa8302528 [0m
[0;34m node0 2022-08-25T21:18:36.003117Z [httpworker.0] [validation.cpp:2710] [ConnectTip] [bench]   - Using cached block [0m
[0;34m node0 2022-08-25T21:18:36.003176Z [httpworker.0] [validation.cpp:2717] [ConnectTip] [bench]   - Load block from disk: 0.06ms [0.01s (0.05ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.003260Z [httpworker.0] [validation.cpp:2060] [ConnectBlock] [bench]     - Sanity checks: 0.00ms [0.00s (0.01ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.003328Z [httpworker.0] [validation.cpp:2159] [ConnectBlock] [bench]     - Fork checks: 0.07ms [0.02s (0.12ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.003401Z [httpworker.0] [validation.cpp:2244] [ConnectBlock] [bench]       - Connect 1 transactions: 0.06ms (0.063ms/tx, 0.000ms/txin) [0.02s (0.09ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.003467Z [httpworker.0] [validation.cpp:2257] [ConnectBlock] [bench]     - Verify 0 txins: 0.13ms (0.000ms/txin) [0.04s (0.19ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.003587Z [httpworker.0] [validation.cpp:2267] [ConnectBlock] [bench]     - Write undo data: 0.12ms [0.01s (0.07ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.003638Z [httpworker.0] [validation.cpp:2278] [ConnectBlock] [bench]     - Index writing: 0.06ms [0.01s (0.04ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.003699Z [httpworker.0] [validationinterface.cpp:252] [BlockChecked] [validation] BlockChecked: block hash=73e2238b06b26fc137e105b05f6d93a234df2153fc1c16ac817c7bbfa8302528 state=Valid [0m
[0;34m node0 2022-08-25T21:18:36.003782Z [httpworker.0] [validation.cpp:2729] [ConnectTip] [bench]   - Connect total: 0.61ms [0.08s (0.42ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.003833Z [httpworker.0] [validation.cpp:2734] [ConnectTip] [bench]   - Flush: 0.05ms [0.01s (0.04ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.003895Z [httpworker.0] [validation.cpp:2740] [ConnectTip] [bench]   - Writing chainstate: 0.06ms [0.01s (0.03ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.004378Z [httpworker.0] [policy/fees.cpp:667] [processBlock] [estimatefee] Blockpolicy estimates updated by 0 of 0 block txs, since last block 0 of 0 tracked, mempool map size 0, max target 0 from current [0m
[0;34m node0 2022-08-25T21:18:36.004492Z [httpworker.0] [validation.cpp:2519] [UpdateTipLog] UpdateTip: new best=73e2238b06b26fc137e105b05f6d93a234df2153fc1c16ac817c7bbfa8302528 height=94 version=0x20000000 log2_work=7.569856 tx=95 date='2022-08-25T21:18:52Z' progress=1.000000 cache=0.0MiB(94txo) [0m
[0;34m node0 2022-08-25T21:18:36.004543Z [httpworker.0] [validation.cpp:2751] [ConnectTip] [bench]   - Connect postprocess: 0.65ms [0.08s (0.42ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.004595Z [httpworker.0] [validation.cpp:2752] [ConnectTip] [bench] - Connect block: 1.42ms [0.18s (0.96ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.004648Z [httpworker.0] [txmempool.cpp:736] [check] [mempool] Checking mempool with 0 transactions and 0 inputs [0m
[0;34m node0 2022-08-25T21:18:36.004742Z [httpworker.0] [validationinterface.cpp:229] [BlockConnected] [validation] Enqueuing BlockConnected: block hash=73e2238b06b26fc137e105b05f6d93a234df2153fc1c16ac817c7bbfa8302528 block height=94 [0m
[0;34m node0 2022-08-25T21:18:36.004843Z [httpworker.0] [validationinterface.cpp:202] [UpdatedBlockTip] [validation] Enqueuing UpdatedBlockTip: new block hash=73e2238b06b26fc137e105b05f6d93a234df2153fc1c16ac817c7bbfa8302528 fork block hash=34a9cab10b34c679f4bee871b50f7a84606b6ba3aa7509e21f88a5595c4a796f (in IBD=false) [0m
[0;34m node0 2022-08-25T21:18:36.004932Z [scheduler] [validationinterface.cpp:229] [operator()] [validation] BlockConnected: block hash=73e2238b06b26fc137e105b05f6d93a234df2153fc1c16ac817c7bbfa8302528 block height=94 [0m
[0;34m node0 2022-08-25T21:18:36.005148Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, net_processing.cpp:1720 started [0m
[0;34m node0 2022-08-25T21:18:36.005398Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, net_processing.cpp:1720 completed (188Î¼s) [0m
[0;34m node0 2022-08-25T21:18:36.005473Z [httpworker.0] [logging/timer.h:57] [Log] [lock] Enter: lock contention ::cs_main, validation.cpp:5030 started [0m
[0;34m node0 2022-08-25T21:18:36.005545Z [httpworker.0] [logging/timer.h:57] [Log] [lock] Enter: lock contention ::cs_main, validation.cpp:5030 completed (9Î¼s) [0m
[0;34m node0 2022-08-25T21:18:36.005810Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, node/interfaces.cpp:543 started [0m
[0;34m node0 2022-08-25T21:18:36.005870Z [httpworker.0] [node/miner.cpp:163] [CreateNewBlock] CreateNewBlock(): block weight: 900 txs: 0 fees: 0 sigops 400 [0m
[0;34m node0 2022-08-25T21:18:36.006017Z [httpworker.0] [validation.cpp:2060] [ConnectBlock] [bench]     - Sanity checks: 0.01ms [0.00s (0.01ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.006119Z [httpworker.0] [validation.cpp:2159] [ConnectBlock] [bench]     - Fork checks: 0.11ms [0.02s (0.12ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.006193Z [httpworker.0] [validation.cpp:2244] [ConnectBlock] [bench]       - Connect 1 transactions: 0.07ms (0.067ms/tx, 0.000ms/txin) [0.02s (0.09ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.006259Z [httpworker.0] [validation.cpp:2257] [ConnectBlock] [bench]     - Verify 0 txins: 0.14ms (0.000ms/txin) [0.04s (0.19ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.006318Z [httpworker.0] [node/miner.cpp:178] [CreateNewBlock] [bench] CreateNewBlock() packages: 0.11ms (0 packages, 0 updated descendants), validity: 0.57ms (total 0.68ms) [0m
[0;34m node0 2022-08-25T21:18:36.006416Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, node/interfaces.cpp:543 completed (531Î¼s) [0m
[0;34m node0 2022-08-25T21:18:36.007677Z [httpworker.0] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, validation.cpp:3788 started [0m
[0;34m node0 2022-08-25T21:18:36.007767Z [scheduler] [wallet/wallet.h:827] [WalletLogPrintf] [default wallet] AddToWallet 2afdb0312ea6a25b850f4040c8789f092954c70cd06a6889eefb3163462e639c  new [0m
[0;34m node0 2022-08-25T21:18:36.007839Z [httpworker.0] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, validation.cpp:3788 completed (9Î¼s) [0m
[0;34m node0 2022-08-25T21:18:36.008245Z [scheduler] [validationinterface.cpp:202] [operator()] [validation] UpdatedBlockTip: new block hash=73e2238b06b26fc137e105b05f6d93a234df2153fc1c16ac817c7bbfa8302528 fork block hash=34a9cab10b34c679f4bee871b50f7a84606b6ba3aa7509e21f88a5595c4a796f (in IBD=false) [0m
[0;34m node0 2022-08-25T21:18:36.008841Z [httpworker.0] [validationinterface.cpp:257] [NewPoWValidBlock] [validation] NewPoWValidBlock: block hash=7fae2e83bd7856add753fb7724dcd7180ecd9acdded004cc15ad94e81183afe7 [0m
[0;34m node0 2022-08-25T21:18:36.009644Z [httpworker.0] [validation.cpp:2710] [ConnectTip] [bench]   - Using cached block [0m
[0;34m node0 2022-08-25T21:18:36.009705Z [httpworker.0] [validation.cpp:2717] [ConnectTip] [bench]   - Load block from disk: 0.06ms [0.01s (0.05ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.009794Z [httpworker.0] [validation.cpp:2060] [ConnectBlock] [bench]     - Sanity checks: 0.00ms [0.00s (0.01ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.009865Z [httpworker.0] [validation.cpp:2159] [ConnectBlock] [bench]     - Fork checks: 0.07ms [0.02s (0.12ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.009938Z [httpworker.0] [validation.cpp:2244] [ConnectBlock] [bench]       - Connect 1 transactions: 0.07ms (0.065ms/tx, 0.000ms/txin) [0.02s (0.09ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.010005Z [httpworker.0] [validation.cpp:2257] [ConnectBlock] [bench]     - Verify 0 txins: 0.14ms (0.000ms/txin) [0.04s (0.18ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.010143Z [httpworker.0] [validation.cpp:2267] [ConnectBlock] [bench]     - Write undo data: 0.14ms [0.01s (0.07ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.010195Z [httpworker.0] [validation.cpp:2278] [ConnectBlock] [bench]     - Index writing: 0.06ms [0.01s (0.04ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.010264Z [httpworker.0] [validationinterface.cpp:252] [BlockChecked] [validation] BlockChecked: block hash=7fae2e83bd7856add753fb7724dcd7180ecd9acdded004cc15ad94e81183afe7 state=Valid [0m
[0;34m node0 2022-08-25T21:18:36.010346Z [httpworker.0] [validation.cpp:2729] [ConnectTip] [bench]   - Connect total: 0.65ms [0.08s (0.42ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.010399Z [httpworker.0] [validation.cpp:2734] [ConnectTip] [bench]   - Flush: 0.06ms [0.01s (0.04ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.010463Z [httpworker.0] [validation.cpp:2740] [ConnectTip] [bench]   - Writing chainstate: 0.06ms [0.01s (0.03ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.010927Z [httpworker.0] [policy/fees.cpp:667] [processBlock] [estimatefee] Blockpolicy estimates updated by 0 of 0 block txs, since last block 0 of 0 tracked, mempool map size 0, max target 0 from current [0m
[0;34m node0 2022-08-25T21:18:36.011063Z [httpworker.0] [validation.cpp:2519] [UpdateTipLog] UpdateTip: new best=7fae2e83bd7856add753fb7724dcd7180ecd9acdded004cc15ad94e81183afe7 height=95 version=0x20000000 log2_work=7.584963 tx=96 date='2022-08-25T21:18:52Z' progress=1.000000 cache=0.0MiB(95txo) [0m
[0;34m node0 2022-08-25T21:18:36.011117Z [httpworker.0] [validation.cpp:2751] [ConnectTip] [bench]   - Connect postprocess: 0.65ms [0.08s (0.42ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.011162Z [httpworker.0] [validation.cpp:2752] [ConnectTip] [bench] - Connect block: 1.47ms [0.18s (0.96ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.011216Z [httpworker.0] [txmempool.cpp:736] [check] [mempool] Checking mempool with 0 transactions and 0 inputs [0m
[0;34m node0 2022-08-25T21:18:36.011310Z [httpworker.0] [validationinterface.cpp:229] [BlockConnected] [validation] Enqueuing BlockConnected: block hash=7fae2e83bd7856add753fb7724dcd7180ecd9acdded004cc15ad94e81183afe7 block height=95 [0m
[0;34m node0 2022-08-25T21:18:36.011412Z [httpworker.0] [validationinterface.cpp:202] [UpdatedBlockTip] [validation] Enqueuing UpdatedBlockTip: new block hash=7fae2e83bd7856add753fb7724dcd7180ecd9acdded004cc15ad94e81183afe7 fork block hash=73e2238b06b26fc137e105b05f6d93a234df2153fc1c16ac817c7bbfa8302528 (in IBD=false) [0m
[0;34m node0 2022-08-25T21:18:36.011497Z [scheduler] [validationinterface.cpp:229] [operator()] [validation] BlockConnected: block hash=7fae2e83bd7856add753fb7724dcd7180ecd9acdded004cc15ad94e81183afe7 block height=95 [0m
[0;34m node0 2022-08-25T21:18:36.011693Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, net_processing.cpp:1720 started [0m
[0;34m node0 2022-08-25T21:18:36.011938Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, net_processing.cpp:1720 completed (178Î¼s) [0m
[0;34m node0 2022-08-25T21:18:36.012015Z [httpworker.0] [logging/timer.h:57] [Log] [lock] Enter: lock contention ::cs_main, validation.cpp:5030 started [0m
[0;34m node0 2022-08-25T21:18:36.012105Z [httpworker.0] [logging/timer.h:57] [Log] [lock] Enter: lock contention ::cs_main, validation.cpp:5030 completed (10Î¼s) [0m
[0;34m node0 2022-08-25T21:18:36.012339Z [httpworker.0] [node/miner.cpp:163] [CreateNewBlock] CreateNewBlock(): block weight: 900 txs: 0 fees: 0 sigops 400 [0m
[0;34m node0 2022-08-25T21:18:36.012409Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, node/interfaces.cpp:543 started [0m
[0;34m node0 2022-08-25T21:18:36.012496Z [httpworker.0] [validation.cpp:2060] [ConnectBlock] [bench]     - Sanity checks: 0.01ms [0.00s (0.01ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.012578Z [httpworker.0] [validation.cpp:2159] [ConnectBlock] [bench]     - Fork checks: 0.08ms [0.02s (0.12ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.012652Z [httpworker.0] [validation.cpp:2244] [ConnectBlock] [bench]       - Connect 1 transactions: 0.07ms (0.073ms/tx, 0.000ms/txin) [0.02s (0.09ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.012718Z [httpworker.0] [validation.cpp:2257] [ConnectBlock] [bench]     - Verify 0 txins: 0.14ms (0.000ms/txin) [0.04s (0.18ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.012776Z [httpworker.0] [node/miner.cpp:178] [CreateNewBlock] [bench] CreateNewBlock() packages: 0.09ms (0 packages, 0 updated descendants), validity: 0.49ms (total 0.58ms) [0m
[0;34m node0 2022-08-25T21:18:36.012875Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, node/interfaces.cpp:543 completed (398Î¼s) [0m
[0;34m node0 2022-08-25T21:18:36.012960Z [httpworker.0] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, validation.cpp:3788 started [0m
[0;34m node0 2022-08-25T21:18:36.013054Z [scheduler] [wallet/wallet.h:827] [WalletLogPrintf] [default wallet] AddToWallet 64b2476682b2baf7e62e9bbca3c93cd750991cec3732cbf9c3da14e03648ac20  new [0m
[0;34m node0 2022-08-25T21:18:36.013123Z [httpworker.0] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, validation.cpp:3788 completed (9Î¼s) [0m
[0;34m node0 2022-08-25T21:18:36.013625Z [scheduler] [validationinterface.cpp:202] [operator()] [validation] UpdatedBlockTip: new block hash=7fae2e83bd7856add753fb7724dcd7180ecd9acdded004cc15ad94e81183afe7 fork block hash=73e2238b06b26fc137e105b05f6d93a234df2153fc1c16ac817c7bbfa8302528 (in IBD=false) [0m
[0;34m node0 2022-08-25T21:18:36.014101Z [httpworker.0] [validationinterface.cpp:257] [NewPoWValidBlock] [validation] NewPoWValidBlock: block hash=16183fefbcec16ce666cd7f72b1a16e8769bdf14807423dc23c8ccb22c89b892 [0m
[0;34m node0 2022-08-25T21:18:36.014961Z [httpworker.0] [validation.cpp:2710] [ConnectTip] [bench]   - Using cached block [0m
[0;34m node0 2022-08-25T21:18:36.015025Z [httpworker.0] [validation.cpp:2717] [ConnectTip] [bench]   - Load block from disk: 0.06ms [0.01s (0.05ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.015140Z [httpworker.0] [validation.cpp:2060] [ConnectBlock] [bench]     - Sanity checks: 0.00ms [0.00s (0.01ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.015216Z [httpworker.0] [validation.cpp:2159] [ConnectBlock] [bench]     - Fork checks: 0.08ms [0.02s (0.12ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.015295Z [httpworker.0] [validation.cpp:2244] [ConnectBlock] [bench]       - Connect 1 transactions: 0.07ms (0.070ms/tx, 0.000ms/txin) [0.02s (0.09ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.015366Z [httpworker.0] [validation.cpp:2257] [ConnectBlock] [bench]     - Verify 0 txins: 0.15ms (0.000ms/txin) [0.04s (0.18ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.015490Z [httpworker.0] [validation.cpp:2267] [ConnectBlock] [bench]     - Write undo data: 0.12ms [0.01s (0.07ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.015554Z [httpworker.0] [validation.cpp:2278] [ConnectBlock] [bench]     - Index writing: 0.06ms [0.01s (0.04ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.015621Z [httpworker.0] [validationinterface.cpp:252] [BlockChecked] [validation] BlockChecked: block hash=16183fefbcec16ce666cd7f72b1a16e8769bdf14807423dc23c8ccb22c89b892 state=Valid [0m
[0;34m node0 2022-08-25T21:18:36.015705Z [httpworker.0] [validation.cpp:2729] [ConnectTip] [bench]   - Connect total: 0.69ms [0.08s (0.42ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.015760Z [httpworker.0] [validation.cpp:2734] [ConnectTip] [bench]   - Flush: 0.06ms [0.01s (0.04ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.015824Z [httpworker.0] [validation.cpp:2740] [ConnectTip] [bench]   - Writing chainstate: 0.06ms [0.01s (0.03ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.016386Z [httpworker.0] [policy/fees.cpp:667] [processBlock] [estimatefee] Blockpolicy estimates updated by 0 of 0 block txs, since last block 0 of 0 tracked, mempool map size 0, max target 0 from current [0m
[0;34m node0 2022-08-25T21:18:36.016507Z [httpworker.0] [validation.cpp:2519] [UpdateTipLog] UpdateTip: new best=16183fefbcec16ce666cd7f72b1a16e8769bdf14807423dc23c8ccb22c89b892 height=96 version=0x20000000 log2_work=7.599913 tx=97 date='2022-08-25T21:18:52Z' progress=1.000000 cache=0.0MiB(96txo) [0m
[0;34m node0 2022-08-25T21:18:36.016567Z [httpworker.0] [validation.cpp:2751] [ConnectTip] [bench]   - Connect postprocess: 0.74ms [0.08s (0.42ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.016613Z [httpworker.0] [validation.cpp:2752] [ConnectTip] [bench] - Connect block: 1.60ms [0.18s (0.96ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.016668Z [httpworker.0] [txmempool.cpp:736] [check] [mempool] Checking mempool with 0 transactions and 0 inputs [0m
[0;34m node0 2022-08-25T21:18:36.016765Z [httpworker.0] [validationinterface.cpp:229] [BlockConnected] [validation] Enqueuing BlockConnected: block hash=16183fefbcec16ce666cd7f72b1a16e8769bdf14807423dc23c8ccb22c89b892 block height=96 [0m
[0;34m node0 2022-08-25T21:18:36.016872Z [httpworker.0] [validationinterface.cpp:202] [UpdatedBlockTip] [validation] Enqueuing UpdatedBlockTip: new block hash=16183fefbcec16ce666cd7f72b1a16e8769bdf14807423dc23c8ccb22c89b892 fork block hash=7fae2e83bd7856add753fb7724dcd7180ecd9acdded004cc15ad94e81183afe7 (in IBD=false) [0m
[0;34m node0 2022-08-25T21:18:36.016966Z [scheduler] [validationinterface.cpp:229] [operator()] [validation] BlockConnected: block hash=16183fefbcec16ce666cd7f72b1a16e8769bdf14807423dc23c8ccb22c89b892 block height=96 [0m
[0;34m node0 2022-08-25T21:18:36.017196Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, net_processing.cpp:1720 started [0m
[0;34m node0 2022-08-25T21:18:36.017448Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, net_processing.cpp:1720 completed (187Î¼s) [0m
[0;34m node0 2022-08-25T21:18:36.017517Z [httpworker.0] [logging/timer.h:57] [Log] [lock] Enter: lock contention ::cs_main, validation.cpp:5030 started [0m
[0;34m node0 2022-08-25T21:18:36.017594Z [httpworker.0] [logging/timer.h:57] [Log] [lock] Enter: lock contention ::cs_main, validation.cpp:5030 completed (9Î¼s) [0m
[0;34m node0 2022-08-25T21:18:36.017845Z [httpworker.0] [node/miner.cpp:163] [CreateNewBlock] CreateNewBlock(): block weight: 900 txs: 0 fees: 0 sigops 400 [0m
[0;34m node0 2022-08-25T21:18:36.017918Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, node/interfaces.cpp:543 started [0m
[0;34m node0 2022-08-25T21:18:36.018006Z [httpworker.0] [validation.cpp:2060] [ConnectBlock] [bench]     - Sanity checks: 0.01ms [0.00s (0.01ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.018105Z [httpworker.0] [validation.cpp:2159] [ConnectBlock] [bench]     - Fork checks: 0.11ms [0.02s (0.12ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.018181Z [httpworker.0] [validation.cpp:2244] [ConnectBlock] [bench]       - Connect 1 transactions: 0.07ms (0.069ms/tx, 0.000ms/txin) [0.02s (0.09ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.018247Z [httpworker.0] [validation.cpp:2257] [ConnectBlock] [bench]     - Verify 0 txins: 0.14ms (0.000ms/txin) [0.04s (0.18ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.018306Z [httpworker.0] [node/miner.cpp:178] [CreateNewBlock] [bench] CreateNewBlock() packages: 0.10ms (0 packages, 0 updated descendants), validity: 0.52ms (total 0.61ms) [0m
[0;34m node0 2022-08-25T21:18:36.018406Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, node/interfaces.cpp:543 completed (418Î¼s) [0m
[0;34m node0 2022-08-25T21:18:36.018479Z [httpworker.0] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, validation.cpp:3788 started [0m
[0;34m node0 2022-08-25T21:18:36.018563Z [scheduler] [wallet/wallet.h:827] [WalletLogPrintf] [default wallet] AddToWallet 35e9fb1a40361cd3e4cedb8fa58a842d76d2186e082f5c3dfa9d3a3867bfa8d7  new [0m
[0;34m node0 2022-08-25T21:18:36.018624Z [httpworker.0] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, validation.cpp:3788 completed (9Î¼s) [0m
[0;34m node0 2022-08-25T21:18:36.018903Z [scheduler] [validationinterface.cpp:202] [operator()] [validation] UpdatedBlockTip: new block hash=16183fefbcec16ce666cd7f72b1a16e8769bdf14807423dc23c8ccb22c89b892 fork block hash=7fae2e83bd7856add753fb7724dcd7180ecd9acdded004cc15ad94e81183afe7 (in IBD=false) [0m
[0;34m node0 2022-08-25T21:18:36.019417Z [httpworker.0] [validationinterface.cpp:257] [NewPoWValidBlock] [validation] NewPoWValidBlock: block hash=5259f1ce8259c271759e15829efa971320fd2e4da3d500aa8a3a7babb6fa994f [0m
[0;34m node0 2022-08-25T21:18:36.022228Z [httpworker.0] [validation.cpp:2710] [ConnectTip] [bench]   - Using cached block [0m
[0;34m node0 2022-08-25T21:18:36.022851Z [httpworker.0] [validation.cpp:2717] [ConnectTip] [bench]   - Load block from disk: 0.61ms [0.01s (0.05ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.022944Z [httpworker.0] [validation.cpp:2060] [ConnectBlock] [bench]     - Sanity checks: 0.00ms [0.00s (0.01ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.023018Z [httpworker.0] [validation.cpp:2159] [ConnectBlock] [bench]     - Fork checks: 0.08ms [0.02s (0.12ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.023119Z [httpworker.0] [validation.cpp:2244] [ConnectBlock] [bench]       - Connect 1 transactions: 0.09ms (0.091ms/tx, 0.000ms/txin) [0.02s (0.09ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.023189Z [httpworker.0] [validation.cpp:2257] [ConnectBlock] [bench]     - Verify 0 txins: 0.17ms (0.000ms/txin) [0.04s (0.18ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.023309Z [httpworker.0] [validation.cpp:2267] [ConnectBlock] [bench]     - Write undo data: 0.12ms [0.01s (0.07ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.023360Z [httpworker.0] [validation.cpp:2278] [ConnectBlock] [bench]     - Index writing: 0.06ms [0.01s (0.04ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.023432Z [httpworker.0] [validationinterface.cpp:252] [BlockChecked] [validation] BlockChecked: block hash=5259f1ce8259c271759e15829efa971320fd2e4da3d500aa8a3a7babb6fa994f state=Valid [0m
[0;34m node0 2022-08-25T21:18:36.023516Z [httpworker.0] [validation.cpp:2729] [ConnectTip] [bench]   - Connect total: 0.68ms [0.08s (0.42ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.023577Z [httpworker.0] [validation.cpp:2734] [ConnectTip] [bench]   - Flush: 0.06ms [0.01s (0.04ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.023641Z [httpworker.0] [validation.cpp:2740] [ConnectTip] [bench]   - Writing chainstate: 0.06ms [0.01s (0.03ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.024219Z [httpworker.0] [policy/fees.cpp:667] [processBlock] [estimatefee] Blockpolicy estimates updated by 0 of 0 block txs, since last block 0 of 0 tracked, mempool map size 0, max target 0 from current [0m
[0;34m node0 2022-08-25T21:18:36.024338Z [httpworker.0] [validation.cpp:2519] [UpdateTipLog] UpdateTip: new best=5259f1ce8259c271759e15829efa971320fd2e4da3d500aa8a3a7babb6fa994f height=97 version=0x20000000 log2_work=7.614710 tx=98 date='2022-08-25T21:18:52Z' progress=1.000000 cache=0.0MiB(97txo) [0m
[0;34m node0 2022-08-25T21:18:36.024389Z [httpworker.0] [validation.cpp:2751] [ConnectTip] [bench]   - Connect postprocess: 0.74ms [0.08s (0.42ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.024433Z [httpworker.0] [validation.cpp:2752] [ConnectTip] [bench] - Connect block: 2.16ms [0.19s (0.96ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.024510Z [httpworker.0] [txmempool.cpp:736] [check] [mempool] Checking mempool with 0 transactions and 0 inputs [0m
[0;34m node0 2022-08-25T21:18:36.024637Z [httpworker.0] [validationinterface.cpp:229] [BlockConnected] [validation] Enqueuing BlockConnected: block hash=5259f1ce8259c271759e15829efa971320fd2e4da3d500aa8a3a7babb6fa994f block height=97 [0m
[0;34m node0 2022-08-25T21:18:36.024747Z [httpworker.0] [validationinterface.cpp:202] [UpdatedBlockTip] [validation] Enqueuing UpdatedBlockTip: new block hash=5259f1ce8259c271759e15829efa971320fd2e4da3d500aa8a3a7babb6fa994f fork block hash=16183fefbcec16ce666cd7f72b1a16e8769bdf14807423dc23c8ccb22c89b892 (in IBD=false) [0m
[0;34m node0 2022-08-25T21:18:36.024859Z [scheduler] [validationinterface.cpp:229] [operator()] [validation] BlockConnected: block hash=5259f1ce8259c271759e15829efa971320fd2e4da3d500aa8a3a7babb6fa994f block height=97 [0m
[0;34m node0 2022-08-25T21:18:36.025141Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, net_processing.cpp:1720 started [0m
[0;34m node0 2022-08-25T21:18:36.025343Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, net_processing.cpp:1720 completed (124Î¼s) [0m
[0;34m node0 2022-08-25T21:18:36.025424Z [httpworker.0] [logging/timer.h:57] [Log] [lock] Enter: lock contention ::cs_main, validation.cpp:5030 started [0m
[0;34m node0 2022-08-25T21:18:36.025496Z [httpworker.0] [logging/timer.h:57] [Log] [lock] Enter: lock contention ::cs_main, validation.cpp:5030 completed (9Î¼s) [0m
[0;34m node0 2022-08-25T21:18:36.025729Z [httpworker.0] [node/miner.cpp:163] [CreateNewBlock] CreateNewBlock(): block weight: 900 txs: 0 fees: 0 sigops 400 [0m
[0;34m node0 2022-08-25T21:18:36.025869Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, node/interfaces.cpp:543 started [0m
[0;34m node0 2022-08-25T21:18:36.025957Z [httpworker.0] [validation.cpp:2060] [ConnectBlock] [bench]     - Sanity checks: 0.01ms [0.00s (0.01ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.026033Z [httpworker.0] [validation.cpp:2159] [ConnectBlock] [bench]     - Fork checks: 0.14ms [0.02s (0.12ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.026132Z [httpworker.0] [validation.cpp:2244] [ConnectBlock] [bench]       - Connect 1 transactions: 0.09ms (0.090ms/tx, 0.000ms/txin) [0.02s (0.09ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.026205Z [httpworker.0] [validation.cpp:2257] [ConnectBlock] [bench]     - Verify 0 txins: 0.17ms (0.000ms/txin) [0.04s (0.18ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.026264Z [httpworker.0] [node/miner.cpp:178] [CreateNewBlock] [bench] CreateNewBlock() packages: 0.06ms (0 packages, 0 updated descendants), validity: 0.59ms (total 0.65ms) [0m
[0;34m node0 2022-08-25T21:18:36.026375Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, node/interfaces.cpp:543 completed (421Î¼s) [0m
[0;34m node0 2022-08-25T21:18:36.026448Z [httpworker.0] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, validation.cpp:3788 started [0m
[0;34m node0 2022-08-25T21:18:36.026547Z [httpworker.0] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, validation.cpp:3788 completed (10Î¼s) [0m
[0;34m node0 2022-08-25T21:18:36.026611Z [scheduler] [wallet/wallet.h:827] [WalletLogPrintf] [default wallet] AddToWallet 6595fce33df19156fa3ba8fbe38515bab6744e4e77d10722a399a122a8ff59f7  new [0m
[0;34m node0 2022-08-25T21:18:36.027131Z [scheduler] [validationinterface.cpp:202] [operator()] [validation] UpdatedBlockTip: new block hash=5259f1ce8259c271759e15829efa971320fd2e4da3d500aa8a3a7babb6fa994f fork block hash=16183fefbcec16ce666cd7f72b1a16e8769bdf14807423dc23c8ccb22c89b892 (in IBD=false) [0m
[0;34m node0 2022-08-25T21:18:36.027462Z [httpworker.0] [validationinterface.cpp:257] [NewPoWValidBlock] [validation] NewPoWValidBlock: block hash=46b956ea1967476415721ff332055c75bf3eb324a00631f8f94e740b4afcbe82 [0m
[0;34m node0 2022-08-25T21:18:36.028248Z [httpworker.0] [validation.cpp:2710] [ConnectTip] [bench]   - Using cached block [0m
[0;34m node0 2022-08-25T21:18:36.028308Z [httpworker.0] [validation.cpp:2717] [ConnectTip] [bench]   - Load block from disk: 0.06ms [0.01s (0.05ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.028391Z [httpworker.0] [validation.cpp:2060] [ConnectBlock] [bench]     - Sanity checks: 0.00ms [0.00s (0.01ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.028461Z [httpworker.0] [validation.cpp:2159] [ConnectBlock] [bench]     - Fork checks: 0.07ms [0.02s (0.12ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.028539Z [httpworker.0] [validation.cpp:2244] [ConnectBlock] [bench]       - Connect 1 transactions: 0.06ms (0.064ms/tx, 0.000ms/txin) [0.02s (0.09ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.028606Z [httpworker.0] [validation.cpp:2257] [ConnectBlock] [bench]     - Verify 0 txins: 0.14ms (0.000ms/txin) [0.04s (0.18ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.028719Z [httpworker.0] [validation.cpp:2267] [ConnectBlock] [bench]     - Write undo data: 0.11ms [0.01s (0.07ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.028768Z [httpworker.0] [validation.cpp:2278] [ConnectBlock] [bench]     - Index writing: 0.05ms [0.01s (0.04ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.028831Z [httpworker.0] [validationinterface.cpp:252] [BlockChecked] [validation] BlockChecked: block hash=46b956ea1967476415721ff332055c75bf3eb324a00631f8f94e740b4afcbe82 state=Valid [0m
[0;34m node0 2022-08-25T21:18:36.028913Z [httpworker.0] [validation.cpp:2729] [ConnectTip] [bench]   - Connect total: 0.61ms [0.08s (0.41ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.029006Z [httpworker.0] [validation.cpp:2734] [ConnectTip] [bench]   - Flush: 0.10ms [0.01s (0.04ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.029506Z [httpworker.0] [validation.cpp:2740] [ConnectTip] [bench]   - Writing chainstate: 0.49ms [0.01s (0.04ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.030004Z [httpworker.0] [policy/fees.cpp:667] [processBlock] [estimatefee] Blockpolicy estimates updated by 0 of 0 block txs, since last block 0 of 0 tracked, mempool map size 0, max target 0 from current [0m
[0;34m node0 2022-08-25T21:18:36.030143Z [httpworker.0] [validation.cpp:2519] [UpdateTipLog] UpdateTip: new best=46b956ea1967476415721ff332055c75bf3eb324a00631f8f94e740b4afcbe82 height=98 version=0x20000000 log2_work=7.629357 tx=99 date='2022-08-25T21:18:53Z' progress=1.000000 cache=0.0MiB(98txo) [0m
[0;34m node0 2022-08-25T21:18:36.030197Z [httpworker.0] [validation.cpp:2751] [ConnectTip] [bench]   - Connect postprocess: 0.70ms [0.08s (0.42ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.030241Z [httpworker.0] [validation.cpp:2752] [ConnectTip] [bench] - Connect block: 1.95ms [0.19s (0.96ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.030296Z [httpworker.0] [txmempool.cpp:736] [check] [mempool] Checking mempool with 0 transactions and 0 inputs [0m
[0;34m node0 2022-08-25T21:18:36.030393Z [httpworker.0] [validationinterface.cpp:229] [BlockConnected] [validation] Enqueuing BlockConnected: block hash=46b956ea1967476415721ff332055c75bf3eb324a00631f8f94e740b4afcbe82 block height=98 [0m
[0;34m node0 2022-08-25T21:18:36.030495Z [httpworker.0] [validationinterface.cpp:202] [UpdatedBlockTip] [validation] Enqueuing UpdatedBlockTip: new block hash=46b956ea1967476415721ff332055c75bf3eb324a00631f8f94e740b4afcbe82 fork block hash=5259f1ce8259c271759e15829efa971320fd2e4da3d500aa8a3a7babb6fa994f (in IBD=false) [0m
[0;34m node0 2022-08-25T21:18:36.030582Z [scheduler] [validationinterface.cpp:229] [operator()] [validation] BlockConnected: block hash=46b956ea1967476415721ff332055c75bf3eb324a00631f8f94e740b4afcbe82 block height=98 [0m
[0;34m node0 2022-08-25T21:18:36.030814Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, net_processing.cpp:1720 started [0m
[0;34m node0 2022-08-25T21:18:36.031069Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, net_processing.cpp:1720 completed (167Î¼s) [0m
[0;34m node0 2022-08-25T21:18:36.031147Z [httpworker.0] [logging/timer.h:57] [Log] [lock] Enter: lock contention ::cs_main, validation.cpp:5030 started [0m
[0;34m node0 2022-08-25T21:18:36.031219Z [httpworker.0] [logging/timer.h:57] [Log] [lock] Enter: lock contention ::cs_main, validation.cpp:5030 completed (9Î¼s) [0m
[0;34m node0 2022-08-25T21:18:36.031429Z [httpworker.0] [node/miner.cpp:163] [CreateNewBlock] CreateNewBlock(): block weight: 900 txs: 0 fees: 0 sigops 400 [0m
[0;34m node0 2022-08-25T21:18:36.031580Z [httpworker.0] [validation.cpp:2060] [ConnectBlock] [bench]     - Sanity checks: 0.01ms [0.00s (0.01ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.031655Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, node/interfaces.cpp:543 started [0m
[0;34m node0 2022-08-25T21:18:36.031718Z [httpworker.0] [validation.cpp:2159] [ConnectBlock] [bench]     - Fork checks: 0.08ms [0.02s (0.12ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.031805Z [httpworker.0] [validation.cpp:2244] [ConnectBlock] [bench]       - Connect 1 transactions: 0.13ms (0.134ms/tx, 0.000ms/txin) [0.02s (0.09ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.031874Z [httpworker.0] [validation.cpp:2257] [ConnectBlock] [bench]     - Verify 0 txins: 0.21ms (0.000ms/txin) [0.04s (0.18ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.031932Z [httpworker.0] [node/miner.cpp:178] [CreateNewBlock] [bench] CreateNewBlock() packages: 0.06ms (0 packages, 0 updated descendants), validity: 0.56ms (total 0.62ms) [0m
[0;34m node0 2022-08-25T21:18:36.032047Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, node/interfaces.cpp:543 completed (300Î¼s) [0m
[0;34m node0 2022-08-25T21:18:36.032111Z [httpworker.0] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, validation.cpp:3788 started [0m
[0;34m node0 2022-08-25T21:18:36.032196Z [scheduler] [wallet/wallet.h:827] [WalletLogPrintf] [default wallet] AddToWallet 50c4601a952f62baa0eb493d10d02754f53c57b78dcc9040507b0c365e72a786  new [0m
[0;34m node0 2022-08-25T21:18:36.032255Z [httpworker.0] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, validation.cpp:3788 completed (9Î¼s) [0m
[0;34m node0 2022-08-25T21:18:36.032655Z [scheduler] [validationinterface.cpp:202] [operator()] [validation] UpdatedBlockTip: new block hash=46b956ea1967476415721ff332055c75bf3eb324a00631f8f94e740b4afcbe82 fork block hash=5259f1ce8259c271759e15829efa971320fd2e4da3d500aa8a3a7babb6fa994f (in IBD=false) [0m
[0;34m node0 2022-08-25T21:18:36.033156Z [httpworker.0] [validationinterface.cpp:257] [NewPoWValidBlock] [validation] NewPoWValidBlock: block hash=57074cf2b9af3cbf070288aa5ff18b88b1b97e194a275382e0c99ea016d1da08 [0m
[0;34m node0 2022-08-25T21:18:36.034097Z [httpworker.0] [validation.cpp:2710] [ConnectTip] [bench]   - Using cached block [0m
[0;34m node0 2022-08-25T21:18:36.034159Z [httpworker.0] [validation.cpp:2717] [ConnectTip] [bench]   - Load block from disk: 0.06ms [0.01s (0.05ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.034243Z [httpworker.0] [validation.cpp:2060] [ConnectBlock] [bench]     - Sanity checks: 0.00ms [0.00s (0.01ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.034313Z [httpworker.0] [validation.cpp:2159] [ConnectBlock] [bench]     - Fork checks: 0.07ms [0.02s (0.12ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.034386Z [httpworker.0] [validation.cpp:2244] [ConnectBlock] [bench]       - Connect 1 transactions: 0.06ms (0.064ms/tx, 0.000ms/txin) [0.02s (0.09ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.034453Z [httpworker.0] [validation.cpp:2257] [ConnectBlock] [bench]     - Verify 0 txins: 0.14ms (0.000ms/txin) [0.04s (0.18ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.034575Z [httpworker.0] [validation.cpp:2267] [ConnectBlock] [bench]     - Write undo data: 0.12ms [0.01s (0.07ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.034626Z [httpworker.0] [validation.cpp:2278] [ConnectBlock] [bench]     - Index writing: 0.06ms [0.01s (0.04ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.034687Z [httpworker.0] [validationinterface.cpp:252] [BlockChecked] [validation] BlockChecked: block hash=57074cf2b9af3cbf070288aa5ff18b88b1b97e194a275382e0c99ea016d1da08 state=Valid [0m
[0;34m node0 2022-08-25T21:18:36.034782Z [httpworker.0] [validation.cpp:2729] [ConnectTip] [bench]   - Connect total: 0.63ms [0.08s (0.41ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.034834Z [httpworker.0] [validation.cpp:2734] [ConnectTip] [bench]   - Flush: 0.06ms [0.01s (0.04ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.034898Z [httpworker.0] [validation.cpp:2740] [ConnectTip] [bench]   - Writing chainstate: 0.06ms [0.01s (0.04ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.035388Z [httpworker.0] [policy/fees.cpp:667] [processBlock] [estimatefee] Blockpolicy estimates updated by 0 of 0 block txs, since last block 0 of 0 tracked, mempool map size 0, max target 0 from current [0m
[0;34m node0 2022-08-25T21:18:36.035504Z [httpworker.0] [validation.cpp:2519] [UpdateTipLog] UpdateTip: new best=57074cf2b9af3cbf070288aa5ff18b88b1b97e194a275382e0c99ea016d1da08 height=99 version=0x20000000 log2_work=7.643856 tx=100 date='2022-08-25T21:18:53Z' progress=1.000000 cache=0.0MiB(99txo) [0m
[0;34m node0 2022-08-25T21:18:36.035561Z [httpworker.0] [validation.cpp:2751] [ConnectTip] [bench]   - Connect postprocess: 0.66ms [0.08s (0.42ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.035606Z [httpworker.0] [validation.cpp:2752] [ConnectTip] [bench] - Connect block: 1.46ms [0.19s (0.96ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.035660Z [httpworker.0] [txmempool.cpp:736] [check] [mempool] Checking mempool with 0 transactions and 0 inputs [0m
[0;34m node0 2022-08-25T21:18:36.035754Z [httpworker.0] [validationinterface.cpp:229] [BlockConnected] [validation] Enqueuing BlockConnected: block hash=57074cf2b9af3cbf070288aa5ff18b88b1b97e194a275382e0c99ea016d1da08 block height=99 [0m
[0;34m node0 2022-08-25T21:18:36.035857Z [httpworker.0] [validationinterface.cpp:202] [UpdatedBlockTip] [validation] Enqueuing UpdatedBlockTip: new block hash=57074cf2b9af3cbf070288aa5ff18b88b1b97e194a275382e0c99ea016d1da08 fork block hash=46b956ea1967476415721ff332055c75bf3eb324a00631f8f94e740b4afcbe82 (in IBD=false) [0m
[0;34m node0 2022-08-25T21:18:36.035945Z [scheduler] [validationinterface.cpp:229] [operator()] [validation] BlockConnected: block hash=57074cf2b9af3cbf070288aa5ff18b88b1b97e194a275382e0c99ea016d1da08 block height=99 [0m
[0;34m node0 2022-08-25T21:18:36.036137Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, net_processing.cpp:1720 started [0m
[0;34m node0 2022-08-25T21:18:36.036397Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, net_processing.cpp:1720 completed (195Î¼s) [0m
[0;34m node0 2022-08-25T21:18:36.036466Z [httpworker.0] [logging/timer.h:57] [Log] [lock] Enter: lock contention ::cs_main, validation.cpp:5030 started [0m
[0;34m node0 2022-08-25T21:18:36.036542Z [httpworker.0] [logging/timer.h:57] [Log] [lock] Enter: lock contention ::cs_main, validation.cpp:5030 completed (10Î¼s) [0m
[0;34m node0 2022-08-25T21:18:36.036748Z [httpworker.0] [node/miner.cpp:163] [CreateNewBlock] CreateNewBlock(): block weight: 900 txs: 0 fees: 0 sigops 400 [0m
[0;34m node0 2022-08-25T21:18:36.036826Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, node/interfaces.cpp:543 started [0m
[0;34m node0 2022-08-25T21:18:36.036896Z [httpworker.0] [validation.cpp:2060] [ConnectBlock] [bench]     - Sanity checks: 0.01ms [0.00s (0.01ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.036970Z [httpworker.0] [validation.cpp:2159] [ConnectBlock] [bench]     - Fork checks: 0.08ms [0.02s (0.12ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.037063Z [httpworker.0] [validation.cpp:2244] [ConnectBlock] [bench]       - Connect 1 transactions: 0.06ms (0.064ms/tx, 0.000ms/txin) [0.02s (0.09ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.037132Z [httpworker.0] [validation.cpp:2257] [ConnectBlock] [bench]     - Verify 0 txins: 0.16ms (0.000ms/txin) [0.04s (0.18ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.037190Z [httpworker.0] [node/miner.cpp:178] [CreateNewBlock] [bench] CreateNewBlock() packages: 0.04ms (0 packages, 0 updated descendants), validity: 0.50ms (total 0.54ms) [0m
[0;34m node0 2022-08-25T21:18:36.037293Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, node/interfaces.cpp:543 completed (397Î¼s) [0m
[0;34m node0 2022-08-25T21:18:36.037366Z [httpworker.0] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, validation.cpp:3788 started [0m
[0;34m node0 2022-08-25T21:18:36.037455Z [scheduler] [wallet/wallet.h:827] [WalletLogPrintf] [default wallet] AddToWallet 64c2823f9a2fc6e8b8171576b3046a536356036cdde855a28b0b24d90f61af7c  new [0m
[0;34m node0 2022-08-25T21:18:36.037515Z [httpworker.0] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, validation.cpp:3788 completed (10Î¼s) [0m
[0;34m node0 2022-08-25T21:18:36.037867Z [scheduler] [validationinterface.cpp:202] [operator()] [validation] UpdatedBlockTip: new block hash=57074cf2b9af3cbf070288aa5ff18b88b1b97e194a275382e0c99ea016d1da08 fork block hash=46b956ea1967476415721ff332055c75bf3eb324a00631f8f94e740b4afcbe82 (in IBD=false) [0m
[0;34m node0 2022-08-25T21:18:36.038365Z [httpworker.0] [validationinterface.cpp:257] [NewPoWValidBlock] [validation] NewPoWValidBlock: block hash=4394632288cb04d9ad99ff59df97aec3f7152cbe340c4fb2583674d7074a6e19 [0m
[0;34m node0 2022-08-25T21:18:36.039064Z [httpworker.0] [validation.cpp:2710] [ConnectTip] [bench]   - Using cached block [0m
[0;34m node0 2022-08-25T21:18:36.039123Z [httpworker.0] [validation.cpp:2717] [ConnectTip] [bench]   - Load block from disk: 0.07ms [0.01s (0.05ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.039208Z [httpworker.0] [validation.cpp:2060] [ConnectBlock] [bench]     - Sanity checks: 0.00ms [0.00s (0.01ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.039276Z [httpworker.0] [validation.cpp:2159] [ConnectBlock] [bench]     - Fork checks: 0.07ms [0.02s (0.12ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.039349Z [httpworker.0] [validation.cpp:2244] [ConnectBlock] [bench]       - Connect 1 transactions: 0.06ms (0.064ms/tx, 0.000ms/txin) [0.02s (0.09ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.039415Z [httpworker.0] [validation.cpp:2257] [ConnectBlock] [bench]     - Verify 0 txins: 0.13ms (0.000ms/txin) [0.04s (0.18ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.039540Z [httpworker.0] [validation.cpp:2267] [ConnectBlock] [bench]     - Write undo data: 0.12ms [0.01s (0.07ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.039593Z [httpworker.0] [validation.cpp:2278] [ConnectBlock] [bench]     - Index writing: 0.06ms [0.01s (0.04ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.039654Z [httpworker.0] [validationinterface.cpp:252] [BlockChecked] [validation] BlockChecked: block hash=4394632288cb04d9ad99ff59df97aec3f7152cbe340c4fb2583674d7074a6e19 state=Valid [0m
[0;34m node0 2022-08-25T21:18:36.039741Z [httpworker.0] [validation.cpp:2729] [ConnectTip] [bench]   - Connect total: 0.62ms [0.08s (0.41ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.039794Z [httpworker.0] [validation.cpp:2734] [ConnectTip] [bench]   - Flush: 0.06ms [0.01s (0.04ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.039857Z [httpworker.0] [validation.cpp:2740] [ConnectTip] [bench]   - Writing chainstate: 0.06ms [0.01s (0.04ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.040367Z [httpworker.0] [policy/fees.cpp:667] [processBlock] [estimatefee] Blockpolicy estimates updated by 0 of 0 block txs, since last block 0 of 0 tracked, mempool map size 0, max target 0 from current [0m
[0;34m node0 2022-08-25T21:18:36.040482Z [httpworker.0] [validation.cpp:2519] [UpdateTipLog] UpdateTip: new best=4394632288cb04d9ad99ff59df97aec3f7152cbe340c4fb2583674d7074a6e19 height=100 version=0x20000000 log2_work=7.658211 tx=101 date='2022-08-25T21:18:53Z' progress=1.000000 cache=0.0MiB(100txo) [0m
[0;34m node0 2022-08-25T21:18:36.040539Z [httpworker.0] [validation.cpp:2751] [ConnectTip] [bench]   - Connect postprocess: 0.67ms [0.08s (0.42ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.040585Z [httpworker.0] [validation.cpp:2752] [ConnectTip] [bench] - Connect block: 1.49ms [0.19s (0.95ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.040639Z [httpworker.0] [txmempool.cpp:736] [check] [mempool] Checking mempool with 0 transactions and 0 inputs [0m
[0;34m node0 2022-08-25T21:18:36.040733Z [httpworker.0] [validationinterface.cpp:229] [BlockConnected] [validation] Enqueuing BlockConnected: block hash=4394632288cb04d9ad99ff59df97aec3f7152cbe340c4fb2583674d7074a6e19 block height=100 [0m
[0;34m node0 2022-08-25T21:18:36.040835Z [httpworker.0] [validationinterface.cpp:202] [UpdatedBlockTip] [validation] Enqueuing UpdatedBlockTip: new block hash=4394632288cb04d9ad99ff59df97aec3f7152cbe340c4fb2583674d7074a6e19 fork block hash=57074cf2b9af3cbf070288aa5ff18b88b1b97e194a275382e0c99ea016d1da08 (in IBD=false) [0m
[0;34m node0 2022-08-25T21:18:36.040924Z [scheduler] [validationinterface.cpp:229] [operator()] [validation] BlockConnected: block hash=4394632288cb04d9ad99ff59df97aec3f7152cbe340c4fb2583674d7074a6e19 block height=100 [0m
[0;34m node0 2022-08-25T21:18:36.041166Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, net_processing.cpp:1720 started [0m
[0;34m node0 2022-08-25T21:18:36.041424Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, net_processing.cpp:1720 completed (182Î¼s) [0m
[0;34m node0 2022-08-25T21:18:36.041497Z [httpworker.0] [logging/timer.h:57] [Log] [lock] Enter: lock contention ::cs_main, validation.cpp:5030 started [0m
[0;34m node0 2022-08-25T21:18:36.041573Z [httpworker.0] [logging/timer.h:57] [Log] [lock] Enter: lock contention ::cs_main, validation.cpp:5030 completed (15Î¼s) [0m
[0;34m node0 2022-08-25T21:18:36.041761Z [httpworker.0] [node/miner.cpp:163] [CreateNewBlock] CreateNewBlock(): block weight: 900 txs: 0 fees: 0 sigops 400 [0m
[0;34m node0 2022-08-25T21:18:36.041835Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, node/interfaces.cpp:543 started [0m
[0;34m node0 2022-08-25T21:18:36.041906Z [httpworker.0] [validation.cpp:2060] [ConnectBlock] [bench]     - Sanity checks: 0.01ms [0.00s (0.01ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.041979Z [httpworker.0] [validation.cpp:2159] [ConnectBlock] [bench]     - Fork checks: 0.08ms [0.02s (0.12ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.042071Z [httpworker.0] [validation.cpp:2244] [ConnectBlock] [bench]       - Connect 1 transactions: 0.06ms (0.064ms/tx, 0.000ms/txin) [0.02s (0.09ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.042140Z [httpworker.0] [validation.cpp:2257] [ConnectBlock] [bench]     - Verify 0 txins: 0.16ms (0.000ms/txin) [0.04s (0.18ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.042198Z [httpworker.0] [node/miner.cpp:178] [CreateNewBlock] [bench] CreateNewBlock() packages: 0.04ms (0 packages, 0 updated descendants), validity: 0.49ms (total 0.53ms) [0m
[0;34m node0 2022-08-25T21:18:36.042298Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, node/interfaces.cpp:543 completed (396Î¼s) [0m
[0;34m node0 2022-08-25T21:18:36.042370Z [httpworker.0] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, validation.cpp:3788 started [0m
[0;34m node0 2022-08-25T21:18:36.042452Z [scheduler] [wallet/wallet.h:827] [WalletLogPrintf] [default wallet] AddToWallet 29d43f1264edf205d89868b1a4ea664a93ebdb3c0e1e8366995a4c0067172cd4  new [0m
[0;34m node0 2022-08-25T21:18:36.042510Z [httpworker.0] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, validation.cpp:3788 completed (9Î¼s) [0m
[0;34m node0 2022-08-25T21:18:36.042788Z [scheduler] [validationinterface.cpp:202] [operator()] [validation] UpdatedBlockTip: new block hash=4394632288cb04d9ad99ff59df97aec3f7152cbe340c4fb2583674d7074a6e19 fork block hash=57074cf2b9af3cbf070288aa5ff18b88b1b97e194a275382e0c99ea016d1da08 (in IBD=false) [0m
[0;34m node0 2022-08-25T21:18:36.043321Z [httpworker.0] [validationinterface.cpp:257] [NewPoWValidBlock] [validation] NewPoWValidBlock: block hash=757cdba3a03ce3986fd408e95f6993b71fd00399b8a17d0c6b86fcacca43b0f6 [0m
[0;34m node0 2022-08-25T21:18:36.044004Z [httpworker.0] [validation.cpp:2710] [ConnectTip] [bench]   - Using cached block [0m
[0;34m node0 2022-08-25T21:18:36.044083Z [httpworker.0] [validation.cpp:2717] [ConnectTip] [bench]   - Load block from disk: 0.05ms [0.01s (0.05ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.044169Z [httpworker.0] [validation.cpp:2060] [ConnectBlock] [bench]     - Sanity checks: 0.00ms [0.00s (0.01ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.044237Z [httpworker.0] [validation.cpp:2159] [ConnectBlock] [bench]     - Fork checks: 0.07ms [0.02s (0.12ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.044311Z [httpworker.0] [validation.cpp:2244] [ConnectBlock] [bench]       - Connect 1 transactions: 0.07ms (0.065ms/tx, 0.000ms/txin) [0.02s (0.09ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.044377Z [httpworker.0] [validation.cpp:2257] [ConnectBlock] [bench]     - Verify 0 txins: 0.14ms (0.000ms/txin) [0.04s (0.18ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.044490Z [httpworker.0] [validation.cpp:2267] [ConnectBlock] [bench]     - Write undo data: 0.12ms [0.01s (0.07ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.044547Z [httpworker.0] [validation.cpp:2278] [ConnectBlock] [bench]     - Index writing: 0.06ms [0.01s (0.04ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.044610Z [httpworker.0] [validationinterface.cpp:252] [BlockChecked] [validation] BlockChecked: block hash=757cdba3a03ce3986fd408e95f6993b71fd00399b8a17d0c6b86fcacca43b0f6 state=Valid [0m
[0;34m node0 2022-08-25T21:18:36.044700Z [httpworker.0] [validation.cpp:2729] [ConnectTip] [bench]   - Connect total: 0.64ms [0.08s (0.41ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.044752Z [httpworker.0] [validation.cpp:2734] [ConnectTip] [bench]   - Flush: 0.05ms [0.01s (0.04ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.044814Z [httpworker.0] [validation.cpp:2740] [ConnectTip] [bench]   - Writing chainstate: 0.06ms [0.01s (0.04ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.045290Z [httpworker.0] [policy/fees.cpp:667] [processBlock] [estimatefee] Blockpolicy estimates updated by 0 of 0 block txs, since last block 0 of 0 tracked, mempool map size 0, max target 0 from current [0m
[0;34m node0 2022-08-25T21:18:36.045405Z [httpworker.0] [validation.cpp:2519] [UpdateTipLog] UpdateTip: new best=757cdba3a03ce3986fd408e95f6993b71fd00399b8a17d0c6b86fcacca43b0f6 height=101 version=0x20000000 log2_work=7.672425 tx=102 date='2022-08-25T21:18:53Z' progress=1.000000 cache=0.0MiB(101txo) [0m
[0;34m node0 2022-08-25T21:18:36.045455Z [httpworker.0] [validation.cpp:2751] [ConnectTip] [bench]   - Connect postprocess: 0.64ms [0.09s (0.42ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.045499Z [httpworker.0] [validation.cpp:2752] [ConnectTip] [bench] - Connect block: 1.45ms [0.19s (0.95ms/blk)] [0m
[0;34m node0 2022-08-25T21:18:36.045557Z [httpworker.0] [txmempool.cpp:736] [check] [mempool] Checking mempool with 0 transactions and 0 inputs [0m
[0;34m node0 2022-08-25T21:18:36.045652Z [httpworker.0] [validationinterface.cpp:229] [BlockConnected] [validation] Enqueuing BlockConnected: block hash=757cdba3a03ce3986fd408e95f6993b71fd00399b8a17d0c6b86fcacca43b0f6 block height=101 [0m
[0;34m node0 2022-08-25T21:18:36.045754Z [httpworker.0] [validationinterface.cpp:202] [UpdatedBlockTip] [validation] Enqueuing UpdatedBlockTip: new block hash=757cdba3a03ce3986fd408e95f6993b71fd00399b8a17d0c6b86fcacca43b0f6 fork block hash=4394632288cb04d9ad99ff59df97aec3f7152cbe340c4fb2583674d7074a6e19 (in IBD=false) [0m
[0;34m node0 2022-08-25T21:18:36.045855Z [scheduler] [validationinterface.cpp:229] [operator()] [validation] BlockConnected: block hash=757cdba3a03ce3986fd408e95f6993b71fd00399b8a17d0c6b86fcacca43b0f6 block height=101 [0m
[0;34m node0 2022-08-25T21:18:36.046050Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, net_processing.cpp:1720 started [0m
[0;34m node0 2022-08-25T21:18:36.046305Z [scheduler] [logging/timer.h:57] [Log] [lock] Enter: lock contention cs_main, net_processing.cpp:1720 completed (192Î¼s) [0m
[0;34m node0 2022-08-25T21:18:36.046693Z [scheduler] [wallet/wallet.h:827] [WalletLogPrintf] [default wallet] AddToWallet cba15f889ff0a0dbf6c0fe94844fa880ea4d74eb5b77b0c5c3aecdc2b8e7b33f  new [0m
[0;34m node0 2022-08-25T21:18:36.046940Z [scheduler] [validationinterface.cpp:202] [operator()] [validation] UpdatedBlockTip: new block hash=757cdba3a03ce3986fd408e95f6993b71fd00399b8a17d0c6b86fcacca43b0f6 fork block hash=4394632288cb04d9ad99ff59df97aec3f7152cbe340c4fb2583674d7074a6e19 (in IBD=false) [0m
[0;34m node0 2022-08-25T21:18:36.048054Z [http] [httpserver.cpp:241] [http_request_cb] [http] Received a POST request for / from 127.0.0.1:48674 [0m
[0;34m node0 2022-08-25T21:18:36.048287Z [httpworker.1] [rpc/request.cpp:179] [parse] [rpc] ThreadRPCServer method=getbestblockhash user=__cookie__ [0m
[0;34m node0 2022-08-25T21:18:36.049026Z [http] [httpserver.cpp:241] [http_request_cb] [http] Received a POST request for / from 127.0.0.1:48674 [0m
[0;34m node0 2022-08-25T21:18:36.049283Z [httpworker.2] [rpc/request.cpp:179] [parse] [rpc] ThreadRPCServer method=getrawmempool user=__cookie__ [0m
[0;34m node0 2022-08-25T21:18:36.050357Z [http] [httpserver.cpp:241] [http_request_cb] [http] Received a POST request for / from 127.0.0.1:48674 [0m
[0;34m node0 2022-08-25T21:18:36.050600Z [httpworker.3] [rpc/request.cpp:179] [parse] [rpc] ThreadRPCServer method=syncwithvalidationinterfacequeue user=__cookie__ [0m
[0;36m test  2022-08-25T21:18:36.051000Z TestFramework (INFO): Test migration of a basic keys only wallet without balance [0m
[0;34m node0 2022-08-25T21:18:36.051519Z [http] [httpserver.cpp:241] [http_request_cb] [http] Received a POST request for / from 127.0.0.1:48674 [0m
[0;34m node0 2022-08-25T21:18:36.051735Z [httpworker.0] [rpc/request.cpp:179] [parse] [rpc] ThreadRPCServer method=createwallet user=__cookie__ [0m
[0;34m node0 2022-08-25T21:18:36.052259Z [httpworker.0] [wallet/bdb.cpp:267] [Verify] Using BerkeleyDB version Berkeley DB 4.8.30: (April  9, 2010) [0m
[0;34m node0 2022-08-25T21:18:36.052325Z [httpworker.0] [wallet/bdb.cpp:268] [Verify] Using wallet /tmp/cirrus-ci-build/ci/scratch/test_runner/test_runner_â¿_ð_20220825_211136/wallet_migration_1/node0/regtest/wallets/basic0/wallet.dat [0m
[0;34m node0 2022-08-25T21:18:36.052544Z [httpworker.0] [wallet/bdb.cpp:146] [Open] BerkeleyEnvironment::Open: LogDir=/tmp/cirrus-ci-build/ci/scratch/test_runner/test_runner_â¿_ð_20220825_211136/wallet_migration_1/node0/regtest/wallets/basic0/database ErrorFile=/tmp/cirrus-ci-build/ci/scratch/test_runner/test_runner_â¿_ð_20220825_211136/wallet_migration_1/node0/regtest/wallets/basic0/db.log [0m
[0;34m node0 2022-08-25T21:18:36.095477Z [httpworker.0] [noui.cpp:56] [noui_InitMessage] init message: Loading walletâ¦ [0m
[0;34m node0 2022-08-25T21:18:36.104295Z [httpworker.0] [wallet/wallet.h:827] [WalletLogPrintf] [basic0] Wallet file version = 10500, last client version = 239900 [0m
[0;34m node0 2022-08-25T21:18:36.104367Z [httpworker.0] [wallet/wallet.h:827] [WalletLogPrintf] [basic0] Keys: 0 plaintext, 0 encrypted, 0 w/ metadata, 0 total. Unknown wallet records: 0 [0m
[0;34m node0 2022-08-25T21:18:36.115322Z [httpworker.0] [wallet/scriptpubkeyman.h:251] [WalletLogPrintf] [basic0] keypool added 2 keys (1 internal), size=2 (1 internal) [0m
[0;34m node0 2022-08-25T21:18:36.118462Z [httpworker.0] [wallet/scriptpubkeyman.h:251] [WalletLogPrintf] [basic0] LegacyScriptPubKeyMan::NewKeyPool rewrote keypool [0m
[0;34m node0 2022-08-25T21:18:36.120191Z [httpworker.0] [wallet/wallet.h:827] [WalletLogPrintf] [basic0] Wallet completed loading in              25ms [0m
[0;34m node0 2022-08-25T21:18:36.120500Z [httpworker.0] [wallet/wallet.h:827] [WalletLogPrintf] [basic0] setKeyPool.size() = 2 [0m
[0;34m node0 2022-08-25T21:18:36.120561Z [httpworker.0] [wallet/wallet.h:827] [WalletLogPrintf] [basic0] mapWallet.size() = 0 [0m
[0;34m node0 2022-08-25T21:18:36.120607Z [httpworker.0] [wallet/wallet.h:827] [WalletLogPrintf] [basic0] m_address_book.size() = 0 [0m
[0;34m node0 2022-08-25T21:18:36.121818Z [http] [httpserver.cpp:241] [http_request_cb] [http] Received a POST request for /wallet/basic0 from 127.0.0.1:48674 [0m
[0;34m node0 2022-08-25T21:18:36.122090Z [httpworker.1] [rpc/request.cpp:179] [parse] [rpc] ThreadRPCServer method=getwalletinfo user=__cookie__ [0m
[0;34m node0 2022-08-25T21:18:36.123838Z [http] [httpserver.cpp:241] [http_request_cb] [http] Received a POST request for /wallet/basic0 from 127.0.0.1:48674 [0m
[0;34m node0 2022-08-25T21:18:36.124063Z [httpworker.2] [rpc/request.cpp:179] [parse] [rpc] ThreadRPCServer method=getwalletinfo user=__cookie__ [0m
[0;34m node0 2022-08-25T21:18:36.125524Z [http] [httpserver.cpp:241] [http_request_cb] [http] Received a POST request for /wallet/basic0 from 127.0.0.1:48674 [0m
[0;34m node0 2022-08-25T21:18:36.125758Z [httpworker.3] [rpc/request.cpp:179] [parse] [rpc] ThreadRPCServer method=getnewaddress user=__cookie__ [0m
[0;34m node0 2022-08-25T21:18:36.126233Z [httpworker.3] [wallet/scriptpubkeyman.h:251] [WalletLogPrintf] [basic0] keypool reserve 1 [0m
[0;34m node0 2022-08-25T21:18:36.128137Z [httpworker.3] [wallet/scriptpubkeyman.h:251] [WalletLogPrintf] [basic0] keypool keep 1 [0m
[0;34m node0 2022-08-25T21:18:36.132516Z [http] [httpserver.cpp:241] [http_request_cb] [http] Received a POST request for /wallet/basic0 from 127.0.0.1:48674 [0m
[0;34m node0 2022-08-25T21:18:36.132718Z [httpworker.0] [rpc/request.cpp:179] [parse] [rpc] ThreadRPCServer method=getrawchangeaddress user=__cookie__ [0m
[0;34m node0 2022-08-25T21:18:36.133916Z [httpworker.0] [wallet/scriptpubkeyman.h:251] [WalletLogPrintf] [basic0] keypool added 1 keys (0 internal), size=2 (1 internal) [0m
[0;34m node0 2022-08-25T21:18:36.135543Z [httpworker.0] [wallet/scriptpubkeyman.h:251] [WalletLogPrintf] [basic0] keypool reserve 2 [0m
[0;34m node0 2022-08-25T21:18:36.137499Z [httpworker.0] [wallet/scriptpubkeyman.h:251] [WalletLogPrintf] [basic0] keypool keep 2 [0m
[0;34m node0 2022-08-25T21:18:36.138190Z [http] [httpserver.cpp:241] [http_request_cb] [http] Received a POST request for /wallet/basic0 from 127.0.0.1:48674 [0m
[0;34m node0 2022-08-25T21:18:36.138410Z [httpworker.1] [rpc/request.cpp:179] [parse] [rpc] ThreadRPCServer method=getaddressinfo user=__cookie__ [0m
[0;34m node0 2022-08-25T21:18:36.140691Z [http] [httpserver.cpp:241] [http_request_cb] [http] Received a POST request for /wallet/basic0 from 127.0.0.1:48674 [0m
[0;34m node0 2022-08-25T21:18:36.140883Z [httpworker.2] [rpc/request.cpp:179] [parse] [rpc] ThreadRPCServer method=getaddressinfo user=__cookie__ [0m
[0;34m node0 2022-08-25T21:18:36.142842Z [http] [httpserver.cpp:241] [http_request_cb] [http] Received a POST request for /wallet/basic0 from 127.0.0.1:48674 [0m
[0;34m node0 2022-08-25T21:18:36.143085Z [httpworker.3] [rpc/request.cpp:179] [parse] [rpc] ThreadRPCServer method=migratewallet user=__cookie__ [0m
[0;34m node0 2022-08-25T21:18:36.144902Z [httpworker.3] [wallet/bdb.cpp:632] [Backup] copied wallet.dat to /tmp/cirrus-ci-build/ci/scratch/test_runner/test_runner_â¿_ð_20220825_211136/wallet_migration_1/node0/regtest/wallets/basic0/basic0-1661462316.legacy.bak [0m
[0;34m node0 2022-08-25T21:18:36.145027Z [httpworker.3] [wallet/wallet.h:827] [WalletLogPrintf] [basic0] Migrating wallet storage database from BerkeleyDB to SQLite. [0m
[0;34m node0 2022-08-25T21:18:36.146947Z [httpworker.3] [wallet/bdb.cpp:538] [Flush] [walletdb] BerkeleyEnvironment::Flush: [/tmp/cirrus-ci-build/ci/scratch/test_runner/test_runner_â¿_ð_20220825_211136/wallet_migration_1/node0/regtest/wallets/basic0] Flush(true) [0m
[0;34m node0 2022-08-25T21:18:36.147028Z [httpworker.3] [wallet/bdb.cpp:549] [Flush] [walletdb] BerkeleyEnvironment::Flush: Flushing wallet.dat (refcount = 0)... [0m
[0;34m node0 2022-08-25T21:18:36.147215Z [httpworker.3] [wallet/bdb.cpp:553] [Flush] [walletdb] BerkeleyEnvironment::Flush: wallet.dat checkpoint [0m
[0;34m node0 2022-08-25T21:18:36.147771Z [httpworker.3] [wallet/bdb.cpp:555] [Flush] [walletdb] BerkeleyEnvironment::Flush: wallet.dat detach [0m
[0;34m node0 2022-08-25T21:18:36.148406Z [httpworker.3] [wallet/bdb.cpp:558] [Flush] [walletdb] BerkeleyEnvironment::Flush: wallet.dat closed [0m
[0;34m node0 2022-08-25T21:18:36.148485Z [httpworker.3] [wallet/bdb.cpp:564] [Flush] [walletdb] BerkeleyEnvironment::Flush: Flush(true) took               2ms [0m
[0;34m node0 2022-08-25T21:18:36.175322Z [httpworker.3] [wallet/sqlite.cpp:91] [SQLiteDatabase] Using SQLite Version 3.38.5 [0m
[0;34m node0 2022-08-25T21:18:36.175392Z [httpworker.3] [wallet/sqlite.cpp:92] [SQLiteDatabase] Using wallet /tmp/cirrus-ci-build/ci/scratch/test_runner/test_runner_â¿_ð_20220825_211136/wallet_migration_1/node0/regtest/wallets/basic0 [0m
[0;34m node0 2022-08-25T21:18:36.276714Z [httpworker.3] [wallet/wallet.h:827] [WalletLogPrintf] [basic0] Setting spkMan to active: id = 113354d7b818aa35859b78009547501067fb558a42347533feeb88d3748cc743, type = legacy, internal = false [0m
[0;34m node0 2022-08-25T21:18:36.295295Z [httpworker.3] [wallet/wallet.h:827] [WalletLogPrintf] [basic0] Setting spkMan to active: id = 2870f4a1fea1c9c42f1043a882b5978955d653294cc6a1d3acf9b73d889d63be, type = p2sh-segwit, internal = false [0m
[0;34m node0 2022-08-25T21:18:36.312680Z [httpworker.3] [wallet/wallet.h:827] [WalletLogPrintf] [basic0] Setting spkMan to active: id = ec0ad0d65975e377d55ee9d4ccbda40ffa949c7330063fc2b6ead65345947756, type = bech32, internal = false [0m
[0;34m node0 2022-08-25T21:18:36.334665Z [httpworker.3] [wallet/wallet.h:827] [WalletLogPrintf] [basic0] Setting spkMan to active: id = 8ce7e6631cd392e5591f47670b2ff9efe2170d3a354c11f12fed1652b08c0c57, type = bech32m, internal = false [0m
[0;34m node0 2022-08-25T21:18:36.357514Z [httpworker.3] [wallet/wallet.h:827] [WalletLogPrintf] [basic0] Setting spkMan to active: id = dacac7359a2e143e4d823ca8852ab33dfee433375781c027832bdfaadb2bfb00, type = legacy, internal = true [0m
[0;34m node0 2022-08-25T21:18:36.376136Z [httpworker.3] [wallet/wallet.h:827] [WalletLogPrintf] [basic0] Setting spkMan to active: id = 4a568e19a8973a5bfb4c901d2a3b750c75bd0dd699e185575b1cd2bee75fa604, type = p2sh-segwit, internal = true [0m
[0;34m node0 2022-08-25T21:18:36.398164Z [httpworker.3] [wallet/wallet.h:827] [WalletLogPrintf] [basic0] Setting spkMan to active: id = 9b13d758f22bb559d0f134cc790a3d0f499773bd3f0273def03a30a70ef72b25, type = bech32, internal = true [0m
[0;34m node0 2022-08-25T21:18:36.420224Z [httpworker.3] [wallet/wallet.h:827] [WalletLogPrintf] [basic0] Setting spkMan to active: id = 06cfcb5905d007abe93f4f7a9bd822d48236df338b5f1765afa100eaa8734621, type = bech32m, internal = true [0m
[0;34m node0 2022-08-25T21:18:36.420610Z [httpworker.3] [wallet/wallet.h:827] [WalletLogPrintf] [basic0] Wallet migration complete. [0m
[0;34m node0 2022-08-25T21:18:36.420763Z [httpworker.3] [wallet/wallet.h:827] [WalletLogPrintf] [basic0] Releasing wallet [0m
[0;36m test  2022-08-25T21:18:36.796000Z TestFramework (ERROR): Unexpected exception caught during testing [0m
[0;36m                                   Traceback (most recent call last):[0m
[0;36m                                     File "/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/authproxy.py", line 108, in _request[0m
[0;36m                                       return self._get_response()[0m
[0;36m                                     File "/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/authproxy.py", line 166, in _get_response[0m
[0;36m                                       http_response = self.__conn.getresponse()[0m
[0;36m                                     File "/usr/lib/python3.10/http/client.py", line 1374, in getresponse[0m
[0;36m                                       response.begin()[0m
[0;36m                                     File "/usr/lib/python3.10/http/client.py", line 318, in begin[0m
[0;36m                                       version, status, reason = self._read_status()[0m
[0;36m                                     File "/usr/lib/python3.10/http/client.py", line 287, in _read_status[0m
[0;36m                                       raise RemoteDisconnected("Remote end closed connection without"[0m
[0;36m                                   http.client.RemoteDisconnected: Remote end closed connection without response[0m
[0;36m                                   During handling of the above exception, another exception occurred:[0m
[0;36m                                   Traceback (most recent call last):[0m
[0;36m                                     File "/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/test_framework.py", line 133, in main[0m
[0;36m                                       self.run_test()[0m
[0;36m                                     File "/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/wallet_migration.py", line 400, in run_test[0m
[0;36m                                       self.test_basic()[0m
[0;36m                                     File "/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/wallet_migration.py", line 82, in test_basic[0m
[0;36m                                       basic0.migratewallet()[0m
[0;36m                                     File "/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/coverage.py", line 49, in __call__[0m
[0;36m                                       return_val = self.auth_service_proxy_instance.__call__(*args, **kwargs)[0m
[0;36m                                     File "/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/authproxy.py", line 142, in __call__[0m
[0;36m                                       response, status = self._request('POST', self.__url.path, postdata.encode('utf-8'))[0m
[0;36m                                     File "/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/authproxy.py", line 113, in _request[0m
[0;36m                                       self.__conn.request(method, path, postdata, headers)[0m
[0;36m                                     File "/usr/lib/python3.10/http/client.py", line 1282, in request[0m
[0;36m                                       self._send_request(method, url, body, headers, encode_chunked)[0m
[0;36m                                     File "/usr/lib/python3.10/http/client.py", line 1328, in _send_request[0m
[0;36m                                       self.endheaders(body, encode_chunked=encode_chunked)[0m
[0;36m                                     File "/usr/lib/python3.10/http/client.py", line 1277, in endheaders[0m
[0;36m                                       self._send_output(message_body, encode_chunked=encode_chunked)[0m
[0;36m                                     File "/usr/lib/python3.10/http/client.py", line 1037, in _send_output[0m
[0;36m                                       self.send(msg)[0m
[0;36m                                     File "/usr/lib/python3.10/http/client.py", line 975, in send[0m
[0;36m                                       self.connect()[0m
[0;36m                                     File "/usr/lib/python3.10/http/client.py", line 941, in connect[0m
[0;36m                                       self.sock = self._create_connection([0m
[0;36m                                     File "/usr/lib/python3.10/socket.py", line 845, in create_connection[0m
[0;36m                                       raise err[0m
[0;36m                                     File "/usr/lib/python3.10/socket.py", line 833, in create_connection[0m
[0;36m                                       sock.connect(sa)[0m
[0;36m                                   ConnectionRefusedError: [Errno 111] Connection refused[0m
[0;36m test  2022-08-25T21:18:36.801000Z TestFramework (DEBUG): Closing down network thread [0m
[0;36m test  2022-08-25T21:18:36.851000Z TestFramework (INFO): Stopping nodes [0m
[0;36m test  2022-08-25T21:18:36.851000Z TestFramework.node0 (DEBUG): Stopping node [0m
[0;36m test  2022-08-25T21:18:36.851000Z TestFramework.node0 (ERROR): Unable to stop node. [0m
[0;36m                                   Traceback (most recent call last):[0m
[0;36m                                     File "/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/test_node.py", line 336, in stop_node[0m
[0;36m                                       self.stop(wait=wait)[0m
[0;36m                                     File "/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/coverage.py", line 49, in __call__[0m
[0;36m                                       return_val = self.auth_service_proxy_instance.__call__(*args, **kwargs)[0m
[0;36m                                     File "/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/authproxy.py", line 142, in __call__[0m
[0;36m                                       response, status = self._request('POST', self.__url.path, postdata.encode('utf-8'))[0m
[0;36m                                     File "/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/authproxy.py", line 107, in _request[0m
[0;36m                                       self.__conn.request(method, path, postdata, headers)[0m
[0;36m                                     File "/usr/lib/python3.10/http/client.py", line 1282, in request[0m
[0;36m                                       self._send_request(method, url, body, headers, encode_chunked)[0m
[0;36m                                     File "/usr/lib/python3.10/http/client.py", line 1293, in _send_request[0m
[0;36m                                       self.putrequest(method, url, **skips)[0m
[0;36m                                     File "/usr/lib/python3.10/http/client.py", line 1119, in putrequest[0m
[0;36m                                       raise CannotSendRequest(self.__state)[0m
[0;36m                                   http.client.CannotSendRequest: Request-sent[0m


[1mTEST                                                   | STATUS    | DURATION

[0m[0;32mexample_test.py                                        | â Passed  | 4 s
[0m[0;32mfeature_abortnode.py                                   | â Passed  | 32 s
[0m[0;32mfeature_addrman.py                                     | â Passed  | 14 s
[0m[0;32mfeature_anchors.py                                     | â Passed  | 2 s
[0m[0;32mfeature_asmap.py                                       | â Passed  | 16 s
[0m[0;32mfeature_assumevalid.py                                 | â Passed  | 70 s
[0m[0;32mfeature_bind_extra.py                                  | â Passed  | 2 s
[0m[0;32mfeature_bip68_sequence.py                              | â Passed  | 45 s
[0m[0;32mfeature_block.py                                       | â Passed  | 202 s
[0m[0;32mfeature_blocksdir.py                                   | â Passed  | 2 s
[0m[0;32mfeature_cltv.py                                        | â Passed  | 3 s
[0m[0;32mfeature_coinstatsindex.py                              | â Passed  | 17 s
[0m[0;32mfeature_csv_activation.py                              | â Passed  | 27 s
[0m[0;32mfeature_dersig.py                                      | â Passed  | 2 s
[0m[0;32mfeature_dirsymlinks.py                                 | â Passed  | 2 s
[0m[0;32mfeature_fee_estimation.py                              | â Passed  | 243 s
[0m[0;32mfeature_filelock.py                                    | â Passed  | 3 s
[0m[0;32mfeature_help.py                                        | â Passed  | 1 s
[0m[0;32mfeature_includeconf.py                                 | â Passed  | 9 s
[0m[0;32mfeature_init.py                                        | â Passed  | 33 s
[0m[0;32mfeature_loadblock.py                                   | â Passed  | 4 s
[0m[0;32mfeature_logging.py                                     | â Passed  | 6 s
[0m[0;32mfeature_maxtipage.py                                   | â Passed  | 33 s
[0m[0;32mfeature_maxuploadtarget.py                             | â Passed  | 64 s
[0m[0;32mfeature_minchainwork.py                                | â Passed  | 11 s
[0m[0;32mfeature_notifications.py                               | â Passed  | 19 s
[0m[0;32mfeature_nulldummy.py                                   | â Passed  | 1 s
[0m[0;32mfeature_presegwit_node_upgrade.py                      | â Passed  | 4 s
[0m[0;32mfeature_proxy.py                                       | â Passed  | 5 s
[0m[0;32mfeature_rbf.py --descriptors                           | â Passed  | 25 s
[0m[0;32mfeature_rbf.py --legacy-wallet                         | â Passed  | 29 s
[0m[0;32mfeature_reindex.py                                     | â Passed  | 8 s
[0m[0;32mfeature_segwit.py --descriptors                        | â Passed  | 14 s
[0m[0;32mfeature_segwit.py --legacy-wallet                      | â Passed  | 31 s
[0m[0;32mfeature_settings.py                                    | â Passed  | 7 s
[0m[0;32mfeature_shutdown.py                                    | â Passed  | 2 s
[0m[0;32mfeature_signet.py                                      | â Passed  | 5 s
[0m[0;32mfeature_startupnotify.py                               | â Passed  | 2 s
[0m[0;32mfeature_taproot.py                                     | â Passed  | 274 s
[0m[0;32mfeature_uacomment.py                                   | â Passed  | 5 s
[0m[0;32mfeature_utxo_set_hash.py                               | â Passed  | 3 s
[0m[0;32mfeature_versionbits_warning.py                         | â Passed  | 7 s
[0m[0;32minterface_bitcoin_cli.py --descriptors                 | â Passed  | 13 s
[0m[0;32minterface_bitcoin_cli.py --legacy-wallet               | â Passed  | 15 s
[0m[0;32minterface_http.py                                      | â Passed  | 1 s
[0m[0;32minterface_rest.py                                      | â Passed  | 4 s
[0m[0;32minterface_rpc.py                                       | â Passed  | 2 s
[0m[0;32minterface_zmq.py                                       | â Passed  | 28 s
[0m[0;32mmempool_accept.py                                      | â Passed  | 9 s
[0m[0;32mmempool_accept_wtxid.py                                | â Passed  | 15 s
[0m[0;32mmempool_datacarrier.py                                 | â Passed  | 2 s
[0m[0;32mmempool_expiry.py                                      | â Passed  | 3 s
[0m[0;32mmempool_limit.py                                       | â Passed  | 11 s
[0m[0;32mmempool_package_limits.py                              | â Passed  | 4 s
[0m[0;32mmempool_package_onemore.py                             | â Passed  | 1 s
[0m[0;32mmempool_packages.py                                    | â Passed  | 14 s
[0m[0;32mmempool_persist.py                                     | â Passed  | 20 s
[0m[0;32mmempool_reorg.py                                       | â Passed  | 3 s
[0m[0;32mmempool_resurrect.py                                   | â Passed  | 2 s
[0m[0;32mmempool_spend_coinbase.py                              | â Passed  | 1 s
[0m[0;32mmempool_unbroadcast.py                                 | â Passed  | 9 s
[0m[0;32mmempool_updatefromblock.py                             | â Passed  | 84 s
[0m[0;32mmining_basic.py                                        | â Passed  | 17 s
[0m[0;32mmining_getblocktemplate_longpoll.py                    | â Passed  | 69 s
[0m[0;32mmining_prioritisetransaction.py                        | â Passed  | 14 s
[0m[0;32mp2p_add_connections.py                                 | â Passed  | 13 s
[0m[0;32mp2p_addr_relay.py                                      | â Passed  | 21 s
[0m[0;32mp2p_addrfetch.py                                       | â Passed  | 2 s
[0m[0;32mp2p_addrv2_relay.py                                    | â Passed  | 2 s
[0m[0;32mp2p_block_sync.py                                      | â Passed  | 3 s
[0m[0;32mp2p_blocksonly.py                                      | â Passed  | 17 s
[0m[0;32mp2p_compactblocks.py                                   | â Passed  | 9 s
[0m[0;32mp2p_compactblocks_blocksonly.py                        | â Passed  | 2 s
[0m[0;32mp2p_compactblocks_hb.py                                | â Passed  | 19 s
[0m[0;32mp2p_disconnect_ban.py                                  | â Passed  | 2 s
[0m[0;32mp2p_dns_seeds.py                                       | â Passed  | 37 s
[0m[0;32mp2p_dos_header_tree.py                                 | â Passed  | 3 s
[0m[0;32mp2p_eviction.py                                        | â Passed  | 6 s
[0m[0;32mp2p_feefilter.py                                       | â Passed  | 15 s
[0m[0;32mp2p_filter.py                                          | â Passed  | 4 s
[0m[0;32mp2p_fingerprint.py                                     | â Passed  | 2 s
[0m[0;32mp2p_getaddr_caching.py                                 | â Passed  | 21 s
[0m[0;32mp2p_getdata.py                                         | â Passed  | 1 s
[0m[0;32mp2p_initial_headers_sync.py                            | â Passed  | 2 s
[0m[0;32mp2p_invalid_block.py                                   | â Passed  | 3 s
[0m[0;32mp2p_invalid_locator.py                                 | â Passed  | 2 s
[0m[0;32mp2p_invalid_messages.py                                | â Passed  | 19 s
[0m[0;32mp2p_invalid_tx.py                                      | â Passed  | 8 s
[0m[0;32mp2p_leak.py                                            | â Passed  | 6 s
[0m[0;32mp2p_leak_tx.py                                         | â Passed  | 2 s
[0m[0;32mp2p_message_capture.py                                 | â Passed  | 1 s
[0m[0;32mp2p_nobloomfilter_messages.py                          | â Passed  | 2 s
[0m[0;32mp2p_ping.py                                            | â Passed  | 2 s
[0m[0;32mp2p_segwit.py                                          | â Passed  | 94 s
[0m[0;32mp2p_sendheaders.py                                     | â Passed  | 26 s
[0m[0;32mp2p_timeouts.py                                        | â Passed  | 2 s
[0m[0;32mp2p_tx_download.py                                     | â Passed  | 43 s
[0m[0;32mp2p_unrequested_blocks.py                              | â Passed  | 12 s
[0m[0;32mrpc_bind.py --ipv4                                     | â Passed  | 2 s
[0m[0;32mrpc_bind.py --nonloopback                              | â Passed  | 32 s
[0m[0;32mrpc_blockchain.py                                      | â Passed  | 29 s
[0m[0;32mrpc_createmultisig.py                                  | â Passed  | 31 s
[0m[0;32mrpc_decodescript.py                                    | â Passed  | 1 s
[0m[0;32mrpc_deprecated.py                                      | â Passed  | 1 s
[0m[0;32mrpc_deriveaddresses.py                                 | â Passed  | 1 s
[0m[0;32mrpc_deriveaddresses.py --usecli                        | â Passed  | 1 s
[0m[0;32mrpc_dumptxoutset.py                                    | â Passed  | 2 s
[0m[0;32mrpc_estimatefee.py                                     | â Passed  | 1 s
[0m[0;32mrpc_fundrawtransaction.py --descriptors                | â Passed  | 38 s
[0m[0;32mrpc_fundrawtransaction.py --legacy-wallet              | â Passed  | 55 s
[0m[0;32mrpc_generate.py                                        | â Passed  | 1 s
[0m[0;32mrpc_getblockfilter.py                                  | â Passed  | 2 s
[0m[0;32mrpc_getblockfrompeer.py                                | â Passed  | 3 s
[0m[0;32mrpc_getblockstats.py                                   | â Passed  | 2 s
[0m[0;32mrpc_getchaintips.py                                    | â Passed  | 6 s
[0m[0;32mrpc_getdescriptorinfo.py                               | â Passed  | 2 s
[0m[0;32mrpc_help.py                                            | â Passed  | 3 s
[0m[0;32mrpc_invalid_address_message.py                         | â Passed  | 1 s
[0m[0;32mrpc_invalidateblock.py                                 | â Passed  | 2 s
[0m[0;32mrpc_mempool_info.py                                    | â Passed  | 1 s
[0m[0;32mrpc_misc.py                                            | â Passed  | 8 s
[0m[0;32mrpc_named_arguments.py                                 | â Passed  | 1 s
[0m[0;32mrpc_net.py                                             | â Passed  | 30 s
[0m[0;32mrpc_packages.py                                        | â Passed  | 45 s
[0m[0;32mrpc_preciousblock.py                                   | â Passed  | 1 s
[0m[0;32mrpc_psbt.py --descriptors                              | â Passed  | 56 s
[0m[0;32mrpc_psbt.py --legacy-wallet                            | â Passed  | 31 s
[0m[0;32mrpc_rawtransaction.py --legacy-wallet                  | â Passed  | 14 s
[0m[0;32mrpc_scantxoutset.py                                    | â Passed  | 10 s
[0m[0;32mrpc_setban.py                                          | â Passed  | 6 s
[0m[0;32mrpc_signer.py                                          | â Passed  | 2 s
[0m[0;32mrpc_signmessagewithprivkey.py                          | â Passed  | 1 s
[0m[0;32mrpc_signrawtransactionwithkey.py                       | â Passed  | 4 s
[0m[0;32mrpc_txoutproof.py                                      | â Passed  | 6 s
[0m[0;32mrpc_uptime.py                                          | â Passed  | 1 s
[0m[0;32mrpc_users.py                                           | â Passed  | 9 s
[0m[0;32mrpc_whitelist.py                                       | â Passed  | 1 s
[0m[0;32mtool_signet_miner.py --descriptors                     | â Passed  | 15 s
[0m[0;32mtool_signet_miner.py --legacy-wallet                   | â Passed  | 15 s
[0m[0;32mtool_wallet.py --descriptors                           | â Passed  | 20 s
[0m[0;32mtool_wallet.py --legacy-wallet                         | â Passed  | 25 s
[0m[0;32mwallet_abandonconflict.py --descriptors                | â Passed  | 11 s
[0m[0;32mwallet_abandonconflict.py --legacy-wallet              | â Passed  | 12 s
[0m[0;32mwallet_address_types.py --descriptors                  | â Passed  | 32 s
[0m[0;32mwallet_address_types.py --legacy-wallet                | â Passed  | 47 s
[0m[0;32mwallet_avoid_mixing_output_types.py --descriptors      | â Passed  | 16 s
[0m[0;32mwallet_avoidreuse.py --descriptors                     | â Passed  | 57 s
[0m[0;32mwallet_avoidreuse.py --legacy-wallet                   | â Passed  | 88 s
[0m[0;32mwallet_backup.py --descriptors                         | â Passed  | 39 s
[0m[0;32mwallet_backup.py --legacy-wallet                       | â Passed  | 58 s
[0m[0;32mwallet_balance.py --descriptors                        | â Passed  | 11 s
[0m[0;32mwallet_balance.py --legacy-wallet                      | â Passed  | 10 s
[0m[0;32mwallet_basic.py --descriptors                          | â Passed  | 42 s
[0m[0;32mwallet_basic.py --legacy-wallet                        | â Passed  | 45 s
[0m[0;32mwallet_bumpfee.py --descriptors                        | â Passed  | 56 s
[0m[0;32mwallet_bumpfee.py --legacy-wallet                      | â Passed  | 46 s
[0m[0;32mwallet_coinbase_category.py --descriptors              | â Passed  | 3 s
[0m[0;32mwallet_coinbase_category.py --legacy-wallet            | â Passed  | 3 s
[0m[0;32mwallet_create_tx.py --descriptors                      | â Passed  | 10 s
[0m[0;32mwallet_create_tx.py --legacy-wallet                    | â Passed  | 14 s
[0m[0;32mwallet_createwallet.py --descriptors                   | â Passed  | 5 s
[0m[0;32mwallet_createwallet.py --legacy-wallet                 | â Passed  | 11 s
[0m[0;32mwallet_createwallet.py --usecli                        | â Passed  | 10 s
[0m[0;32mwallet_crosschain.py                                   | â Passed  | 2 s
[0m[0;32mwallet_descriptor.py --descriptors                     | â Passed  | 9 s
[0m[0;32mwallet_disable.py                                      | â Passed  | 1 s
[0m[0;32mwallet_dump.py --legacy-wallet                         | â Passed  | 8 s
[0m[0;32mwallet_encryption.py --descriptors                     | â Passed  | 6 s
[0m[0;32mwallet_encryption.py --legacy-wallet                   | â Passed  | 6 s
[0m[0;32mwallet_fallbackfee.py --descriptors                    | â Passed  | 2 s
[0m[0;32mwallet_fallbackfee.py --legacy-wallet                  | â Passed  | 3 s
[0m[0;32mwallet_groups.py --descriptors                         | â Passed  | 49 s
[0m[0;32mwallet_groups.py --legacy-wallet                       | â Passed  | 43 s
[0m[0;32mwallet_hd.py --descriptors                             | â Passed  | 11 s
[0m[0;32mwallet_hd.py --legacy-wallet                           | â Passed  | 15 s
[0m[0;32mwallet_implicitsegwit.py --legacy-wallet               | â Passed  | 6 s
[0m[0;32mwallet_import_with_label.py --legacy-wallet            | â Passed  | 1 s
[0m[0;32mwallet_importdescriptors.py --descriptors              | â Passed  | 16 s
[0m[0;32mwallet_importmulti.py --legacy-wallet                  | â Passed  | 18 s
[0m[0;32mwallet_importprunedfunds.py --descriptors              | â Passed  | 5 s
[0m[0;32mwallet_importprunedfunds.py --legacy-wallet            | â Passed  | 5 s
[0m[0;32mwallet_keypool.py --descriptors                        | â Passed  | 4 s
[0m[0;32mwallet_keypool.py --legacy-wallet                      | â Passed  | 4 s
[0m[0;32mwallet_keypool_topup.py --descriptors                  | â Passed  | 13 s
[0m[0;32mwallet_keypool_topup.py --legacy-wallet                | â Passed  | 21 s
[0m[0;32mwallet_labels.py --descriptors                         | â Passed  | 3 s
[0m[0;32mwallet_labels.py --legacy-wallet                       | â Passed  | 5 s
[0m[0;32mwallet_listdescriptors.py --descriptors                | â Passed  | 2 s
[0m[0;32mwallet_listreceivedby.py --descriptors                 | â Passed  | 13 s
[0m[0;32mwallet_listreceivedby.py --legacy-wallet               | â Passed  | 10 s
[0m[0;32mwallet_listsinceblock.py --descriptors                 | â Passed  | 12 s
[0m[0;32mwallet_listsinceblock.py --legacy-wallet               | â Passed  | 10 s
[0m[0;32mwallet_listtransactions.py --descriptors               | â Passed  | 24 s
[0m[0;32mwallet_listtransactions.py --legacy-wallet             | â Passed  | 26 s
[0m[0;32mwallet_miniscript.py                                   | â Passed  | 2 s
[0m[0;32mwallet_multisig_descriptor_psbt.py                     | â Passed  | 6 s
[0m[0;32mwallet_multiwallet.py --descriptors                    | â Passed  | 26 s
[0m[0;32mwallet_multiwallet.py --legacy-wallet                  | â Passed  | 63 s
[0m[0;32mwallet_multiwallet.py --usecli                         | â Passed  | 40 s
[0m[0;32mwallet_orphanedreward.py                               | â Passed  | 10 s
[0m[0;32mwallet_reorgsrestore.py                                | â Passed  | 7 s
[0m[0;32mwallet_resendwallettransactions.py --descriptors       | â Passed  | 6 s
[0m[0;32mwallet_resendwallettransactions.py --legacy-wallet     | â Passed  | 2 s
[0m[0;32mwallet_send.py --descriptors                           | â Passed  | 16 s
[0m[0;32mwallet_send.py --legacy-wallet                         | â Passed  | 21 s
[0m[0;32mwallet_sendall.py --descriptors                        | â Passed  | 4 s
[0m[0;32mwallet_sendall.py --legacy-wallet                      | â Passed  | 5 s
[0m[0;32mwallet_signer.py --descriptors                         | â Passed  | 6 s
[0m[0;32mwallet_signmessagewithaddress.py                       | â Passed  | 1 s
[0m[0;32mwallet_signrawtransactionwithwallet.py --descriptors   | â Passed  | 6 s
[0m[0;32mwallet_signrawtransactionwithwallet.py --legacy-wallet | â Passed  | 4 s
[0m[0;32mwallet_simulaterawtx.py --descriptors                  | â Passed  | 2 s
[0m[0;32mwallet_simulaterawtx.py --legacy-wallet                | â Passed  | 2 s
[0m[0;32mwallet_startup.py                                      | â Passed  | 5 s
[0m[0;32mwallet_timelock.py                                     | â Passed  | 2 s
[0m[0;32mwallet_transactiontime_rescan.py --descriptors         | â Passed  | 13 s
[0m[0;32mwallet_transactiontime_rescan.py --legacy-wallet       | â Passed  | 14 s
[0m[0;32mwallet_txn_clone.py                                    | â Passed  | 9 s
[0m[0;32mwallet_txn_clone.py --mineblock                        | â Passed  | 5 s
[0m[0;32mwallet_txn_clone.py --segwit                           | â Passed  | 10 s
[0m[0;32mwallet_txn_doublespend.py --descriptors                | â Passed  | 4 s
[0m[0;32mwallet_txn_doublespend.py --legacy-wallet              | â Passed  | 4 s
[0m[0;32mwallet_txn_doublespend.py --mineblock                  | â Passed  | 5 s
[0m[0;32mwallet_watchonly.py --legacy-wallet                    | â Passed  | 3 s
[0m[0;32mwallet_watchonly.py --usecli --legacy-wallet           | â Passed  | 4 s
[0m[0mfeature_backwards_compatibility.py --descriptors       | â Skipped | 0 s
[0m[0mfeature_backwards_compatibility.py --legacy-wallet     | â Skipped | 0 s
[0m[0mfeature_bind_port_discover.py                          | â Skipped | 0 s
[0m[0mfeature_bind_port_externalip.py                        | â Skipped | 0 s
[0m[0mfeature_syscall_sandbox.py                             | â Skipped | 0 s
[0m[0mfeature_txindex_compatibility.py                       | â Skipped | 0 s
[0m[0mfeature_unsupported_utxo_db.py                         | â Skipped | 0 s
[0m[0minterface_usdt_coinselection.py                        | â Skipped | 0 s
[0m[0minterface_usdt_net.py                                  | â Skipped | 1 s
[0m[0minterface_usdt_utxocache.py                            | â Skipped | 1 s
[0m[0minterface_usdt_validation.py                           | â Skipped | 1 s
[0m[0mmempool_compatibility.py                               | â Skipped | 0 s
[0m[0mrpc_bind.py --ipv6                                     | â Skipped | 0 s
[0m[0mwallet_inactive_hdchains.py                            | â Skipped | 0 s
[0m[0mwallet_upgradewallet.py --legacy-wallet                | â Skipped | 0 s
[0m[0;31mwallet_migration.py                                    | â Failed  | 2 s
[0m[0;31m[1m
ALL                                                    | â Failed  | 3841 s (accumulated) 
[0m[0mRuntime: 417 s

==================
WARNING: ThreadSanitizer: destroy of a locked mutex (pid=50566)
    #0 pthread_mutex_destroy <null> (bitcoind+0xd2568)
    #1 AnnotatedMixin<std::__1::recursive_mutex>::~AnnotatedMixin() src/./sync.h:97:5 (bitcoind+0x678095)
    #2 wallet::CWallet::~CWallet() src/./wallet/wallet.h:385:5 (bitcoind+0x678095)
    #3 wallet::ReleaseWallet(wallet::CWallet*) src/wallet/wallet.cpp:195:5 (bitcoind+0x66214f)
    #4 std::__1::__shared_ptr_pointer<wallet::CWallet*, void (*)(wallet::CWallet*), std::__1::allocator<wallet::CWallet> >::__on_zero_shared() /usr/lib/llvm-13/bin/../include/c++/v1/__memory/shared_ptr.h:267:5 (bitcoind+0x6896b7)
    #5 std::__1::__shared_count::__release_shared() /usr/lib/llvm-13/bin/../include/c++/v1/__memory/shared_ptr.h:177:9 (bitcoind+0x640351)
    #6 std::__1::__shared_weak_count::__release_shared() /usr/lib/llvm-13/bin/../include/c++/v1/__memory/shared_ptr.h:219:27 (bitcoind+0x640351)
    #7 std::__1::shared_ptr<wallet::CWallet>::~shared_ptr() /usr/lib/llvm-13/bin/../include/c++/v1/__memory/shared_ptr.h:959:19 (bitcoind+0x640351)
    #8 std::__1::shared_ptr<wallet::CWallet>::reset() /usr/lib/llvm-13/bin/../include/c++/v1/__memory/shared_ptr.h:1054:5 (bitcoind+0x640351)
    #9 wallet::UnloadWallet(std::__1::shared_ptr<wallet::CWallet>&&) src/wallet/wallet.cpp:222:12 (bitcoind+0x640351)
    #10 wallet::MigrateLegacyToDescriptor(std::__1::shared_ptr<wallet::CWallet>&&, wallet::WalletContext&, bilingual_str&) src/wallet/wallet.cpp:4057:9 (bitcoind+0x66cc6b)
    #11 wallet::migratewallet()::$_10::operator()(RPCHelpMan const&, JSONRPCRequest const&) const src/wallet/rpc/wallet.cpp:730:10 (bitcoind+0x5d73a8)
    #12 decltype(static_cast<wallet::migratewallet()::$_10&>(fp)(static_cast<RPCHelpMan const&>(fp0), static_cast<JSONRPCRequest const&>(fp0))) std::__1::__invoke<wallet::migratewallet()::$_10&, RPCHelpMan const&, JSONRPCRequest const&>(wallet::migratewallet()::$_10&, RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-13/bin/../include/c++/v1/type_traits:3918:1 (bitcoind+0x5d73a8)
    #13 UniValue std::__1::__invoke_void_return_wrapper<UniValue, false>::__call<wallet::migratewallet()::$_10&, RPCHelpMan const&, JSONRPCRequest const&>(wallet::migratewallet()::$_10&, RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/invoke.h:30:16 (bitcoind+0x5d73a8)
    #14 std::__1::__function::__alloc_func<wallet::migratewallet()::$_10, std::__1::allocator<wallet::migratewallet()::$_10>, UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:171:16 (bitcoind+0x5d73a8)
    #15 std::__1::__function::__func<wallet::migratewallet()::$_10, std::__1::allocator<wallet::migratewallet()::$_10>, UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:345:12 (bitcoind+0x5d73a8)
    #16 std::__1::__function::__value_func<UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(RPCHelpMan const&, JSONRPCRequest const&) const /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:498:16 (bitcoind+0x85124f)
    #17 std::__1::function<UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(RPCHelpMan const&, JSONRPCRequest const&) const /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:1175:12 (bitcoind+0x85124f)
    #18 RPCHelpMan::HandleRequest(JSONRPCRequest const&) const src/rpc/util.cpp:584:26 (bitcoind+0x85124f)
    #19 CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const src/./rpc/server.h:109:91 (bitcoind+0x32ad37)
    #20 decltype(static_cast<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&>(fp)(static_cast<JSONRPCRequest const&>(fp0), static_cast<UniValue&>(fp0), static_cast<bool>(fp0))) std::__1::__invoke<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-13/bin/../include/c++/v1/type_traits:3918:1 (bitcoind+0x32ad37)
    #21 bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/invoke.h:30:16 (bitcoind+0x32ad37)
    #22 std::__1::__function::__alloc_func<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:171:16 (bitcoind+0x32ad37)
    #23 std::__1::__function::__func<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:345:12 (bitcoind+0x32ad37)
    #24 std::__1::__function::__value_func<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) const /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:498:16 (bitcoind+0x596272)
    #25 std::__1::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:1175:12 (bitcoind+0x596272)
    #26 wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const src/wallet/interfaces.cpp:541:24 (bitcoind+0x596272)
    #27 decltype(static_cast<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&>(fp)(static_cast<JSONRPCRequest const&>(fp0), static_cast<UniValue&>(fp0), static_cast<bool>(fp0))) std::__1::__invoke<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-13/bin/../include/c++/v1/type_traits:3918:1 (bitcoind+0x596272)
    #28 bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/invoke.h:30:16 (bitcoind+0x596272)
    #29 std::__1::__function::__alloc_func<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:171:16 (bitcoind+0x596272)
    #30 std::__1::__function::__func<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:345:12 (bitcoind+0x596272)
    #31 std::__1::__function::__value_func<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) const /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:498:16 (bitcoind+0x2b0426)
    #32 std::__1::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:1175:12 (bitcoind+0x2b0426)
    #33 node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const src/node/interfaces.cpp:470:24 (bitcoind+0x2b0426)
    #34 decltype(static_cast<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&>(fp)(static_cast<JSONRPCRequest const&>(fp0), static_cast<UniValue&>(fp0), static_cast<bool>(fp0))) std::__1::__invoke<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-13/bin/../include/c++/v1/type_traits:3918:1 (bitcoind+0x2b0426)
    #35 bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/invoke.h:30:16 (bitcoind+0x2b0426)
    #36 std::__1::__function::__alloc_func<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:171:16 (bitcoind+0x2b0426)
    #37 std::__1::__function::__func<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:345:12 (bitcoind+0x2b0426)
    #38 std::__1::__function::__value_func<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) const /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:498:16 (bitcoind+0x41b213)
    #39 std::__1::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:1175:12 (bitcoind+0x41b213)
    #40 ExecuteCommand(CRPCCommand const&, JSONRPCRequest const&, UniValue&, bool) src/rpc/server.cpp:476:20 (bitcoind+0x41b213)
    #41 ExecuteCommands(std::__1::vector<CRPCCommand const*, std::__1::allocator<CRPCCommand const*> > const&, JSONRPCRequest const&, UniValue&) src/rpc/server.cpp:442:13 (bitcoind+0x41b213)
    #42 CRPCTable::execute(JSONRPCRequest const&) const src/rpc/server.cpp:462:13 (bitcoind+0x41a810)
    #43 HTTPReq_JSONRPC(std::__1::any const&, HTTPRequest*) src/httprpc.cpp:201:40 (bitcoind+0x538e96)
    #44 StartHTTPRPC(std::__1::any const&)::$_0::operator()(HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const src/httprpc.cpp:300:80 (bitcoind+0x538e96)
    #45 decltype(static_cast<StartHTTPRPC(std::__1::any const&)::$_0&>(fp)(static_cast<HTTPRequest*>(fp0), static_cast<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(fp0))) std::__1::__invoke<StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) /usr/lib/llvm-13/bin/../include/c++/v1/type_traits:3918:1 (bitcoind+0x538e96)
    #46 bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/invoke.h:30:16 (bitcoind+0x538e96)
    #47 std::__1::__function::__alloc_func<StartHTTPRPC(std::__1::any const&)::$_0, std::__1::allocator<StartHTTPRPC(std::__1::any const&)::$_0>, bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)>::operator()(HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:171:16 (bitcoind+0x538e96)
    #48 std::__1::__function::__func<StartHTTPRPC(std::__1::any const&)::$_0, std::__1::allocator<StartHTTPRPC(std::__1::any const&)::$_0>, bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)>::operator()(HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:345:12 (bitcoind+0x538e96)
    #49 std::__1::__function::__value_func<bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)>::operator()(HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:498:16 (bitcoind+0x547960)
    #50 std::__1::function<bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)>::operator()(HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:1175:12 (bitcoind+0x547960)
    #51 HTTPWorkItem::operator()() src/httpserver.cpp:56:9 (bitcoind+0x547960)
    #52 WorkQueue<HTTPClosure>::Run() src/httpserver.cpp:111:13 (bitcoind+0x54a1a3)
    #53 HTTPWorkQueueRun(WorkQueue<HTTPClosure>*, int) src/httpserver.cpp:341:12 (bitcoind+0x541c7a)
    #54 decltype(static_cast<void (*>(fp)(static_cast<WorkQueue<HTTPClosure>*>(fp0), static_cast<int>(fp0))) std::__1::__invoke<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>(void (*&&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&&) /usr/lib/llvm-13/bin/../include/c++/v1/type_traits:3918:1 (bitcoind+0x54ae15)
    #55 void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int, 2ul, 3ul>(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>&, std::__1::__tuple_indices<2ul, 3ul>) /usr/lib/llvm-13/bin/../include/c++/v1/thread:280:5 (bitcoind+0x54ae15)
    #56 void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int> >(void*) /usr/lib/llvm-13/bin/../include/c++/v1/thread:291:5 (bitcoind+0x54ae15)

  and:
    #0 pthread_mutex_destroy <null> (bitcoind+0xd2568)
    #1 AnnotatedMixin<std::__1::recursive_mutex>::~AnnotatedMixin() src/./sync.h:97:5 (bitcoind+0x678095)
    #2 wallet::CWallet::~CWallet() src/./wallet/wallet.h:385:5 (bitcoind+0x678095)
    #3 wallet::ReleaseWallet(wallet::CWallet*) src/wallet/wallet.cpp:195:5 (bitcoind+0x66214f)
    #4 std::__1::__shared_ptr_pointer<wallet::CWallet*, void (*)(wallet::CWallet*), std::__1::allocator<wallet::CWallet> >::__on_zero_shared() /usr/lib/llvm-13/bin/../include/c++/v1/__memory/shared_ptr.h:267:5 (bitcoind+0x6896b7)
    #5 std::__1::__shared_count::__release_shared() /usr/lib/llvm-13/bin/../include/c++/v1/__memory/shared_ptr.h:177:9 (bitcoind+0x640351)
    #6 std::__1::__shared_weak_count::__release_shared() /usr/lib/llvm-13/bin/../include/c++/v1/__memory/shared_ptr.h:219:27 (bitcoind+0x640351)
    #7 std::__1::shared_ptr<wallet::CWallet>::~shared_ptr() /usr/lib/llvm-13/bin/../include/c++/v1/__memory/shared_ptr.h:959:19 (bitcoind+0x640351)
    #8 std::__1::shared_ptr<wallet::CWallet>::reset() /usr/lib/llvm-13/bin/../include/c++/v1/__memory/shared_ptr.h:1054:5 (bitcoind+0x640351)
    #9 wallet::UnloadWallet(std::__1::shared_ptr<wallet::CWallet>&&) src/wallet/wallet.cpp:222:12 (bitcoind+0x640351)
    #10 wallet::MigrateLegacyToDescriptor(std::__1::shared_ptr<wallet::CWallet>&&, wallet::WalletContext&, bilingual_str&) src/wallet/wallet.cpp:4057:9 (bitcoind+0x66cc6b)
    #11 wallet::migratewallet()::$_10::operator()(RPCHelpMan const&, JSONRPCRequest const&) const src/wallet/rpc/wallet.cpp:730:10 (bitcoind+0x5d73a8)
    #12 decltype(static_cast<wallet::migratewallet()::$_10&>(fp)(static_cast<RPCHelpMan const&>(fp0), static_cast<JSONRPCRequest const&>(fp0))) std::__1::__invoke<wallet::migratewallet()::$_10&, RPCHelpMan const&, JSONRPCRequest const&>(wallet::migratewallet()::$_10&, RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-13/bin/../include/c++/v1/type_traits:3918:1 (bitcoind+0x5d73a8)
    #13 UniValue std::__1::__invoke_void_return_wrapper<UniValue, false>::__call<wallet::migratewallet()::$_10&, RPCHelpMan const&, JSONRPCRequest const&>(wallet::migratewallet()::$_10&, RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/invoke.h:30:16 (bitcoind+0x5d73a8)
    #14 std::__1::__function::__alloc_func<wallet::migratewallet()::$_10, std::__1::allocator<wallet::migratewallet()::$_10>, UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:171:16 (bitcoind+0x5d73a8)
    #15 std::__1::__function::__func<wallet::migratewallet()::$_10, std::__1::allocator<wallet::migratewallet()::$_10>, UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:345:12 (bitcoind+0x5d73a8)
    #16 std::__1::__function::__value_func<UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(RPCHelpMan const&, JSONRPCRequest const&) const /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:498:16 (bitcoind+0x85124f)
    #17 std::__1::function<UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(RPCHelpMan const&, JSONRPCRequest const&) const /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:1175:12 (bitcoind+0x85124f)
    #18 RPCHelpMan::HandleRequest(JSONRPCRequest const&) const src/rpc/util.cpp:584:26 (bitcoind+0x85124f)
    #19 CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const src/./rpc/server.h:109:91 (bitcoind+0x32ad37)
    #20 decltype(static_cast<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&>(fp)(static_cast<JSONRPCRequest const&>(fp0), static_cast<UniValue&>(fp0), static_cast<bool>(fp0))) std::__1::__invoke<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-13/bin/../include/c++/v1/type_traits:3918:1 (bitcoind+0x32ad37)
    #21 bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/invoke.h:30:16 (bitcoind+0x32ad37)
    #22 std::__1::__function::__alloc_func<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:171:16 (bitcoind+0x32ad37)
    #23 std::__1::__function::__func<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:345:12 (bitcoind+0x32ad37)
    #24 std::__1::__function::__value_func<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) const /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:498:16 (bitcoind+0x596272)
    #25 std::__1::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:1175:12 (bitcoind+0x596272)
    #26 wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const src/wallet/interfaces.cpp:541:24 (bitcoind+0x596272)
    #27 decltype(static_cast<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&>(fp)(static_cast<JSONRPCRequest const&>(fp0), static_cast<UniValue&>(fp0), static_cast<bool>(fp0))) std::__1::__invoke<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-13/bin/../include/c++/v1/type_traits:3918:1 (bitcoind+0x596272)
    #28 bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/invoke.h:30:16 (bitcoind+0x596272)
    #29 std::__1::__function::__alloc_func<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:171:16 (bitcoind+0x596272)
    #30 std::__1::__function::__func<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:345:12 (bitcoind+0x596272)
    #31 std::__1::__function::__value_func<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) const /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:498:16 (bitcoind+0x2b0426)
    #32 std::__1::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:1175:12 (bitcoind+0x2b0426)
    #33 node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const src/node/interfaces.cpp:470:24 (bitcoind+0x2b0426)
    #34 decltype(static_cast<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&>(fp)(static_cast<JSONRPCRequest const&>(fp0), static_cast<UniValue&>(fp0), static_cast<bool>(fp0))) std::__1::__invoke<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-13/bin/../include/c++/v1/type_traits:3918:1 (bitcoind+0x2b0426)
    #35 bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/invoke.h:30:16 (bitcoind+0x2b0426)
    #36 std::__1::__function::__alloc_func<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:171:16 (bitcoind+0x2b0426)
    #37 std::__1::__function::__func<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:345:12 (bitcoind+0x2b0426)
    #38 std::__1::__function::__value_func<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) const /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:498:16 (bitcoind+0x41b213)
    #39 std::__1::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:1175:12 (bitcoind+0x41b213)
    #40 ExecuteCommand(CRPCCommand const&, JSONRPCRequest const&, UniValue&, bool) src/rpc/server.cpp:476:20 (bitcoind+0x41b213)
    #41 ExecuteCommands(std::__1::vector<CRPCCommand const*, std::__1::allocator<CRPCCommand const*> > const&, JSONRPCRequest const&, UniValue&) src/rpc/server.cpp:442:13 (bitcoind+0x41b213)
    #42 CRPCTable::execute(JSONRPCRequest const&) const src/rpc/server.cpp:462:13 (bitcoind+0x41a810)
    #43 HTTPReq_JSONRPC(std::__1::any const&, HTTPRequest*) src/httprpc.cpp:201:40 (bitcoind+0x538e96)
    #44 StartHTTPRPC(std::__1::any const&)::$_0::operator()(HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const src/httprpc.cpp:300:80 (bitcoind+0x538e96)
    #45 decltype(static_cast<StartHTTPRPC(std::__1::any const&)::$_0&>(fp)(static_cast<HTTPRequest*>(fp0), static_cast<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(fp0))) std::__1::__invoke<StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) /usr/lib/llvm-13/bin/../include/c++/v1/type_traits:3918:1 (bitcoind+0x538e96)
    #46 bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/invoke.h:30:16 (bitcoind+0x538e96)
    #47 std::__1::__function::__alloc_func<StartHTTPRPC(std::__1::any const&)::$_0, std::__1::allocator<StartHTTPRPC(std::__1::any const&)::$_0>, bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)>::operator()(HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:171:16 (bitcoind+0x538e96)
    #48 std::__1::__function::__func<StartHTTPRPC(std::__1::any const&)::$_0, std::__1::allocator<StartHTTPRPC(std::__1::any const&)::$_0>, bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)>::operator()(HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:345:12 (bitcoind+0x538e96)
    #49 std::__1::__function::__value_func<bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)>::operator()(HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:498:16 (bitcoind+0x547960)
    #50 std::__1::function<bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)>::operator()(HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:1175:12 (bitcoind+0x547960)
    #51 HTTPWorkItem::operator()() src/httpserver.cpp:56:9 (bitcoind+0x547960)
    #52 WorkQueue<HTTPClosure>::Run() src/httpserver.cpp:111:13 (bitcoind+0x54a1a3)
    #53 HTTPWorkQueueRun(WorkQueue<HTTPClosure>*, int) src/httpserver.cpp:341:12 (bitcoind+0x541c7a)
    #54 decltype(static_cast<void (*>(fp)(static_cast<WorkQueue<HTTPClosure>*>(fp0), static_cast<int>(fp0))) std::__1::__invoke<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>(void (*&&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&&) /usr/lib/llvm-13/bin/../include/c++/v1/type_traits:3918:1 (bitcoind+0x54ae15)
    #55 void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int, 2ul, 3ul>(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>&, std::__1::__tuple_indices<2ul, 3ul>) /usr/lib/llvm-13/bin/../include/c++/v1/thread:280:5 (bitcoind+0x54ae15)
    #56 void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int> >(void*) /usr/lib/llvm-13/bin/../include/c++/v1/thread:291:5 (bitcoind+0x54ae15)

  Location is heap block of size 840 at 0x7b5c00030200 allocated by thread T18:
    #0 operator new(unsigned long) <null> (bitcoind+0x145d38)
    #1 wallet::CWallet::Create(wallet::WalletContext&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::unique_ptr<wallet::WalletDatabase, std::__1::default_delete<wallet::WalletDatabase> >, unsigned long, bilingual_str&, std::__1::vector<bilingual_str, std::__1::allocator<bilingual_str> >&) src/wallet/wallet.cpp:2793:51 (bitcoind+0x6439db)
    #2 wallet::CreateWallet(wallet::WalletContext&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::optional<bool>, wallet::DatabaseOptions&, wallet::DatabaseStatus&, bilingual_str&, std::__1::vector<bilingual_str, std::__1::allocator<bilingual_str> >&) src/wallet/wallet.cpp:324:45 (bitcoind+0x641ddd)
    #3 wallet::createwallet()::$_6::operator()(RPCHelpMan const&, JSONRPCRequest const&) const src/wallet/rpc/wallet.cpp:392:45 (bitcoind+0x5cbe65)
    #4 decltype(static_cast<wallet::createwallet()::$_6&>(fp)(static_cast<RPCHelpMan const&>(fp0), static_cast<JSONRPCRequest const&>(fp0))) std::__1::__invoke<wallet::createwallet()::$_6&, RPCHelpMan const&, JSONRPCRequest const&>(wallet::createwallet()::$_6&, RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-13/bin/../include/c++/v1/type_traits:3918:1 (bitcoind+0x5cbe65)
    #5 UniValue std::__1::__invoke_void_return_wrapper<UniValue, false>::__call<wallet::createwallet()::$_6&, RPCHelpMan const&, JSONRPCRequest const&>(wallet::createwallet()::$_6&, RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/invoke.h:30:16 (bitcoind+0x5cbe65)
    #6 std::__1::__function::__alloc_func<wallet::createwallet()::$_6, std::__1::allocator<wallet::createwallet()::$_6>, UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:171:16 (bitcoind+0x5cbe65)
    #7 std::__1::__function::__func<wallet::createwallet()::$_6, std::__1::allocator<wallet::createwallet()::$_6>, UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:345:12 (bitcoind+0x5cbe65)
    #8 std::__1::__function::__value_func<UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(RPCHelpMan const&, JSONRPCRequest const&) const /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:498:16 (bitcoind+0x85124f)
    #9 std::__1::function<UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(RPCHelpMan const&, JSONRPCRequest const&) const /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:1175:12 (bitcoind+0x85124f)
    #10 RPCHelpMan::HandleRequest(JSONRPCRequest const&) const src/rpc/util.cpp:584:26 (bitcoind+0x85124f)
    #11 CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const src/./rpc/server.h:109:91 (bitcoind+0x32ad37)
    #12 decltype(static_cast<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&>(fp)(static_cast<JSONRPCRequest const&>(fp0), static_cast<UniValue&>(fp0), static_cast<bool>(fp0))) std::__1::__invoke<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-13/bin/../include/c++/v1/type_traits:3918:1 (bitcoind+0x32ad37)
    #13 bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/invoke.h:30:16 (bitcoind+0x32ad37)
    #14 std::__1::__function::__alloc_func<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:171:16 (bitcoind+0x32ad37)
    #15 std::__1::__function::__func<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:345:12 (bitcoind+0x32ad37)
    #16 std::__1::__function::__value_func<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) const /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:498:16 (bitcoind+0x596272)
    #17 std::__1::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:1175:12 (bitcoind+0x596272)
    #18 wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const src/wallet/interfaces.cpp:541:24 (bitcoind+0x596272)
    #19 decltype(static_cast<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&>(fp)(static_cast<JSONRPCRequest const&>(fp0), static_cast<UniValue&>(fp0), static_cast<bool>(fp0))) std::__1::__invoke<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-13/bin/../include/c++/v1/type_traits:3918:1 (bitcoind+0x596272)
    #20 bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/invoke.h:30:16 (bitcoind+0x596272)
    #21 std::__1::__function::__alloc_func<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:171:16 (bitcoind+0x596272)
    #22 std::__1::__function::__func<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:345:12 (bitcoind+0x596272)
    #23 std::__1::__function::__value_func<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) const /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:498:16 (bitcoind+0x2b0426)
    #24 std::__1::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:1175:12 (bitcoind+0x2b0426)
    #25 node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const src/node/interfaces.cpp:470:24 (bitcoind+0x2b0426)
    #26 decltype(static_cast<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&>(fp)(static_cast<JSONRPCRequest const&>(fp0), static_cast<UniValue&>(fp0), static_cast<bool>(fp0))) std::__1::__invoke<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-13/bin/../include/c++/v1/type_traits:3918:1 (bitcoind+0x2b0426)
    #27 bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/invoke.h:30:16 (bitcoind+0x2b0426)
    #28 std::__1::__function::__alloc_func<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:171:16 (bitcoind+0x2b0426)
    #29 std::__1::__function::__func<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:345:12 (bitcoind+0x2b0426)
    #30 std::__1::__function::__value_func<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) const /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:498:16 (bitcoind+0x41ab9c)
    #31 std::__1::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:1175:12 (bitcoind+0x41ab9c)
    #32 ExecuteCommand(CRPCCommand const&, JSONRPCRequest const&, UniValue&, bool) src/rpc/server.cpp:478:20 (bitcoind+0x41ab9c)
    #33 ExecuteCommands(std::__1::vector<CRPCCommand const*, std::__1::allocator<CRPCCommand const*> > const&, JSONRPCRequest const&, UniValue&) src/rpc/server.cpp:442:13 (bitcoind+0x41ab9c)
    #34 CRPCTable::execute(JSONRPCRequest const&) const src/rpc/server.cpp:462:13 (bitcoind+0x41a810)
    #35 HTTPReq_JSONRPC(std::__1::any const&, HTTPRequest*) src/httprpc.cpp:201:40 (bitcoind+0x538e96)
    #36 StartHTTPRPC(std::__1::any const&)::$_0::operator()(HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const src/httprpc.cpp:300:80 (bitcoind+0x538e96)
    #37 decltype(static_cast<StartHTTPRPC(std::__1::any const&)::$_0&>(fp)(static_cast<HTTPRequest*>(fp0), static_cast<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(fp0))) std::__1::__invoke<StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) /usr/lib/llvm-13/bin/../include/c++/v1/type_traits:3918:1 (bitcoind+0x538e96)
    #38 bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/invoke.h:30:16 (bitcoind+0x538e96)
    #39 std::__1::__function::__alloc_func<StartHTTPRPC(std::__1::any const&)::$_0, std::__1::allocator<StartHTTPRPC(std::__1::any const&)::$_0>, bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)>::operator()(HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:171:16 (bitcoind+0x538e96)
    #40 std::__1::__function::__func<StartHTTPRPC(std::__1::any const&)::$_0, std::__1::allocator<StartHTTPRPC(std::__1::any const&)::$_0>, bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)>::operator()(HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:345:12 (bitcoind+0x538e96)
    #41 std::__1::__function::__value_func<bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)>::operator()(HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:498:16 (bitcoind+0x547960)
    #42 std::__1::function<bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)>::operator()(HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:1175:12 (bitcoind+0x547960)
    #43 HTTPWorkItem::operator()() src/httpserver.cpp:56:9 (bitcoind+0x547960)
    #44 WorkQueue<HTTPClosure>::Run() src/httpserver.cpp:111:13 (bitcoind+0x54a1a3)
    #45 HTTPWorkQueueRun(WorkQueue<HTTPClosure>*, int) src/httpserver.cpp:341:12 (bitcoind+0x541c7a)
    #46 decltype(static_cast<void (*>(fp)(static_cast<WorkQueue<HTTPClosure>*>(fp0), static_cast<int>(fp0))) std::__1::__invoke<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>(void (*&&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&&) /usr/lib/llvm-13/bin/../include/c++/v1/type_traits:3918:1 (bitcoind+0x54ae15)
    #47 void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int, 2ul, 3ul>(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>&, std::__1::__tuple_indices<2ul, 3ul>) /usr/lib/llvm-13/bin/../include/c++/v1/thread:280:5 (bitcoind+0x54ae15)
    #48 void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int> >(void*) /usr/lib/llvm-13/bin/../include/c++/v1/thread:291:5 (bitcoind+0x54ae15)

  Mutex M133488 (0x7b5c00030340) created at:
    #0 pthread_mutex_init <null> (bitcoind+0xd23ff)
    #1 std::__1::recursive_mutex::recursive_mutex() <null> (libc++.so.1+0x49fb3)
    #2 wallet::CWallet::Create(wallet::WalletContext&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::unique_ptr<wallet::WalletDatabase, std::__1::default_delete<wallet::WalletDatabase> >, unsigned long, bilingual_str&, std::__1::vector<bilingual_str, std::__1::allocator<bilingual_str> >&) src/wallet/wallet.cpp:2793:55 (bitcoind+0x643a1f)
    #3 wallet::CreateWallet(wallet::WalletContext&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::optional<bool>, wallet::DatabaseOptions&, wallet::DatabaseStatus&, bilingual_str&, std::__1::vector<bilingual_str, std::__1::allocator<bilingual_str> >&) src/wallet/wallet.cpp:324:45 (bitcoind+0x641ddd)
    #4 wallet::createwallet()::$_6::operator()(RPCHelpMan const&, JSONRPCRequest const&) const src/wallet/rpc/wallet.cpp:392:45 (bitcoind+0x5cbe65)
    #5 decltype(static_cast<wallet::createwallet()::$_6&>(fp)(static_cast<RPCHelpMan const&>(fp0), static_cast<JSONRPCRequest const&>(fp0))) std::__1::__invoke<wallet::createwallet()::$_6&, RPCHelpMan const&, JSONRPCRequest const&>(wallet::createwallet()::$_6&, RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-13/bin/../include/c++/v1/type_traits:3918:1 (bitcoind+0x5cbe65)
    #6 UniValue std::__1::__invoke_void_return_wrapper<UniValue, false>::__call<wallet::createwallet()::$_6&, RPCHelpMan const&, JSONRPCRequest const&>(wallet::createwallet()::$_6&, RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/invoke.h:30:16 (bitcoind+0x5cbe65)
    #7 std::__1::__function::__alloc_func<wallet::createwallet()::$_6, std::__1::allocator<wallet::createwallet()::$_6>, UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:171:16 (bitcoind+0x5cbe65)
    #8 std::__1::__function::__func<wallet::createwallet()::$_6, std::__1::allocator<wallet::createwallet()::$_6>, UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:345:12 (bitcoind+0x5cbe65)
    #9 std::__1::__function::__value_func<UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(RPCHelpMan const&, JSONRPCRequest const&) const /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:498:16 (bitcoind+0x85124f)
    #10 std::__1::function<UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(RPCHelpMan const&, JSONRPCRequest const&) const /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:1175:12 (bitcoind+0x85124f)
    #11 RPCHelpMan::HandleRequest(JSONRPCRequest const&) const src/rpc/util.cpp:584:26 (bitcoind+0x85124f)
    #12 CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const src/./rpc/server.h:109:91 (bitcoind+0x32ad37)
    #13 decltype(static_cast<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&>(fp)(static_cast<JSONRPCRequest const&>(fp0), static_cast<UniValue&>(fp0), static_cast<bool>(fp0))) std::__1::__invoke<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-13/bin/../include/c++/v1/type_traits:3918:1 (bitcoind+0x32ad37)
    #14 bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/invoke.h:30:16 (bitcoind+0x32ad37)
    #15 std::__1::__function::__alloc_func<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:171:16 (bitcoind+0x32ad37)
    #16 std::__1::__function::__func<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:345:12 (bitcoind+0x32ad37)
    #17 std::__1::__function::__value_func<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) const /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:498:16 (bitcoind+0x596272)
    #18 std::__1::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:1175:12 (bitcoind+0x596272)
    #19 wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const src/wallet/interfaces.cpp:541:24 (bitcoind+0x596272)
    #20 decltype(static_cast<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&>(fp)(static_cast<JSONRPCRequest const&>(fp0), static_cast<UniValue&>(fp0), static_cast<bool>(fp0))) std::__1::__invoke<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-13/bin/../include/c++/v1/type_traits:3918:1 (bitcoind+0x596272)
    #21 bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/invoke.h:30:16 (bitcoind+0x596272)
    #22 std::__1::__function::__alloc_func<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:171:16 (bitcoind+0x596272)
    #23 std::__1::__function::__func<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:345:12 (bitcoind+0x596272)
    #24 std::__1::__function::__value_func<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) const /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:498:16 (bitcoind+0x2b0426)
    #25 std::__1::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:1175:12 (bitcoind+0x2b0426)
    #26 node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const src/node/interfaces.cpp:470:24 (bitcoind+0x2b0426)
    #27 decltype(static_cast<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&>(fp)(static_cast<JSONRPCRequest const&>(fp0), static_cast<UniValue&>(fp0), static_cast<bool>(fp0))) std::__1::__invoke<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-13/bin/../include/c++/v1/type_traits:3918:1 (bitcoind+0x2b0426)
    #28 bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/invoke.h:30:16 (bitcoind+0x2b0426)
    #29 std::__1::__function::__alloc_func<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:171:16 (bitcoind+0x2b0426)
    #30 std::__1::__function::__func<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:345:12 (bitcoind+0x2b0426)
    #31 std::__1::__function::__value_func<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) const /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:498:16 (bitcoind+0x41ab9c)
    #32 std::__1::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:1175:12 (bitcoind+0x41ab9c)
    #33 ExecuteCommand(CRPCCommand const&, JSONRPCRequest const&, UniValue&, bool) src/rpc/server.cpp:478:20 (bitcoind+0x41ab9c)
    #34 ExecuteCommands(std::__1::vector<CRPCCommand const*, std::__1::allocator<CRPCCommand const*> > const&, JSONRPCRequest const&, UniValue&) src/rpc/server.cpp:442:13 (bitcoind+0x41ab9c)
    #35 CRPCTable::execute(JSONRPCRequest const&) const src/rpc/server.cpp:462:13 (bitcoind+0x41a810)
    #36 HTTPReq_JSONRPC(std::__1::any const&, HTTPRequest*) src/httprpc.cpp:201:40 (bitcoind+0x538e96)
    #37 StartHTTPRPC(std::__1::any const&)::$_0::operator()(HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const src/httprpc.cpp:300:80 (bitcoind+0x538e96)
    #38 decltype(static_cast<StartHTTPRPC(std::__1::any const&)::$_0&>(fp)(static_cast<HTTPRequest*>(fp0), static_cast<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(fp0))) std::__1::__invoke<StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) /usr/lib/llvm-13/bin/../include/c++/v1/type_traits:3918:1 (bitcoind+0x538e96)
    #39 bool std::__1::__invoke_void_return_wrapper<bool, false>::__call<StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/invoke.h:30:16 (bitcoind+0x538e96)
    #40 std::__1::__function::__alloc_func<StartHTTPRPC(std::__1::any const&)::$_0, std::__1::allocator<StartHTTPRPC(std::__1::any const&)::$_0>, bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)>::operator()(HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:171:16 (bitcoind+0x538e96)
    #41 std::__1::__function::__func<StartHTTPRPC(std::__1::any const&)::$_0, std::__1::allocator<StartHTTPRPC(std::__1::any const&)::$_0>, bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)>::operator()(HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:345:12 (bitcoind+0x538e96)
    #42 std::__1::__function::__value_func<bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)>::operator()(HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:498:16 (bitcoind+0x547960)
    #43 std::__1::function<bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)>::operator()(HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const /usr/lib/llvm-13/bin/../include/c++/v1/__functional/function.h:1175:12 (bitcoind+0x547960)
    #44 HTTPWorkItem::operator()() src/httpserver.cpp:56:9 (bitcoind+0x547960)
    #45 WorkQueue<HTTPClosure>::Run() src/httpserver.cpp:111:13 (bitcoind+0x54a1a3)
    #46 HTTPWorkQueueRun(WorkQueue<HTTPClosure>*, int) src/httpserver.cpp:341:12 (bitcoind+0x541c7a)
    #47 decltype(static_cast<void (*>(fp)(static_cast<WorkQueue<HTTPClosure>*>(fp0), static_cast<int>(fp0))) std::__1::__invoke<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>(void (*&&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&&) /usr/lib/llvm-13/bin/../include/c++/v1/type_traits:3918:1 (bitcoind+0x54ae15)
    #48 void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int, 2ul, 3ul>(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>&, std::__1::__tuple_indices<2ul, 3ul>) /usr/lib/llvm-13/bin/../include/c++/v1/thread:280:5 (bitcoind+0x54ae15)
    #49 void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int> >(void*) /usr/lib/llvm-13/bin/../include/c++/v1/thread:291:5 (bitcoind+0x54ae15)

  Thread T18 'b-httpworker.0' (tid=50613, running) created by main thread at:
    #0 pthread_create <null> (bitcoind+0xd0c8d)
    #1 std::__1::__libcpp_thread_create(unsigned long*, void* (*)(void*), void*) /usr/lib/llvm-13/bin/../include/c++/v1/__threading_support:443:10 (bitcoind+0x54acfa)
    #2 std::__1::thread::thread<void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int&, void>(void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&) /usr/lib/llvm-13/bin/../include/c++/v1/thread:307:16 (bitcoind+0x54acfa)
    #3 void std::__1::allocator<std::__1::thread>::construct<std::__1::thread, void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int&>(std::__1::thread*, void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&) /usr/lib/llvm-13/bin/../include/c++/v1/__memory/allocator.h:154:28 (bitcoind+0x54a824)
    #4 void std::__1::allocator_traits<std::__1::allocator<std::__1::thread> >::construct<std::__1::thread, void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int&, void>(std::__1::allocator<std::__1::thread>&, std::__1::thread*, void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&) /usr/lib/llvm-13/bin/../include/c++/v1/__memory/allocator_traits.h:290:13 (bitcoind+0x54a824)
    #5 void std::__1::vector<std::__1::thread, std::__1::allocator<std::__1::thread> >::__emplace_back_slow_path<void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int&>(void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&) /usr/lib/llvm-13/bin/../include/c++/v1/vector:1689:5 (bitcoind+0x54a824)
    #6 std::__1::thread& std::__1::vector<std::__1::thread, std::__1::allocator<std::__1::thread> >::emplace_back<void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int&>(void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&) /usr/lib/llvm-13/bin/../include/c++/v1/vector:1709:9 (bitcoind+0x541898)
    #7 StartHTTPServer() src/httpserver.cpp:431:31 (bitcoind+0x541898)
    #8 AppInitServers(node::NodeContext&) src/init.cpp:650:5 (bitcoind+0x16663e)
    #9 AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*) src/init.cpp:1187:14 (bitcoind+0x15e7a1)
    #10 AppInit(node::NodeContext&, int, char**) src/bitcoind.cpp:234:43 (bitcoind+0x147719)
    #11 main src/bitcoind.cpp:278:13 (bitcoind+0x147719)

SUMMARY: ThreadSanitizer: destroy of a locked mutex (/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/bitcoind+0xd2568) in pthread_mutex_destroy
==================
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
