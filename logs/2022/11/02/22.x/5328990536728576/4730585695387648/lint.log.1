1998152f1 script: Add empty line after C++ copyright
071f2fc20 script: Add ability to insert copyright to *.sh
77ef48d53 gitignore: ignore fuzz binaries, remove test_bitcoin_fuzzy
fa569e1a9 ci: Set LC_ALL=C when running in qemu-s390x
fa3d77623 ci: Use debian to avoid apt install 404 errors
fabb94609 ci: Install needed gcc and qemu-user iff cross-compiling
faba4672b ci: Fix QEMU_USER_CMD parse issues
fa5d709fb ci: Move wrap-qemu into separate script
71af79351 scripts: fix check-symbols & check-security argument passing
fa37e0a68 test: Show debug log on unit test failure
1f0adb3da tests: Add std::to_string to list of locale dependent functions
4bdd68f30 Add missing typeinfo includes
9250a087d Convert addrdb/addrman to new serialization
ca3345153 Introduce new serialization macros without casts
87744b16b ci: Fix brew python link
7c9e821c4 scripts: add MACHO NOUNDEFS check to security-check.py
4ca92dc6d scripts: add MACHO PIE check to security-check.py
f7453dcc0 build: remove linking librt for backwards compatibility
c0bc45313 build: remove deprecated key from macOS Info.plist
27fc6a38f DecodeHexTx: Break out transaction decoding logic into own function
155a11f89 doc: Added running functional tests in valgrind
aaaaad6ac scripted-diff: Bump copyright of files changed in 2019
df97e5920 doc: Update dependencies.md
42ec49948 doc: developer notes guideline on RPCExamples addresses
7851f14cc rpc: incorporate review feedback from PR 17283
0661a3c4a build: Add default configure cache to .gitignore
90df92206 test: Change filemode of rpc_whitelist.py
8dc9aa90c doc: Update license year range to 2020
ec45646de Integrate ASN bucketing in Addrman and add tests
0b5a366bd ci: Update vcpkg cache on MSBuild update
b6fa752bc ci: Update Qt binaries for GitHub Actions
faa92a229 rpc: Remove mempool global from miner
6666ef13f test: Properly document blockinfo size in miner_tests
900d8f6f7 util: Disallow network-qualified command line options
3f95fb085 build: Sort fuzzing harnesses to avoid future merge conflicts
bcad0144e tests: Add fuzzing harness for DecodeHexTx(...)
6020ce3c0 DecodeHexTx: Try case where txn has inputs first
4f4ae6f97 build: set AC_PREREQ to 2.69
8feb4e4b6  Add asmap utility which queries a mapping
f41d58966 Document better -keypool as a look-ahead safety mechanism
34d826ea5 doc: Mention PR Club in CONTRIBUTING.md
091a87666 Test watchonly wallet bumpfee with PSBT return
e9b4f9419 bumpfee: Return PSBT when wallet has privkeys disabled
75a5e478b Change bumpfee to use watch-only funds for legacy watchonly wallets
6094222de use preferred shebang approach for documentation
faede7088 doc: Add formatting to the good first issue template
4d88c3dcb net: Log to net category for exceptions in ProcessMessages
529d332fb test: add IsRFC2544 tests
419ef3b7c CNetAddr: fix IsRFC2544 comment
c18405732 tests: Add fuzzing harness for various hex related functions
526dd78be tests: Add fuzzing harness for various Base{32,58,64} related functions
32e27129f util: Move TrimString(...). Introduce default pattern (trims whitespace). Add NODISCARD.
22d9bae36 tests: Add corpora suppression (FUZZERS_MISSING_CORPORA) for fuzzers missing in https://github.com/bitcoin-core/qa-assets/tree/master/fuzz_seed_corpus
abc147de9 build: remove WINDOWS_BITS from build system
fa8e650b5 rest: Use mempool from node context instead of global
137c80d57 tests: Add tests for decoding/parsing of base32, base64 and money strings containing NUL characters
a6fc26da5 util: Don't allow DecodeBase32(...) of strings with embedded NUL characters
93cc18b0f util: Don't allow DecodeBase64(...) of strings with embedded NUL characters
ccc53e43c util: Don't allow ParseMoney(...) of strings with embedded NUL characters
a5089f62b fix directory path for secp256k1 subtree in developer-notes
893aa207e tests: Add fuzzing harness for CheckBlock(...) and other CBlock related functions
ec8dcb019 tests: Add corpora suppression (FUZZERS_MISSING_CORPORA) for fuzzers missing in https://github.com/bitcoin-core/qa-assets/tree/master/fuzz_seed_corpus
7aab8d102 [style] Code style fixups in GetWarnings()
7965e0b41 doc: Add release note for RPC Whitelist
19267cbc8 doc: Add ci prefix to CONTRIBUTING.md
492c6dc1e util: change GetWarnings parameter to bool
869b6314f [qt] remove unused parameter from getWarnings()
e19000086 ci-s390x: Add qemu and depends support in the ci script
c78b12398 build: add -bind_at_load to hardened LDFLAGS
592af5ad3 Moved the include of the system projects to before the build depends on task. Otherwise it doesn't get run.
244501fc8 depends: disable unused qt networking features
29d56c62b depends: -optimized-qmake is now -optimized-tools
ccdda9680 depends: skip building qt proxies
6e2215187 Included test_bitcoin-qt in msvc build.
d94d34f05 doc: update developer notes wrt unix epoch time
e2f32cb5c qa: unify unix epoch time descriptions
2081442c4 test: Add test for rpc_whitelist
75d9317bc Update msvc build for Visual Studio 2019 v16.4
02b9511d6 tests: add tests for GetCoinsCacheSizeState
b17e91d84 refactoring: introduce CChainState::GetCoinsCacheSizeState
5096baf26 build: fix typo
d945c6f5e util: Don't allow base58-decoding of std::string:s containing non-base58 characters
ff7a99922 tests: Add tests for base58-decoding of std::string:s containing non-base58 characters
7d263571b rpc: require second argument only for scantxoutset start action
bee88b8c5 tests: have coins simulation test also use CCoinsViewDB
7414d3820 Add RPC Whitelist Feature from #12248
fabd5b444 ci: Use python 3.7 on Windows Github Actions
a64e97dd4 wallet: unbreak with boost 1.72
f1ef7f0aa Don't calculate tx fees for PSBTs with invalid money values
facb416ad ci: Add valgrind run
7e8b4de05 rpc: add missing newline in analyzepsbt rpcresult
fa4b656e9 doc: Add release notes for 17447
fab2f351f doc: Update release process with latest changes
a1308b7e1 tests: Add fuzzing harnesses for various JSON/univalue parsing functions
e3d2bcf5c tests: Add fuzzing harnesses for various number parsing functions
fb8c12093 tests: Add ParseScript(...) (core_io) fuzzing harness
074cb6451 tests: Add ParseHDKeypath(...) (bip32) fuzzing harness
0dc5907d0 tests: Add corpora suppression (FUZZERS_MISSING_CORPORA) for fuzzers missing in https://github.com/bitcoin-core/qa-assets/tree/master/fuzz_seed_corpus
e1e1442f3 Activate no-privkey -> ISMINE_WATCH_ONLY behavior for LegacySPKM only
3ab182462 build: Use dnl for all comments in configure.ac, rather than #
8ddcbb4e4 build: Remove backticks from configure.ac
5f26855f1 test: Remove ubsan alignment suppressions
9d933ef91 prevector: avoid misaligned member accesses
b6f9e3576 test: re-enable CLI test support by using EncodeDecimal in json.dumps()
b0b153173 Adds GitHub Action workflow which duplicates AppVeyor job.
a652dc552 qt: Normalize placeholder to avoid using "address book" in sendcoinsentry
67f36e0b2 gui: Move static placeholder texts to forms
48a5c92f9 ui: disable 3rd-party tx-urls when wallet disabled
0ccad08fb Make env data logging optional
f736f6920 lcov: filter /usr/lib64 from coverage report
e97f5c182 depends: don't configure xcb_proto
a82bd8fa5 util: Replace magics with DEFAULT_PRUNE_TARGET_GB
d65fafc2f gui: disable File->CreateWallet during startup
034561f9c cli: fix Fatal LevelDB error when specifying -blockfilterindex=basic twice
7cecf10ac Replace LegacyScriptPubKeyMan::IsCrypted with LegacyScriptPubKeyMan::HasEncryptionKeys
bf6417142 Remove SetCrypted() and fUseCrypto; Change IsCrypted()'s implementation
77a777118 Rename EncryptKeys to Encrypt and pass in the encrypted batch to use
35f962fcf Clear mapKeys before encrypting
14b5efd66 Move fDecryptionThoroughlyChecked from CWallet to LegacyScriptPubKeyMan
97c0374a4 Move Unlock implementation to LegacyScriptPubKeyMan
e576b135d Replace LegacyScriptPubKeyMan::vMasterKey with GetDecryptionKey()
fd9d6eebc Add GetEncryptionKey() and HasEncryptionKeys() to WalletStorage
711e0449c ci: Remove trusty build
7f3ae2246 ci: Add CentOS 7 build
6338c0203 tests: Fix fuzzing harness for descriptor parsing (descriptor_parse)
a5a705b46 lcov: filter depends from coverage report
5ac804a9e tests: Use a default of supports_cli=True (instead of supports_cli=False)
993e38a4e tests: Mark functional tests not supporting bitcoin-cli (--usecli) as such
709afb2a7 tests: Test serialisation as part of deserialisation fuzzing. Test round-trip equality where possible. Avoid code repetition.
597d10ceb tests: Add fuzzing harness for various functions consuming only integrals
575383b3e tests: Add corpora suppression (FUZZERS_MISSING_CORPORA) for fuzzers missing in https://github.com/bitcoin-core/qa-assets/tree/master/fuzz_seed_corpus
d5766f223 tests: Add corpora suppression (FUZZERS_MISSING_CORPORA) for fuzzers missing in https://github.com/bitcoin-core/qa-assets/tree/master/fuzz_seed_corpus
e75ecb91c tests: Add fuzzing harness for various CTxOut related functions
ce935292c tests: Add fuzzing harness for various CTxIn related functions
978b25528 util: Update tinyformat to upstream
5909bcd3b Add bounds checks in key_io before DecodeBase58Check
c966ff14c gitian: fixed SC2001 regex
fa660d65d node: Use mempool from node context instead of global
facbaf092 rpc: Use mempool from node context instead of global
8bda0960f Move events_hasher into RNGState()
11113247c depends: Support for S390X targets
989fd539d depends: Support for 64-bit POWER targets
6e77a7b65 keypool: Add comment about TopUp and when to use it
2359a4790 depends: don't use OpenGL in Qt on macOS
ba0cad270 build: pass -dead_strip_dylibs to ld on macOS
1f9d5af4f tests: Add initialization order fiasco detection in Travis
b11d35b5e Fixed wget call in gitian-build.py
fa40e48c5 ci: Remove unparseable lines from supp file for old xenial clang tsan
fa1bfc476 ci: ubsan report_error_type=1 and add suppressions
fa69cef13 test: Print stderr when subprocess fails
2222c3058 test: Use char instead of unsigned char
faa8023ce ci: Bump to clang-8 for asan build to avoid segfaults on ppc64le
01c870155 util: remove unwanted fields from bitcoin-cli -getinfo
bd44711e1 build: pass -dead_strip_dylibs to ld on macOS
c8becb828 depends: add ability to skip building qrencode
e7ad4a2f8 doc: rename wallet-tool references to bitcoin-wallet
886f1731b Key pool: Fix omitted pre-split count in GetKeyPoolSize
386a994b8 Key pool: Change ReturnDestination interface to take address instead of key
ba41aa496 Key pool: Move LearnRelated and GetDestination calls
02afb0c55 Fix origfee return for bumpfee with feerate arg
5db506ba5 tests: Add option --valgrind to run nodes under valgrind in the functional tests
70ed2ab7e Add unit test for DB creation with unicode path
bd6a24307 script: Add Keyserver to verify-commits README
98fbd1cdf Use correct C++11 header for std::swap()
b66861e2e Fix comparison function signature
73b96c94c net: Fix uninitialized read in ProcessMessage(...)
17f81e964 script: Enable SC2001 rule for Gitian scripts
61bb21b41 script: Enable SC2155 rule for Gitian scripts
eadd1304c tests: Add a test for funding with sufficient preset inputs and subtractFeeFromOutputs
ff330badd Default to bnb_used = false as there are many cases where BnB is not used
65833a740 Add OutputType and CPubKey parameters to KeepDestination
9fcf8ce7a Rename Keep/ReturnKey to Keep/ReturnDestination and remove the wrapper
d2a3a5cad util: make ScheduleBatchPriority advisory only
4a96e459d [gui] send: show watch-only balance in send screen
2689c8fd7 [test] qt: add send screen balance test
93352d261 qt: Use proper class for Ui::ReceiveCoinsDialog
878190464 qt: Fix class name of Ui::ModalOverlay
fabd71076 ci: Print free disk space
fad9fdbea test: Properly deserialize integers in little-endian
fa94fc10c ci: Run functional tests on s390x
41d7db0b6 doc: Change doxygen URL to doxygen.bitcoincore.org
78e283e65 [test] move wallet helper functions into test library
f613e5dfd [test] move mining helper functions into test library
f13e274b6 Appveyor install libevent[thread] vcpkg
da1f153e5 Add s390x tests to travis
2fa65e0de Add ci script to install on s390x
2cb4e8bdc [test] move string helper functions into test library
33f5fc32e test: add rpc getaddressinfo labels test coverage
0f3539ac6 test: add listlabels test in wallet_labels.py
1388de839 rpc: add getaddressinfo code documentation
2ee0cb333 rpc: update getaddressinfo RPCExamples to bech32
8d1ed0c26 rpc: clarify label vs labels in getaddressinfo RPCHelpman
5a0ed8507 rpc: improve getaddressinfo RPCHelpman content
1a3a256d5 wallet: replace raw pointer with const reference in AddrToPubKey
70cda342c rpc: improve getaddressinfo RPCHelpman formatting
eafd25936 build: Add NX workaround for RV64
14feda081 doc: Add historical release notes for 0.19.0.1
02d8c56a1 Seed RNG with precision timestamps on receipt of net messages.
b50955443 Added libtest_util library to msvc build configuration.
f6e42256f build: Allow export of environ symbols
3ed5e6819 refactor: Nuke coincontrol circular dependency
ea50e34b2 keypool: Move opportunistic TopUps from LegacyScriptPubKeyMan to CWallet and ReserveDestination
bb2c8ce23 keypool: Remove  superfluous topup from CWallet::GetNewChangeDestination
596f6460f Key pool: Move CanGetAddresses call
27d82b63f gui: remove macOS start on login code
8f15a3176 doc: add glibc 2.17 requirement to release-notes
16a7be166 build: Bump minimum versions in symbol checker
b77d5ad59 build: Disallow dynamic linking against c++ library
fad88e6f8 ci: Remove use of cd
5ad4dd1ea doc: Changed MiniUPnPc link to https in dependencies.md
76303f65f test: add unit test for non-standard txs with wrong nVersion
a2e581de9 build: Create test utility library from src/test/util/
e20c72f9f Fire TransactionRemovedFromMempool from mempool
6a2e6b060 Remove out of date comments for CalculateMaximumSignedTxSize
897849d8c tests: Add deserialization fuzzing harnesses
16f0a186d tests: Add corpora suppression (FUZZERS_MISSING_CORPORA) for fuzzers missing in https://github.com/bitcoin-core/qa-assets/tree/master/fuzz_seed_corpus
7d7bf2ff4 build: set minimum supported macOS to 10.12
fa2941bbf ci: Remove unmaintained extended_lint
fa0418752 scripted-diff: Use ci DEPENDS_DIR, remove BASE_BUILD_DIR
fa0656d1e ci: Add DEPENDS_DIR variable, Add documentation for folders
1bb5d517a test: add unit test for non-standard bare multisig txs
651c636f9 build: Fix configure report about qr
faeeca87b scripted-diff: Move various folders to ci scratch dir
e9a27cf33 refactor: Remove unused COINBASE_FLAGS
1be0b1fb2 test: add functional test for non-standard bare multisig txs
ec89d2882 build: remove libanl.so.1 from ALLOWED_LIBRARIES
f93fc61c6 Put bounds on the number of CPUID leaves explored
794fe9139 doc: Update and improve Developer Notes
b007efdf1 Allow BnB when subtract fee from outputs
db15e71e7 Use BnB when preset inputs are selected
6fdf5dab2 depends: only use dbus with qt on linux
8f2d7737c test: add functional test for non-standard txs with too large scriptSig
2bcf1fc44 Pass a maximum output length to DecodeBase58 and DecodeBase58Check
ba2c5fe14 Fix CPUID subleaf iteration
773d4572a Mark PSBTs spending unspendable outputs as invalid in analysis
638e40cb6 Have a PSBTAnalysis state that indicates invalid PSBT
dddd09eb3 test: Wait until mempool is loaded in wallet_abandonconflict
5f50599ae refactor: Cleanup headers from walletmodel.h
a53e9895d refactor: Nuke walletmodel circular dependency
49c4211c0 refactor: Nuke walletmodeltransaction circular dep
567cb44eb refactor: Nuke guiutil circular dependency
73b5505cf refactor: Move SendCoinsRecipient in own header
adbe15504 doc: Add some better examples for scripted diff
ea3c7e585 test: Remove libssl-dev packages from CI scripts
7ea55264b test: remove lsan suppression for libcrypto
2d7066527 build: remove libcrypto as internal dependency in libbitcoinconsensus.pc
278751ea1 doc: Remove ssl as a required dependency from build-unix
a67352161 test: skip tool_wallet test when bitcoin-wallet isn't compiled
e9277baed test: skip wallet_listreceivedby test when the cli isn't compiled
621d39875 test: skip bitcoin_cli test when the cli isn't compiled
d0dab897a Refactor: Require scriptPubKey to get wallet SigningProvider
4b0c718f8 Accumulate result UniValue in SignTransaction
49f4c7f06 tests: Add fuzzing harness for various PSBT related functions
55b2cb199 random: mark RandAddPeriodic and SeedPeriodic as noexcept
461e54787 doc: correct random.h docs after #17270
e5a0bece6 doc: add OpenSSL removal to release-notes.md
397dbae07 ci: remove OpenSSL installation
a4eb83961 doc: remove OpenSSL from build instructions and licensing info
648b2e3c3 depends: remove OpenSSL package
8983ee3e6 build: remove OpenSSL detection and libs
b49b6b0f7 random: Remove remaining OpenSSL calls and locking infrastructure
4fcfcc294 random: stop retrieving random bytes from OpenSSL
5624ab0b4 random: stop feeding RNG output back into OpenSSL
e161bc74d doc: Remove bitness from bitcoin-qt help message and manpage
8944c1d34 Changed tooltips of receive form to highlight difference between Label and Message
5fa28e990 refactor: Remove unused signal
30fb59873 Fix segfault in allocator_tests/arena_tests
15c84f53f Define ARENA_DEBUG in Travis test runs
ad7154882 Fix compilation errors in support/lockedpool.cpp
1c23ea5fe test: fix bitcoind already running warnings on macOS
38516f907 Fix input size assertion in wallet_bumpfee.py
fa538813b scripted-diff: Replace ::mempool with m_node.mempool in tests
8888ad02e test: Replace recursive lock with locking annotations
fac07f203 node: Add reference to mempool in NodeContext
18b18f8e8 [build] ./configure --enable-werror: add unused-variable
fae75306b scripted-diff: Set gitian arch back to amd64
5e8a56348 test: add unit test for non-standard txs with too large scriptSig
fa2ec9f45 fuzz: Bump timeout in test_runner to accomodate for slow arm64 CPUs
fac942ca5 test: Remove fragile assert_memory_usage_stable
4341bffb6 GUI: Refactor formatServicesStr to warn when a ServicesFlag is missing
df77de8c2 Bugfix: GUI: Recognise NETWORK_LIMITED in formatServicesStr
fa6e01b2f ci: Use clang-8 for fuzzing to run on aarch64 ci systems
e9fd36604 refactor: Remove null setting check in GetSetting()
c6dd565c8 [gui] watch-only wallet: copy PSBT to clipboard
bc728d12a depends: qt: Fix C{,XX} pickup
39465d545 [wallet] add fillPSBT to interface
848f88920 [gui] send: include watch-only
40537f090 [wallet] ListCoins: include watch-only for wallets without private keys
d604b4cc8 tests: Update valgrind suppressions
cba271022 scripted-diff: Remove unused ArgsManager type flags in tests
425bb3072 refactor: Add util_CheckValue test
0fa54358b refactor: Add ArgsManager::GetSettingsList method
3e185522a refactor: Get rid of ArgsManagerHelper class
dc0f14807 refactor: Replace FlagsOfKnownArg with GetArgFlags
57e8b7a72 refactor: Clean up includeconf comments
3f7dc9b80 refactor: Clean up long lines in settings code
edb6b768a fix uninitialized variable nMinerConfirmationWindow
d1c02775a Report amount of data gathered from environment
64e1e022c Use thread-safe atomic in perfmon seeder
d61f2bb07 Run background seeding periodically instead of unpredictably
483b94292 Add information gathered through getauxval()
11793ea22 Feed CPUID data into RNG
a81c494b4 Use sysctl for seeding on MacOS/BSD
2554c1b81 Gather additional entropy from the environment
c2a262a78 Seed randomness with process id / thread id / various clocks
723c79666 [MOVEONLY] Move cpuid code from random & sha256 to compat/cpuid
cea390201 [MOVEONLY] Move perfmon data gathering to new randomenv module
b51bae1a5 doc: minor corrections in random.cpp
333362991 doc: Explain $LIB in LD_PRELOAD in gitian descriptors
b13152413 util: Add missing headers to util/fees.cpp
3c2c439dc wallet: Make -walletdir network only
a5e77959c rpc: Expose block height of wallet transactions
3e730bf90 zmq: Fix due to invalid argument and multiple notifiers
49997813a test: check custom ancestor limit in mempool_packages.py
faffa7f0d wallet: Avoid showing GUI popups on RPC errors (take 2)
eb880f092 fix Typo: "merkelRoot" -> "merkleRoot"
cb9d830a0 test: Use proper MAX_SCRIPT_ELEMENT_SIZE
402ee706d refactor: Use proper MAX_SCRIPT_ELEMENT_SIZE const
fa7523d3a ci: Extend docs
9999a7907 travis: Rework CACHE_ERR_MSG
0ec967164 Add TheCharlatan's pgp key
29eb03925 Moves vcpkg list to a text file and updates the appveyor job and readme to use it.
1828c6f05 refactor: Styling w/ clang-format, comment update
88a94f7bb qt: Fix missing qRegisterMetaType for size_t
3d133482b Remove unnecessary forward declaration
fa493ef08 ci: Make ci system read-only on the git work tree
fab133329 ci: Remove git from required packages on host
fa00393bc ci: Make all filesystem operations inside docker
e2c03c115 doc: Add relase note for db→walletdb rename
fec230edc doc: add historical 0.19.0 release notes
4c1d263d9 scripted-diff: Change `BCLog::DB` to `BCLog::WALLETDB`
6b42b3ba9 Rename `db` log category to `walletdb` (like `coindb`)
fab9850ef scripted-diff: Avoid hardcoded libfaketime dir in gitian
083c954b0 Add settings_tests
7f40528cd Deduplicate settings merge code
9dcb952fe Add util::Settings struct and helper functions.
e2e37cfe8 Remove includeconf nested scope
5a84aa880 Rename includeconf variables for clarity
dc8e1e754 Clarify emptyIncludeConf logic
fad1de66a wallet: Remove unused boost::this_thread::interruption_point
b80f7db83 Remove redundant class file includes from test_bitcoin project.
3bd8db80d [validation] fix comments in CheckInputScripts()
6f6465cef scripted-diff: [validation] Rename CheckInputs to CheckInputScripts
faf757a12 ci: Guess the native host when not cross compiling
e6e622e5a Implement O(1) OP_IF/NOTIF/ELSE/ENDIF logic
d0e8f4d5d [refactor] interpreter: define interface for vfExec
89fb241c5 Benchmark script verification with 100 nested IFs
0e7c90eb3 test: speed up wallet_avoidreuse.py
6d50b2606 test: add logging to wallet_avoidreuse.py
582e66b6e doc: Added regtest config for linearize script
3c84deeba Updated appveyor config:  - Update build image from Visual Studio 2017 to Visual Studio 2019.  - Updated Qt static library from Qt5.9.7 to Qt5.9.8.  - Added commands to update vcpkg port files (this does not update already installed packages).  - Updated vcpkg package list as per #17309.  - Removed commands setting common project file options. Now done via common.init.vcxproj include.  - Changed msbuild verbosity from normal to quiet. Normal rights a LOT of logs and impacts appveyor job duration. Updated msvc project configs:  - Updated platform toolset from v141 to v142.  - Updated Qt static library from Qt5.9.7 to Qt5.9.8.  - Added ignore for linker warning building bitcoin-qt program.  - Added missing util/str.cpp class file to test_bitcoin project file.
5506ecfe7 [refactor] Replace global int nScriptCheckThreads with bool
d9957623b [tests] Don't use TestingSetup in the checkqueue_tests
af7bae734 [tests] Don't stop-start unnecessarily in rpc_fundrawtransaction.py
9a8505299 [tests] Use -whitelist in rpc_fundrawtransaction.py
36b68de5b Remove getBlockDepth method from Chain::interface
b66c429c5 Remove locked_chain from GetDepthInMainChain and its callers
0ff03871a Use CWallet::m_last_block_processed_height in GetDepthInMainChain
f77b1de16 Only return early from BlockUntilSyncedToCurrentChain if current tip is exact match
769ff05e4 Refactor some importprunedfunds checks with guard clause
5971d3848 Add block_height field in struct Confirmation
fa4c6fa9b doc: Add documentation for new test/lib
faec28252 scripted-diff: test: Move setup_common to test library
9700fcb47 Replace CWalletTx::SetConf by Confirmation initialization list
577682d9e script: Enable SC2006 rule for Gitian scripts
14aded46d script: Lint Gitian descriptors with ShellCheck
80c9e66ab build: Remove install command samples
286f19770 Add util_ArgParsing test
b84e776fd wallet_importmulti: use addresses of the same type as being imported
3645e4ca0 Add missing newline in util_ChainMerge test
1c26c1606 Improve "Hide" button tool-tip message
fa5facd3e rpc: Remove unused boost::this_thread::interruption_point
92b2f5306 test: add dumptxoutset RPC test
c1ccbc3dd devtools: add utxo_snapshot.sh
57cf74c99 rpc: add dumptxoutset
5aacc3eff Add m_last_block_processed_height field in CWallet
10b4729e3 Pass block height in Chain::BlockConnected/Chain::BlockDisconnected
7b78b8d3a doc: Add template for good first issues
92fafb3a7 coinstats: add coins_count
05b224a17 Add missing SetupGeneration error handling in EncryptWallet
104f7de59 remove old bootstrap relevant code
bfd826a67 Clean up nested scope in GetReservedDestination
491a599b3 Get rid of confusing LegacyScriptPubKeyMan::TopUpKeyPool method
4a0abf694 Pass CTxDestination to ScriptPubKeyMan::GetMetadata
fa7f5a4d2 doc: Update doc/bips.md with recent changes in master
b07b07cd8 Add EnsureLegacyScriptPubKeyMan and use in rpcwallet.cpp
2493770e3 TestShell: Return self from setup()
a8dea4552 TestShell: Simplify default setting of num_nodes
9c7806e4b Doc: Remove backticks in test-shell.md code block
d3ed06e2c TestShell: Fix typo in TestShell warning printout
1a8f0d5a7 [tools] update nNextInvSend to use mockable time
4de630354 [tools] add PoissonNextSend method that returns mockable time
3fe1aba60 depends: move README.md Android instructions to a separate section
b7541705d tests: Add fuzzing harness for Bech32 encoding/decoding
85a34b168 tests: Move CaseInsensitiveEqual to test/util/str
3d05d3326 cli: fix -getinfo output when compiled with no wallet
dcef9a292 logs: add timing information to FlushStateToDisk()
41edaf227 logs: add BCLog::Timer and related macros
fa8a60bce ci: Run non-cross-compile builds natively
fa56bcbb0 ci: Run CI_WAIT only on travis
646b593bb [tests] Speed up rpc_fundrawtransaction.py
3958295bc wallet: LearnRelatedScripts only if KeepDestination
55295fba4 wallet: Lock address type in ReserveDestination
fa07b8beb test: Reset global args between test suites
02ac445b2 bump libevent to 2.1.11 in depends
fa2c44c3c test: Add ASSERT_DEBUG_LOG to unit test framework
fa1936f57 logging: Add member for arbitrary print callbacks
aa9b84ace depends: update README.md with working Android targets and API levels
19139ee03 Add documentation for test_shell submodule
b2ff500fb test: add "diamond" unit test to MempoolAncestryTests
ac831339c doc: Fix some misspellings
f5112369c Add TestShell class
5155602a6 Move argparse() to init()
2ab01462f Move assert num_nodes is set into main()
614c64564 Clear TestNode objects after shutdown
6f4082075 Add closing and flushing of logging handlers
6b7124129 Refactor TestFramework main() into setup/shutdown
ede8b7608 Remove network_event_loop instance in close()
0b75a7f06 wallet: Reuse existing batch in CWallet::SetUsedDestinationState
01f45dd00 wallet: Avoid recursive lock in CWallet::SetUsedDestinationState
2ad74b78c doc: Add ShellCheck to lint tests dependencies
152b0a00d Refactor: Move nTimeFirstKey accesses out of CWallet
7ef47b88e Refactor: Move GetKeypoolSize code out of CWallet
089e17d45 Refactor: Move RewriteDB code out of CWallet
0eac7088a Refactor: Move SetupGeneration code out of CWallet
f45d12b36 Refactor: Move HavePrivateKeys code out of CWallet::CreateWalletFromFile
8b0d82bb4 Refactor: Move Upgrade code out of CWallet::CreateWalletFromFile
46865ec95 Refactor: Move MarkUnusedAddresses code out of CWallet::AddToWalletIfInvolvingMe
a18edd7b3 Refactor: Move GetMetadata code out of getaddressinfo
9716bbe0f Refactor: Move LoadKey LegacyScriptPubKeyMan method definition
67be6b9e2 Refactor: Move SetAddressBookWithDB call out of LegacyScriptPubKeyMan::ImportScriptPubKeys
fc2867fdf refactor: Replace UnsetWalletFlagWithDB with UnsetBlankWalletFlag in ScriptPubKeyMan
78e7cbc7b Refactor: Remove UnsetWalletFlag call from LegacyScriptPubKeyMan::SetHDSeed
0391aba52 Remove SetWalletFlag from WalletStorage
4c5491f99 Refactor: Move SetWalletFlag out of LegacyScriptPubKeyMan::UpgradeKeyMetadata
769acef85 Refactor: Move SetAddressBook call out of LegacyScriptPubKeyMan::GetNewDestination
acedc5b82 Refactor: Add new ScriptPubKeyMan virtual methods
533d8b364 Refactor: Declare LegacyScriptPubKeyMan methods as virtual
b4cb18bce MOVEONLY: Reorder LegacyScriptPubKeyMan methods
fa8919889 bench: Remove redundant copy constructor in mempool_stress
29f843436 refactor: Remove redundant PSBT copy constructor
162d0038e doc: compiling with Visual Studio is now supported on Windows
b1f1fb5f1 doc: update MSVC instructions to remove Qt configuration
59853c33f test: Do not instantiate CAddrDB for static call
3ed8e3d07 doc: Remove explicit network name references
ff2275141 test: rm ascii art in rpc_fundrawtransaction
94fcc0854 test: add rpc_fundrawtransaction logging
c5377ffbb [qa] Add shrinkdebugfile=0 to regtest bitcoin.conf
b6d218385 Minor refactoring to remove implied m_addr_relay_peer.
8a0ca5e9d log: Fix log message for -par=1
2f5f7d6b1 GuessVerificationProgress: cap the ratio to 1
60582d606 [linter] Strip trailing / in path for git-subtree-check
58d0393be build: update retry to current version
a8b82867d Fix incorrect help-debug for -checkpoints
fa0b3da36 Squashed 'src/univalue/' changes from 7890db99d6..5a58a46671
a6f6f77a8 QA: Add wallet_implicitsegwit to test the ability to transform keys between address types
facc0da63 travis: Run unit and functional tests on native arm
fa0a731d0 test: Add RegTestingSetup to setup_common
0a50019fd Walk pindexBestHeader back to ChainActive().Tip() if it is invalid
fa54b3e24 test: move-only ComputeFilter to src/test/lib/blockfilter
c98bd13e6 replace asserts in RPC code with CHECK_NONFATAL and add linter
3ed772d22 [tests] remove bignum.py
f950ec252 [tests] remove bn2bin()
3b9b38579 [tests] remove bn_bytes() function
a760aa14a [tests] remove mpi2vch() function
9a60bef50 [tests] don't encode the integer size in bignum
1dc68aee6 [tests] add function comments to bignum
f31fc0e92 [tests] fix flake8 warnings in script.py and bignum.py
fa144e6fd rpc: Add generatetodescriptor
595cc9bca docs: Add undefined to --with-sanitizers=fuzzer,address
d5dbb4898 tests: Add fuzzing harness for ISO-8601 related functions
d314e8a81 refactor: Replace all uses of boost::optional with our own Optional type
1cf9b35c0 doc: Add developer note on c_str()
3004d5a12 [validation] Remove fMissingInputs from AcceptToMemoryPool()
c428622a5 [validation] Remove unused first_invalid parameter from ProcessNewBlockHeaders()
7204c6434 [validation] Remove useless ret parameter from Invalid()
1a37de4b3 [validation] Remove error() calls from Invalid() calls
067981e49 [validation] Tidy Up ValidationResult class
a27a2957e [validation] Add CValidationState subclasses
37b8475dc Chainparams: Use name constants in chainparams initialization
3b3b93174 nsis: Write to correct filename in first place
31879345e cli: Add "headers" and "verificationprogress" to -getinfo
707fde7b9 add unused SnapshotMetadata class
d6e493f0c wallet: Remove left-over BIP70 comment
53fe0b70a Fix missing strFailReason in CreateTransaction
4b28a05f0 Fix misplaced AssertLockHeld
2632b1f12 doc: Clarify WalletStorage / Wallet relation
628d11b2b Add back mistakenly removed AssertLockHeld
52cf68f7f Refactor: Add GetLegacyScriptPubKeyMan helper
c1c6c410a test: add reason checks for non-standard txs in test_IsStandard
f44abe4be refactor: Remove addrdb.h dependency from node.h
a35b6824f Add assertion to randrange that input is not 0
b0c774b48 Add new mempool benchmarks for a complex pool
dd94cc46e contrib: remove accounts from bash completion
d8daa8f37 pubkey: Assert CPubKey's ECCVerifyHandle precondition
362ded410 Avoid using g_rpc_node global in wallet code
8922d7f6b scripted-diff: Remove g_connman, g_banman globals
e6f4f895d Pass NodeContext, ConnMan, BanMan references more places
4d5448c76 MOVEONLY: Move NodeContext struct to node/context.h
301bd41a2 scripted-diff: Rename InitInterfaces to NodeContext
436ad4364 Fix issue with conflicted mempool tx in listsinceblock
f3b51eb93 Fix occurences of c_str() used with size() to data()
c72906dcc refactor: Remove redundant c_str() calls in formatting
3bb0a4674 bench: Fix negative values and zero for -evals flag
317fb96de Add search for first blk file with pruned node
9cae3d5e9 tests: Add fuzzer initialization (hold ECCVerifyHandle)
e7b02b54c Add roundtrip and more tests to ParseISO8601DateTime and FormatISO8601DateTime
9e2c623be Rename DecodeDumpTime to ParseISO8601DateTime and move to time.cpp
6d6a7a840 gui: Fix duplicate wallet showing up
81ea66c30 Drop signal CClientUIInterface::LoadWallet
1abcecc40 Tests: Use self.chain instead of 'regtest' in almost all current tests
29a21c906 [rpc] set default bip32derivs to true for psbt methods
f201ba59f Refactor: Split up CWallet and LegacyScriptPubKeyMan and classes
6702048f9 MOVEONLY: Move key handling code out of wallet to keyman file
ab053ec6d Move wallet enums to walletutil.h
a552e8477 added asserts to check m_addr_known when it's used
04dbdd613 [net] SocketHandler: log peer id for close and disconnect
e156b9d8b gui: disable font antialiasing for QR image address
5710dadf9 test: fix script_p2sh_tests OP_PUSHBACK2/4 missing
6b6be41c3 gui: Make polling in ClientModel asynchronous
fa398091b Avoid unused call to GuessVerificationProgress in NotifyHeaderTip
a59291302 http: add missing header bootlegged by boost < 1.72
dc2fdb990 tests: Add fuzzing harness for various CScript related functions
fafa064d2 ci: Remove ccache requirement on the host
8c6081a88 compat: remove bswap_* check on macOS
2cba35ab3 build: skip building OpenSSL lib_ssl
45a2d3c55 build: remove OpenSSL from Qt build
befbc40eb build: remove EVP_MD_CTX_new detection
fcee10c2d build: remove SSL lib detection
c7f30dbca gui: Update BIP70 support message
a3e810326 build: remove BIP70 entries from macOS Info.plist
72fe13a58 gui: remove payment request file handling from OpenURI dialog
3548e4aac Remove BIP70 Support
1cb9a4e28 docs: remove protobuf from docs
67328bb7c build: remove protobuf from depends
fa9281340 consensus: Explain why fCheckDuplicateInputs can not be skipped and remove it
0a433fc87 [validation] Remove unused cacheSigStore from CheckInputsFromMempoolAndCache
fa710066b ci: Disable functional tests on mac host
6f6852335 doc: Changed miniupnp links to https
c2f964a67 tests: Remove Cygwin WinMain workaround
db4bd32cc tests: Skip unnecessary fuzzer initialisation. Hold ECCVerifyHandle only when needed.
50037e97d depends: fix boost mac cross build with clang 9+
b05ec410f Add unit testing for the CompressScript functions
b5ffa9f3d tests: Add Parse(...) (descriptor) fuzzing harness
fdef8bbf2 tests: Allow for using non-default fuzzing initialization
0fc81a1e8 gui: Fix payAmount tooltip in SendCoinsEntry
ed2dc5e48 Add override/final modifiers to V1TransportDeserializer
f342a5e61 Make resetting implicit in TransportDeserializer::Read()
6a9149949 Remove oversized message detection from log and interface
168b781fe Continue relaying transactions after they expire from mapRelay
a0fc07647 refactor: test/bench: dedup Build{Crediting,Spending}Transaction()
8734c856f Replace the LogPrint function with a macro
088a730fe static tooltip
8d8e5a79d test: use default address type (bech32) for wallet_bumpfee tests
b0e10ff4d Force CNetMessage::m_recv to use std::move
feb507577 build: use osslsigncode 2.0 in gitian
5b44a7549 refactor: Remove unused CExt{Pub,}Key (de)serialization methods
4671fc3d9 Expand on wallet_balance.py comment from https://github.com/bitcoin/bitcoin/pull/16766\#issuecomment-527563982
91f3073f0 Update release notes to mention changes to IsTrusted and impact on wallet
8f174ef11 Systematize style of IsTrusted single line if
b49dcbedf update variable naming conventions for IsTrusted
5ffe0d144 Update comment in test/functional/wallet_balance.py
a550c5826 Update wallet_balance.py test to reflect new behavior
5dd7da4cc Reuse trustedParents in looped calls to IsTrusted
595f09d6d Cache tx Trust per-call to avoid DoS
dce032ce2 Make IsTrusted scan parents recursively
0616138a0 tests: Remove no longer needed UBSan suppressions (issues fixed). Add documentation.
4896bacc0 Add testcase to simulate bitcoin schema in leveldb
8d22ab0e5 ci: Enable address sanitizer (ASan) stack-use-after-return checking
7ca68e146 wallet: Remove unused GetLabelName
f09ba060c doc: Added instructions for how to add an upsteam to forked repo
57e2edea0 Send amount shows minimum amount placeholder
faeb66653 util: Add CHECK_NONFATAL and use it in src/rpc
f9af3ced1 Android: add all arch support
e892f9648 random: remove call to RAND_screen() (Windows only)
9e9593186 [wallet] Remove `state` argument from CWallet::CommitTransaction
d1734f9a3 [wallet] Remove return value from CommitTransaction()
b6f486a02 [wallet] Add doxygen comment to CWallet::CommitTransaction()
7005d6ab8 gui: Add placeholder text to the sign message field
efecb7467 Use adapter pattern for the network deserializer
1a5c656c3 Remove transport protocol knowhow from CNetMessage / net processing
6294ecdb8 Refactor: split network transport deserializing from message container
b5f0be387 util: Filter out macOS process serial number
9576614d2 doc: Describe log files + consistent paths in test READMEs
fa677d180 ci: Remove redundant check for TRAVIS_OS_NAME
fadccb263 doc: Document that GNU tools are required for linters
4444704ca ci: Cleanup macOS runs
5013171ea doc: correct function name in ReportHardwareRand()
090b75c14 p2p: Avoid allocating memory for addrKnown where we don't need it
fa0467326 chain: Set all CBlockIndex members to null, remove SetNull helper
7d8d3e6a2 Add tests for util/vector.h's Cat and Vector
e65e61c81 Add some general std::vector utility functions
8bba91b22 [wallet] Fix whitespace in CWallet::CommitTransaction()
084e17ceb Remove unused includes
58d67f1cc tests: Add fuzzing harness for descriptor Span-parsing helpers
b3b26e149 rpc: fix -rpcclienttimeout 0 option
610d9384d gui: Added label & tooltip for Verify Message labels
cc3b5289e gui: remove OpenSSL PRNG seeding (Windows, Qt only)
8019b6b15 gui: Make RPCConsole::TabTypes an enum class
4441e5849 Update macdeploy README to include correctly named `.dmg` file produced from `make deploy`
d48f66444 tests: Fix fs_tests for unknown locales
d7820a125 util: Filter control characters out of log messages
5f40d2770 github: Add warning for bug reports
eebcdfa86 [test] rename SegwitVersion1SignatureHash()
1f6c650c9 travis: run tests on macOS native
f59bbb61a test: Fix bug in blockfilter_index_tests.
b96ed0396 [wallet] Remove pruning check for -rescan option
eea462de9 [wallet] Remove package limit config access from wallet
85016e52f [rpc] Fix broken bitcoin-cli examples
32d665c26 test: fix "tx-size-small" errors after default address change
c8961c7d9 doc: Add switch on enum example
11e3d5eb1 util: Add AllowShortCaseLabelsOnASingleLine option
a8f5026d6 gui: Fix start timer from non QThread
fba4baa4f test: speed up wallet_address_types by whitelisting peers (immediate tx relay)
9760293ce wallet: Fix for exported confirmation field in payment to self transactions
b3b6b6f62 gui: don't disable the sync overlay when wallet is disabled
89339d146 tests: Add test for loadblock option
581c9be0d test: speedup wallet_backup by whitelisting peers (immediate tx relay)
7e50abcc2 tests: Add EvalScript(...) fuzzing harness
a0daea459 [build] depends macOS: point --sysroot to SDK
d419ca7e3 depends: export dynamic JNI symbols from static qtforandroid.a
ed30684d0 Qt: patch androidjnimain.cpp to make sure JNI is initialised when statically compiled
fa6ed8279 doc: update bips.md with buried BIP9 deployments
1ba49bcdc build: pass --enable-option-checking to applicable packages
bcff8e21b build: only pass --disable-dependency-tracking to packages that understand it
fa191c058 doc: Add missing indexes/blockfilter/basic/ to doc/files.md
66b29848c change wallet pointers to references in feebumper
bebb63747 tests: Add FuzzedDataProvider fuzzing helper from the Chromium project
7aad3b68e doc: Doxygen-friendly CuckooCache comments
9075d1315 [docs] Add release notes for removal of REJECT reasons
04a2f326e [validation] Fix REJECT message comments
e9d5a59e3 [validation] Remove REJECT code from CValidationState
9be6666a4 typo and unneccessary parentheses
0053e1671 [logging] Don't log REJECT code when transaction is rejected
a1a07cfe9 [validation] Fix peer punishment for bad blocks
fa91590a7 build: Add README.md to DIST target
bb36372b8 test: add unit tests for Span-parsing helpers
f4c8953b0 Add missing fields in TransactionDescriptionString and others
353010849 MOVEONLY : move RPC wallets helpers to TransactionDescriptionString
fae43a97c test: Seed test RNG context for each test case, print seed
181989f6c build: Add variable printing target to Makefiles
cd82f75a4 lint: Install grep and git via brew on mac for --perl-regexp
eafa747ca lint: Fix shellcheck SC2155
615ff4e7d lint: Run the linters against Mac OS on Travis
9192ce5d6 depends: pull upstream libdmg-hfsplus changes
9b54f3436 depends: latest config.guess & config.sub
5c2987636 tests: Remove TRANSACTION_DESERIALIZE (replaced by transaction fuzzer)
0a573682f tests: Add fuzzing harness for CheckTransaction(...), IsStandardTx(...) and other CTransaction related functions
fa79dff62 ci: Run tests on arm
facb9a131 init: Change fallback locale to C.UTF-8
111880aaf [test] Add coverage to estimaterawfee and estimatesmartfee
4de0bde7b build: Fix #include sys/poll.h to just poll.h (without sys/)
a54ab2104 [doc] fix Makefile target in benchmarking.md
4bb660be9 Add release note
ed96b295d Update descriptors.md to include sortedmulti
80be78ea7 Test sortedmulti descriptor using BIP 67 tests
6f588fd22 Add sortedmulti descriptor and unit tests
9d1f971c7 gitian: Put things in the right place to begin with
71949a97a gitian: Eliminate rename dependency
999a9a5f5 gitian: Smaller diff with gitian-linux.yml
c4a3c25ba gitian: Fix README inclusion in archives
facec1c64 wallet: Avoid showing GUI popups on RPC errors
974343203 Fix bug where duplicate PSBT keys are accepted
dd85166b6 Added double quotes
44f7a8d7a Disable _FORTIFY_SOURCE when enable-debug
ffa222125 tests: Pass fuzzing inputs as constant references
c640ca24f Always generate `bitcoinstrings.cpp` on `make translate`
30fc1a3f5 build: Remove workaround for ancient libtool
6ca01b9a1 build: Ensure a minimal version of libtool
8acd58927 Fix Python Docstring to include all Args.
c2bb3919a util: Simplify path argument for CBlockTreeDB ctor
dffae5a5a scripts: update copyright_header script to include additional files
fa1ad8f06 build: Bump gitian descriptor versions
0b1dcd32b contrib: fix minor typos in makeseeds.py
fad1dbda9 doc: Fix amount typo in release notes
eb7b78165 modify p2p_feefilter test to catch rounding error
6a51f7951 Disallow implicit conversion for CFeeRate constructor
8e59af55a feefilter: Compute the absolute fee rather than stored rate to match mempool acceptance logic
fa95503d6 ci: Make apt-get more verbose, to debug travis timeouts
07e4bdba3 Don't rename main thread at process level
3f89e1eb2 Prevent processing duplicate payment requests
93cb97498 gitian: Use split-debug.sh for Win builds
86b9f92da doc: Add detailed info about Bitcoin Core files
fa8d052da doc: Update bips.md for default bech32 addresses in 0.20.0
fab68a077 doc: move-only release notes fragments for 0.20.0
ea4cc3a7b Truly decouple wallet from chainparams for -fallbackfee
fa25f43ac p2p: Remove BIP61 reject messages
ddddd8961 ci: Use busybox utils for one build
faca1c24f doc: move-only: Steps for "before major release branch-off"
434101875 doc: reset release notes after 0.19 split-off
c0859b7da build: 0.19 release updates on master
0218171a2 contrib: Remove invalid nodes from seeds list
091747b46 gui: Add shortcuts for tab tools
fa06bb607 qa: Do not force overwrite of QT_QPA_PLATFORM on windows for gui tests
faccf5f9c doc: Explain QT_QPA_PLATFORM for gui tests
fa3d98426 doc: Consolidate release notes before 0.19.0
fa02f2d60 doc: Add missing release notes for 16383
fa3a73311 chainparams: Bump assumed chain params
3b09f2b9d net: 0.19 hardcoded seeds update
801d341f3 contrib: makeseeds: More fancy output
ed76299be contrib: makeseeds: Limit per network, instead of total
c254a9ef6 contrib: makeseeds: dedup by ip,port
3314d8796 contrib: makeseeds: Factor out ASN lookup
301c2b1ab contrib: makeseeds: Improve logging and filtering
aa81e2cc0 Enable UBSan for Travis fuzzer job
60e855f5c doc: Bump version in bips.md, mention bumping in release process
50c4afa3c add newline after -stdin*
7f11fba2e cli: add -stdinwalletpassphrase for (slightly more) secure CLI
0da503e94 add stdin helpers for password input support
57b0cd4db build: Installed Qt version only appears if being built
386ae0f69 util: Make thread names shorter
fadd6e0d2 doc: Remove mention of renamed mapBlocksUnlinked
82c11773d doc: Add mention of BIP158 indexing since v0.19.0
226700602 doc: Add mention of BIP125 used by wallet GUI by default since v0.18.1
3284e6c09 scripts: search for next position of magic bytes rather than fail
85973bcc4 When BIP70 is disabled, get PaymentRequest merchant using string search
b11514d4e doc: Add mention of BIP70 disabling by default in bips.md
c812aba39 test bumpfee fee_rate argument
9c23ebd6b qa: Fix service flag comparison check in rpc_net test
e2ce392ae test: Avoid whitespace linting in qt translations
977dd23e4 qt: Periodic translations update
e28d8f893 Correct docstring param name.
4320bfc0c build: Factor out qt translations from build system
9f25de3d9 rpc bumpfee check fee_rate argument
88e5f997d rpc bumpfee: add fee_rate argument
0cc7dd74e test: add unittests for CheckProofOfWork
d478a472e test: Fix combine_logs.py for AppVeyor build
71d4eddf4 Add release note for bech32 by default in wallet
b34f0180e Revert "gui: Generate bech32 addresses by default (take 2, fixup)"
f50785ab5 Change default address type to bech32
8cf9898b5 qt: Change default size of intro frame
3eea6a8f2 refactor: Remove Qt function to disable menu icons on macOS
43e7d576f doc: Improve test READMEs
8d841ad49 doc: Remove MSVC update step from translation process
1a02edb3f [RPC] Fix casing in getblockchaininfo to be inline with the rest of the response
67d99900b make SaltedOutpointHasher noexcept
0d86f4d3d refactor: consolidate PASTE macros
a649cc6a1 Change sendcoins dialogue Yes to Send
203a67d21 doc: Put PR template in comments
f4beb4996 test: Remove python dead code linter
27fcb40fc doc: replace outdated OpenSSL comment in test README
fadd76acc ci: Remove TRAVIS env vars
fa449b89b ci: Set $HOST before setting fallback values
fa607c229 validation: Make GetWitnessCommitmentIndex public
addaf8af8 make sure to update the UI when deleting a transaction
15ac91664 doc: Doxygen-friendly descriptor.h comments
dbdc758c2 doc: Improve doxygen readme navigation section
c15ac2c0a doc: Move doxygen intro to file for USE_MDFILE_AS_MANPAGE
faa079db9 travis: Disable feature_block in tsan run
e4c319e8a builds: remove superfluous config_opts_aarch64_android
faec689be txmempool: Make entry time type-safe (std::chrono)
bd3f5a90e build: remove mingw linker workaround from win gitian descriptor
24ffef0c2 Patch libevent when building for Android (fix arc4random_addrandom)
f1e40b3e7 Update bitcoin_qt.m4
b4057d826 Define TARGET_OS when host is android
6659810e2 test: use named args for sendrawtransaction calls
5c1cd78b7 doc: improve rawtransaction code/test docs
acc14c509 test: fix incorrect value in rpc_rawtransaction.py
fa7847d99 gui: Rename address checkbox back to bech32
9a19c9ada Always define the raii_event_tests test suite
568aa0cf8 Add OpenSSL termios fix for musl libc
463a1d524 Refresh ZeroMQ 4.3.1 patch
cd68594dc Only check the hash of transactions loaded from disk
72a18a73a tests: Add information on how to add Vulture suppressions
fa2e03869 test: Fix extra_args in wallet_import_rescan.py
fa8d65f07 doc: Fix doxygen comment for SignTransaction in rpc/rawtransaction_util
fa6958853 test: Make PORT_MIN in test runner configurable
faaa1f01d util: Add count_seconds time helper
1111170f2 test: mempool entry time is persisted
96299a9d6 Test: Move common function assert_approx() into util.py
80b475f15 Fix Android zlib cross compilation issue (https://stackoverflow.com/questions/21396988/zlib-build-not-configuring-properly-with-cross-compiler-ignores-ar)
45f821901 Add full Android build example command and instructions on getting SDK/NDK
b68f2a68c Add config opts and patch for aarch64_android build of Qt
9c4cb0166 Add ranlib to android.mk hosts file (fix OSX Android NDK build)
c2a749c9c Add example Android host-platform-triplet and options
0b0cff3c6 Add support for building Android dependencies
14c6a2de1 [doc] update brew instruction for doxygen
c4b0c08f7 Update tx-size-small comment with relevant CVE disclosure
5e69aeec3 Add documenting comments to spanparsing.h
230d43fdb Abstract out some of the descriptor Span-parsing helpers
fac35b21e test: lint: Add DisabledOpcodeTemplates to whitelist
fadfd844d test: Remove unused connect_nodes_bi
fa3b9ee8b scripted-diff: test: Replace connect_nodes_bi with connect_nodes
faaee1e39 test: Use connect_nodes when connecting nodes in the test_framework
1111bb91f test: Reformat python imports to aid scripted diff
3cf36736e refactoring: move ReplayBlocks under CChainState
bcf73d3b8 refactoring: move LoadChainTip to CChainState method
f5809d5b1 doc: fix CChainState::ActivateBestChain doc
6aab7649d doc: Fix whitespace errs in .md files, bitcoin.conf, Info.plist.in, and find_bdb48.m4
a57a1d42d test: add unit test for wallet watch-only methods involving PubKeys
8573429d4 test: add some unit tests for merkle.cpp
fa502cb6f test: Bump timeouts in slow running tests
1b4030e26 depends: qt: Fix LDFLAGS pickup
4a87c5cfd [refactor] Rewrite AcceptToMemoryPoolWorker() using smaller parts
fa27eded3 qt: Run "make translate" in ./src
2222c96de test: Add notes on how to generate data/wallets/high_minversion
93995c275 build: remove unnecessary qt xcb patching
4d45577c4 build: remove unnecessary macOS qt patching
ae0add8df Add python bech32 impl round-trip test
1b41c2c8a test: improve gettransaction test coverage
0f34f5488 rpc: fix regression in gettransaction
107e03072 build: make protobuf optional in depends
ff6122f32 doc: clarify protobuf build requirements
bb99c4e68 build: update boost macros to latest upstream
7dee8f480 [wallet] Rename 'decode' argument in gettransaction method to 'verbose'
80031045f Clarify includeWatching for fundrawtransaction
b6233a498 bitcoin-wallet: Add a missing closing parenthesis in the help
706340150 Elaborate on the need to re-login on Debian-based systems to use tor following usermod
f390d8556 Prevent UpdateTip log message from being broken up
1153caf78 Qt: advise users not to switch wallets when opening a BIP70 URI.
e09913f1c doc: specify protobuf as optional in build docs
376f4929f build: disable BIP70 support by default
1d524c62e tests: rename 'test_getnetworkinginfo' in 'test_getnetworkinfo'
07a8f6503 tests: add a test for the 'servicesnames' RPC field
82e53f37e doc: add comments clarifying how local services are advertised
2a4e60b48 Fix block index inconsistency in InvalidateBlock()
efd2474d1 util: CBufferedFile fixes
fa912a8ad doc: move-only ActivateBestChain doxygen comment to header
ec4c79326 signrawtransaction*: improve error for partial signing
3c481f892 signrawtransactionwithkey: better error messages for bad redeemScript/witnessScript
6eb12ffcb depends: qt: Fix C{,XX}FLAGS pickup
cad3ab5db gui: fix autofocus in CreateWalletActivity::askPassphrase()
539d9403a gui: fix passphrase labels/tooltip in createwalletdialog/askpassphrasedialog
43aa9b0d7 gui: rename encrypt(), blank(), and askPasshprase()
bdd6a4fd5 qa: Check scantxoutset result against gettxoutsetinfo
fc0c410d6 rpc: Improve scantxoutset response and help message
ad52f054f Escape ampersands (&) in wallet names in Open Wallet menu
2c530ea2a HTML escape address labels in more dialogs and notifications
1770a972d HTML escape the wallet name in more dialogs and notifications
4be3b7680 refactor: Cleanup walletinitinterface.h
fabca7756 doc: Add issue templates for bug and feature request
161968432 Added libbitcoin_qt and bitcoin-qt to the msbuild configuration.
3bf9d8cac Testchains: Qt: Simplify network/chain styles
052c54ecb Testchains: Generic selection with -chain=<str> in addition of -testnet and -regtest
7fb7acfc2 Set init stop timeout to 10 min
613de61a0 Add Create Wallet menu action
9b41cbb28 Expose wallet creation to the GUI via WalletController
78863e290 Add CreateWalletDialog to create wallets from the GUI
60adb21c7 Optionally allow AskPassphraseDialog to output the passphrase
3109a1f94 refactor: Avoid locking cs_main in ProcessNewBlockHeaders
bc6d8a366 gui: Refactor OpenWalletActivity
0065ead5e contrib: guix: Remove ssp spec file hack
0093a5869 contrib: guix: More robust search paths, add checks
f0636d341 depends: zlib: Move toolchain options to configure
fdb3e8f8b Ignore old versionbit activations
66740f460 doc: add a release note for the new field in 'getpeerinfo' and 'getnetworkinfo'
6564f58c8 rpc/net: decode the services flags in a new entry
2457aea83 Assert that the HRP is lowercase in Bech32::Encode
c0b5d9710 Test that joinpsbts randomly shuffles the inputs
6f405a1d3 Shuffle inputs and outputs after joining psbts
5ce822efb Conservatively accept RBF bumps bumping one tx at the package limits
490da639c Make lint-includes.sh work from any directory
0ba08020c Disconnect peers violating blocks-only mode
937eba91e doc: improve comments relating to block-relay-only peers
430f48902 Don't relay addr messages to block-relay-only peers
3a5e88530 Add 2 outbound block-relay-only connections
b83f51a4b Add comment explaining intended use of m_tx_relay
e75c39cd4 Check that tx_relay is initialized before access
fae91a09c test: Remove incorrect and unused try-block in assert_debug_log
39034f1ee Refactor rawtransaction_util's SignTransaction to have previous tx parsing be separate
3d0a82cff devtools: Accomodate block-style copyright blocks
0ef0e51fe lint: Bump flake8 to 3.7.8
838920704 lint: Disable flake8 W504 warning
b21680baf test/contrib: Fix invalid escapes in regex strings
fa734603b wallet: Fix segmentation fault in CreateWalletFromFile
fab3c3441 test: Print both messages on failure in assert_raises_message
faa13539d wallet: Fix documentation around WalletParameterInteraction
e80259f19 Additionally treat Tx.nVersion as unsigned in joinpsbts
fa99efd05 doc: ActivateBestChainStep return value
057fac345 gui: Update English source translation
072f37a7e gui: Update transifex slug for 0.19
dcc448e3d Avoid unnecessary "Synchronizing blockheaders" log messages
0bb33b534 qt: Replace objc_msgSend with native syntax
8340763dc Check for codespell in lint-spelling.sh
f091dc818 GUI: Remove unused menu items for Windows and Linux
9965940e3 doc: Add release note for the new gettransaction argument
b8b3f0435 tests: Add a new functional test for gettransaction
7f3bb247a gettransaction: add an argument to decode the transaction
6d803494b Don't show addresses or P2PK in decoderawtransaction
635e9154d [qt] Change uninstall icon on Windows
8b6f5aabb qt: Replace QFontMetrics::width() with TextWidth()
442a87cc0 Add a test wallet_reorgsrestore
40ede992d Modify wallet tx status if has been reorged out
d48c1e837 Add window final block height to getchaintxstats
798a589af wallet: extract PubKey from P2PK script with Solver
41d484d5c doc: Delete stale URL in test README
d53d59123 Added the bench_bitcoin project to the list automatically produced by the msvc-autogen python script.
fa61365a1 wallet: Translate all initErrors in CreateWalletFromFile
fa70d199d util: Make util/error bilingual_str (refactor)
945280248 doc: Tidy up shadowing section
c4aa2ba82 [refactor] Change tx_relay structure to be unique_ptr
4de0dbac9 [refactor] Move tx relay state to separate structure
71e08ab22 test: add executable flag for wallet_watchonly.py
aff1c9c88 Adds an option to msbuild common configuration to ignore linker warning 4221. This warning is for object files that do not include any symbols. The warning is harmless and occurs due to some classes that are *nix only having no source to compile for an msvc build.
403e37240 qa: Relax so that the subscriber is ready before publishing zmq messages
fa27372e6 ci: Move CCACHE_DIR and test_runner tmp dir into ./ci/scratch/
fa60583d2 ci: Pass down $MAKEJOBS to test_runner.py
fae961de6 test: Establish only one connection between nodes in rpc_invalidateblock
8a3b2eb17 move-only: move coins statistics utils out of RPC
eb2d64b9e doc: Add spacing to command in translation_process.md
9b92538ad Remove unused fScriptChecks parameter from CheckInputs
92528c260 Support serialization of std::vector<bool>
1a4c791cf rpc bumpfee: move feerate estimation logic into separate method
e4f4ea47e lint: Catch use of [] or {} as default parameter values in Python functions
25dd86715 Avoid using mutable default parameter values
a64dbeffe doc: Update labels in CONTRIBUTING.md
091213403 qt: Remove QSignalMapper from TransactionView
c6dd32da6 qt: Replace obsolete functions of QDesktopWidget
c53667764 qt: Remove obsolete QModelIndex::child()
d9d898427 wallet: Use wallet name instead of pointer on unload/release
9924bce31 [gui] intro: enable pruning by default unless disk is big
c8de347a9 [gui] intro: add prune preference
1bbc49d20 [gui] intro: inform caller if intro was shown
195710378 [gui] add explicit prune setter
1bccf6a52 [node] add forceSetArg to interface
66ad75472 [Doc] Add documentation for the new whitelist permissions
2e1455c4a Replace obsolete functions of QSslSocket
9e0c1d676 qt: Remove QSignalMapper from RPCConsole
74e387698 Release notes: add previously undocumented changes
7e1634a92 Release notes: edit previously-detached notes
7e8999413 Remove SyncTransaction for conflicted txn in CWallet::BlockConnected
a31be09bf Encapsulate tx status in a Confirmation struct
1260ecd81 qt: Add TextWidth() wrapper
a4765bd77 gui: Ensure tx send error highlight is visible
2483266c5 packages.md: document depends build targets
be27161ee Clarify need to specify --prefix with depends
e7415a5a9 Doc: move detached release notes into release-notes.md
bca388db0 gui: remove unused PlatformStyle::TextColorIcon
153d9dd9a refactor: replace qLowerBound & qUpperBound with std:: upper_bound & lower_bound
59373e3e9 refactor: replace qSort with std::sort
fea33cbbd refactor: replace qStableSort with std::stable_sort
f7220e85f build: update RapidCheck Makefile
6011c9d72 QA: fix rpc_setban.py race
b9ee63c71 Make descriptor test deterministic
faebf6271 rpc: Use Join helper in rpc/util
fa8cd6f9c util: Add Join helper to join a list of strings
f3b57f4a1 Unrecommend making config file owned by bitcoin
870d4152d Set ProtectHome in systemd service file
639a416e3 Chgrp config dir to bitcoin in systemd service
aded0528f Improve clarity of systemd service file comments
3d50fe2c1 scripts: move update-translations.py to maintainer-tools repo
1373fa7e3 doc: add default bitcoin.conf locations
6c27fa0f0 scripts: remove github-merge.py
8616c81f0 doc: initial RapidCheck property-based testing documentation
17d178fb9 doc: add release-notes for getmempoolentry weight field addition
9c9cc2bd2 qa: Add RPC tests for weight in mempool entry
54aaa7883 RPC: add weight to mempool entry output
b168dd30c Bugfix: QA: Run tests with UPnP disabled
abdfc5e89 qa: Test ZMQ notification after chain reorg
aa2622a72 qa: Refactor ZMQ test
6bc1ff915 doc: Add note regarding ZMQ block notification
2dfd6834e test: Add test for default maxfeerate in sendrawtransaction
261843e4b wallet/rpc: Use the default maxfeerate value as BTC/kB
dc1bc1c50 doc: Add ZMQ dependencies to Fedora build
787c9ec0c Additional tests for other failure cases
6e1ae5829 Check error messages in descriptor tests
625534d7b Give more errors for specific failure conditions
c325f619d Return an error from descriptor Parse that gives more information about what failed
333317ce6 test: Test that low difficulty chain fork is rejected
3b05f0f70 Reformat p2p_permissions.py
ce7eac3cb [Fix] The default whitelistrelay should be true
fa0119af2 doc: Refer in rpcbind doc to the manpage
fa31dc1bf test: Pass down correct chain name in tests
20ea9ef6c [doc] mention whitelist is inbound, and applies to blocksonly
faba46da0 ci: Set --ansi in test_runner
fa21737ba ci: Add environment files for all settings
a6c1fc3cd build: echo prop tests status during build
d117f4541 Add test for setban
f9d40ce7e Fix spelling error chache -> cache.
582d2cd74 Cover UTXO set access with lock annotations
faeacf326 ci: Add note that this assumes a fresh git clone
fa6cbdc3c ci: Use ./ci/ on non-travis host
fa31bc35e ci: Remove dependence on travis, use it as fallback env
fa0aac0f4 ci: Add retry
fafe78f6a ci: Rename .travis/ to ./ci/
569353068 refactor: have CCoins* data managed under CChainState
6576a8765 doc: Improve versionbits.h documentation
fa27c55b0 util: Move ResolveErrMsg to util/error
dc7529abf [Fix] Allow connection of a noban banned peer
fa3c6575c lint: Add false positive to python dead code linter
390874c72 qt: Remove menu icons
37f278495 tests: Use colors and dots in test_runner.py output only if standard output is a terminal -- allows for using the test runner output as input to other programs
fa25668e1 test: Test p2sh-witness and bech32 in wallet_import_rescan
fa79af298 test: Replace fragile "rng" with call to random()
fac3dcf7d test: Generate one block for each send in wallet_import_rescan
0328dcdcf [Consensus] Bury segwit deployment
e78aaf41f [docs] Add release notes for burying bip 9 soft fork deployments
1c93b9b31 [Consensus] Bury CSV deployment height
8319e738f [tests] Add coverage for the content of getblockchaininfo.softforks
26a93bce2 Remove unused variable
36f7697cf doc: Fix typos in COPYRIGHT
b6e9ff899 build: Remove src/obj directory from repository
c295cba5a depends: zeromq: disable draft classes and methods
0072237b9 depends: xproto: configure flags cleanup
6a8ada3a4 depends: qrencode: configure flags cleanup
86beb8cdc depends: fontconfig: configure flags cleanup
e656d95ec depends: libxcb: configure flags cleanup
e439388b3 depends: libXau: configure flags cleanup
396385657 descriptor: fix missed m_script_arg arg renaming in #14934
862cbf396 Add missing contributor to release notes
c84ff23c6 build: ignore macOS make deploy artefacts & add them to clean-local
3862e473f [rpc] Tidy up reporting of buried and ongoing softforks
afc0966d7 Moved and renamed hash256 from util.py to zmq_interface.py
14f7eec3b rpc: Fix getblocktemplate CLI example (#16594)
7cd069d8e Add test for AddTimeData
fa1e9c68a travis: Bump timeout from 50 minutes to 90
fa7789f73 doc: Mention other ways to conserve memory on compilation
fa4ee0ddf build: Remove unused src/obj-test folder
1f26328c1 doc: Update Markdown syntax for bdb packages
c5b404e8f Add functional tests for flexible whitebind/list
d541fa391 Replace the use of fWhitelisted by permission checks
ecd5cf7ea Do not disconnect peer for asking mempool if it has NO_BAN permission
e5b26deaa Make whitebind/whitelist permissions more flexible
906391101 sipsorcery gitian key.
a2714a5c6 Give QApplication dummy arguments
c8b53c3be [wallet] Restore confirmed/conflicted tx check in SubmitMemoryPoolAndRelay()
61c5c64b3 doc: Add historical release notes for 0.18.1
bf72b8a55 build: disable libsecp256k1 benchmarks
b7b9f6e4c Remove p2pEnabled from Chain interface
2dbfb37b4 Fix Char as Bool in interfaces
0481fa258 util: refactor upper/lowercase functions
6170ec5d3 Do not query all DNS seed at once
26d3fad10 Add unmodified-but-with-checksum to getdescriptorinfo
104b3a506 Factor out checksum checking from descriptor parsing
214c4ecb9 [wallet] restore coinbase check in SubmitMemoryPoolAndRelay()
fae6ab6ae refactor: pcoinsTip -> CChainState::CoinsTip()
330312496 build: disable libxcb extensions
2f37163ca test: only include and init openSSL where it's actually used
fa0b91048 [doc] chain: Declare BLOCK_VALID_HEADER reserved
b2ea20d33 doc: Fix grammar and punctuation in developer notes
970de70bd Dump transaction version as an unsigned integer in RPC/TxToUniv
fa566b260 test: Add missing sync_blocks to feature_pruning
05fdb97df [doc] Update and extend benchmarking.md
fa76285fd test: Explain why -whitelist is used in feature_fee_estimation
faff85a69 test: Format feature_fee_estimation with pep8
faf36838b test: Avoid hardcoding the chain name in combine_logs
0a4e4a05e [build] .gitignore add Qt Creator Makefile.am.user
e90478f43 log: harmonize bitcoind server logging
fb62f128b Tidy up BroadcastTransaction()
b8eecf8e7 Remove unused submitToMemoryPool and relayTransactions Chain interfaces
8753f5652 Remove duplicate checks in SubmitMemoryPoolAndRelay
611291c19 Introduce CWalletTx::SubmitMemoryPoolAndRelay
8c8aa19b4 Add BroadcastTransaction utility usage in Chain interface
fa36aa492 Test: Set -acceptnonstdtxn in feature_fee_estimation
b078067b9 gui: Remove unused RPCConsole::tabFocus
fa8a1d7ba test: Adapt test framework for chains other than "regtest"
68f546635 test: Fix “local variable 'e' is assigned to but never used”
e6f649cb2 test: Make tests arg type specific
b70cc5d73 Revamp option negating policy
0b1f4b3c6 wallet: Drop unused OldKey
73b692b53 doc: Add release note for the deprecated totalFee option of bumpfee
0646ca5ea Changes the verbosity of msbuild from quiet to normal in the appveyor script. Increasing the verbosity helps to identify the cause of build errors which is the main purpose of the appveyor script.
d6ac25bdd autoconf: Sane --enable-debug defaults.
fa1bb53b0 test: Add -acceptnonstdtxn to self.extra_args[3]
fa5a4cd81 gui: Generate bech32 addresses by default (take 2, fixup)
05b56d1c9 [wallet] Remove CMerkleTx serialization logic
783a76f23 [wallet] Flatten CWalletTx class hierarchy
b3a9d179f [wallet] Move CMerkleTx functions into CWalletTx
fa8a82316 test: Bump rpc_timeout in feature_dbcrash
914923d12 Add setting as known type
62d3f5057 qa: fix deprecated log.warn in feature_dbcrash test
faa88d0b5 doc: update labels in CONTRIBUTING.md
c5d378736 Allow createwallet to take empty passwords to make unencrypted wallets
e0324c376 Updated python command in readme so it will work on systems that have both python2 and 3 installed.
1ac7b7f66 scripts: filter more qt plugins we don't use in macdeployqtplus
57cdd0697 scripts: misc cleanups in macdeployqtplus
51729a4df scripts: use format() in macdeployqtplus
1c37e8169 scripts: add type annotations to macdeployqtplus
16b374818 Trivial: add missing space
fa6f22bf4 wallet: Rename CWalletKey to OldKey
fa6dc7fa5 wallet: Enumerate walletdb keys
db08edb30 Replace IsArgKnown() with FlagsOfKnownArg()
dde80c272 Use ArgsManager::NETWORK_ONLY flag
07e01d625 rpc: sendrawtransaction unconditionality/privacy note
d6b3640ac [test] walletcreatefundedpsbt: check RBF is disabled when -walletrbf=0
9ed062b56 [doc] rpc: remove "fallback to" from RBF default help
4fcb698bc [rpc] walletcreatefundedpsbt: use wallet default RBF
9a1273350 Remove unused m_debug_only member from Arg struct
fb4b9f9e3 scripted-diff: Use ArgsManager::DEBUG_ONLY flag
1b4b9422c scripted-diff: Use Flags enum in AddArg()
265c1b58d Add Flags enum to ArgsManager
e0d187dfe Refactor InterpretNegatedOption() function
e0e18a101 refactoring: Check IsArgKnown() early
42a5e912e [mempool] log correct messages when CPFP fails
fac2e6a60 test: Fail early on disconnect in mininode.wait_for_*
2f7eb772f Add RPC bumpfee totalFee deprecation test
a92d9ce8c deprecate totalFee argument in bumpfee RPC call
a33936737 Exclude depends/Makefile in .gitignore
bf3be5297 [qa] Ensure we don't generate a too-big block in p2sh sigops test
d9ab0ffa3 [qa] Fix race condition in example_test.py
fa2f991fa doc: add note on precedence of options in bitcoin.conf
9bc8b28c1 refactor : use RelayTransaction in BroadcastTransaction utility
77773edf2 doc: Remove downgrading warning in release notes, per 0.18 branch
ffea41f53 Enable all tests in feature_config_args.py
66f5c17f8 Use CheckDataDirOption() for code uniformity
7e33a18a3 Fix datadir handling in bitcoin-cli
b28dada37 Fix datadir handling in bitcoin-qt
50824093b Fix datadir handling in bitcoind
740d41ce9 Add CheckDataDirOption() function
c1f325126 Return absolute path early in AbsPathForConfigVal
40ad2f6a5 Have importwallet use ImportPrivKeys and ImportScripts
78941da5b Optionally allow ImportScripts to set script creation timestamp
94bf156f3 Have importaddress use ImportScripts and ImportScriptPubKeys
a00d1e5ec Have importpubkey use CWallet's ImportScriptPubKeys and ImportPubKeys functions
753f7cccc scripted-diff: Make translation bilingual
7c45e14f2 Add bilingual message type
0b86e517a Refactor out translation.h
72eaab073 tests: functional watch-only wallet tests
72ffbdc57 doc: add release note for include_watchonly default changes
248e22bbc depends: disable unused Qt features
f509e3b8c doc: remove line numbers from qt package links
1bb1661a4 doc: fix typo in bitcoin_qt.m4 comment
0aeb98ac1 build: remove jpeg lib check from bitcoin_qt.m4
98a64bd29 build: disable libjpeg in qt
c3dfc9103 test: Skip flaky p2p_invalid_messages test on macOS
4057b7acb wallet: Recognize -disablewallet option early
fa4010e11 travis: Print memory and number of cpus
80ba4241a extract min & max depth onto coin control
35e60e790 Remove ReadVersion and WriteVersion
b3d4f6c96 Log the actual wallet file version
c88e87c3b Remove nFileVersion from CWalletScanState
29ee4c417 Specify AM_CPPFLAGS for ZMQ.
0000ff0aa txmempool: Remove unused default value MemPoolRemovalReason::UNKNOWN
4f050b91c move-onlyish: move CCoinsViewErrorCatcher out of init.cpp
fa56b21c7 doc: Update bips 35, 37 and 111 status
fabfcb5d8 build: Treat -Wswitch as error when --enable-werror
e967cae8f Use switch on status in RpcWallet
ba1f128d6 Return error for ignored passphrase through disable private keys option
c6a827424 Have importprivkey use CWallet's ImportPrivKeys, ImportScripts, and ImportScriptPubKeys
fae7a5bef Log when an import is being skipped because we already have it
5c3c24cf9 test: remove redundant setup in addrman_tests
0c55d8b58 depends: qt: Patch to remove dep on libX11
222e6cc52 gitignore: Actually pay attention to depends patches
bead32e31 Add release notes for DEFAULT_BLOOM change
003a3c73c rpcwallet: document include_watchonly default for watchonly wallets
a50d9e6c0 rpcwallet: default include_watchonly to true for watchonly wallets
024ecd7e0 QA: Fix race condition in wallet_encryption test
4d94916f0 Get rid of PendingWalletTx class.
0c6054fc9 depends: Bump QT to LTS release 5.9.8
a52818cc5 net: Make poll in InterruptibleRecv only filter for POLLIN events. poll should block until there is data to be read or the timeout expires.
65f8da08d symbol-check: Disallow libX11-*.so.* shared libraries
924569914 depends: libXext isn't needed by anyone
689d3b4a0 build-aux: Remove check for x11-xcb
aa53cb7a2 depends: libX11: Make package headers-only
9a01ab04e depends: qt: Explicitly stop using Xlib/libX11
1ec30b8fb depends: xproto is only directly needed by libXau
a981e749e fix: tor: Call event_base_loopbreak from the event's callback
d6649d16b Use strong enum for WalletCreationStatus
3199610ad Place out args at the end for CreateWallet
fa4a605a4 Remove wallet settings from chainparams
1a6242526 qa: Add --filter option to test_runner.py
c7f6ce74d docs: Improve netbase comments
e142ee03e doc: describe how to pass wildcard names to test runner
6a7a70b8c test: enable passing wildcards with path to test runner
fa0d0ff6e Remove unused bits from the service flags enum
751549b52 contrib: guix: Additional clarifications re: substitutes
ae311bc03 Fix autostart filenames on Linux
cd3e947f5 contrib: guix: Various improvements.
8dff3e48a contrib: guix: Clarify SOURCE_DATE_EPOCH.
3e80ec3ea contrib: Add deterministic Guix builds.
ab28e31c9 Change ImportScriptPubKeys' internal to apply_label
fa6f402bd Call node->initError instead of InitError from GUI code
fad250224 init: Use InitError for all errors in bitcoind/qt
e10e1e8db Restrict lifetime of ReserveDestination to CWallet::CreateTransaction
d9ff862f2 CreateTransaction calls KeepDestination on ReserveDestination before success
96b6dd468 Remove redundant pre-TopUpKeypool checks
0d101a340 test: Add test for maxtxfee option
1aecdf206 Move wallet creation out of the createwallet rpc into its own function
8e7f93082 Add GetNewChangeDestination for getting new change Destinations
33d13edd2 Replace CReserveKey with ReserveDestinatoin
172213be5 Add GetNewDestination to CWallet to fetch new destinations
93ce4a0b6 Move WatchOnly stuff from SigningProvider to CWallet
8f5b81e6e Remove CCryptoKeyStore and move all of it's functionality into CWallet
37a79a4fc Move various SigningProviders to signingprovider.{cpp,h}
16f8096e9 Move KeyOriginInfo to its own header file
d9becff4e scripted-diff: rename CBasicKeyStore to FillableSigningProvider
a913e3f2f Move HaveKey static function from keystore to rpcwallet where it is used
50cede3f5 [mempool] Allow one extra single-ancestor transaction per package
c7797ec65 Remove CKeyStore and squash into CBasicKeyStore
fa8489a15 test: Add test for BIP30 duplicate tx
77770d95e test: Properly serialize BIP34 coinbase height
6285a318d Remove redundant WalletController::addWallet slot
0512f0521 depends: expat 2.2.7
84edfc72e Update doc and CI config
64fee4894 qt: Assert QMetaObject::invokeMethod result
f27bd96b5 gui: Fix missing qRegisterMetaType(WalletModel*)
e263a343d test: rpc_users: Make variable names more clear.
830dc2dd0 test: rpc_users: Also test rpcauth.py with specified password.
c73d87179 test: rpc_users: Add function for testing auth params.
604e2a997 test: rpc_users: Add function for auth'd requests.
682a1d0f2 refactoring: remove mapBlockIndex global
55d525ab9 refactoring: make pindexBestInvalid internal to validation.cpp
4ed55dfcd refactoring: add block_index_candidates arg to LoadBlockIndex
613c46fe9 refactoring: move block metadata structures into BlockManager
fa90fe644 refactor: Rename getWallets to getOpenWallets in WalletController
224eb9534 gui: Sort wallets in open wallet menu
7195fa792 test: Tool wallet test coverage for unexpected writes to wallet
3bf2b3a37 test: Split tool_wallet.py test into subtests
1eb13f09a test: Add log messages to test/functional/tool_wallet.py
b6fb617aa rpc: switch to using RPCHelpMan.Check()
c7a9fc234 Make the RPCHelpMan aware of JSONRPCRequest and add Check() helper
e8fabd925 build: prune dbus from depends
d00311035 Remove unused guard
84ad4d2b9 doc: Include static members in Doxygen
64b27c46e docs: add reduce-memory.md
976b034b1 [build]: use #if HAVE_SYSTEM instead of defined(HAVE_SYSTEM)
91509ffe2 bench: Benchmark blockToJSON
91cc18f60 [docs] Add release notes for PR 15427
5c5e32bbe rpc: migrate JSONRPCRequest functionality into request.cpp
48bcb2ac2 Disable other targets when enable-fuzz is set
1ac454a38 Enable ShellCheck rules
3b11420b3 [RPC] add new utxoupdatepsbt arguments to the CRPCCommand and CPRCConvertParam tables
1b699a508 Add HaveKey and HaveCScript to SigningProvider
88fd556a9 Use placeholder instead of key expiration date
a30bd0945 Add logpath description for getrpcinfo
7a0c22428 Suppress output in test_bitcoin for expected errors
bb326add9 Add ChaCha20Poly1305@Bitcoin AEAD benchmark
99aea045d Add ChaCha20Poly1305@Bitcoin tests
0ab8ba1ac rpc: fix RPC help requirements for getblocktemplate
faf8318c5 test: Split fundrawtx test into subtests
fa6fba3bc test: Make local symbols in run_test members
faf6caf4d test: Add tests for getblockchaininfo.softforks
3d60a03a7 bench: Move generated data to a dedicated translation unit
fab0c820f rpc: Clarify that block count means height excl genesis
177550101 wallet: Remove unreachable code in CreateTransaction
5c1b9714c wallet: Fix -maxtxfee check by moving it to CWallet::CreateTransaction
db26e8e22 Add antialiasing to traffic graph widget
8f250ab78 TEST: Replace hard-coded hex tx with classes
f53a70ce9 Improve documentation of memory_cleanse()
08c721dab [MSVC] Copy build output to src/ automatically after build
ca1160685 Fix: "Bitcoin Core" -> "The Bitcoin Core"
621463d7d Drop no-longer-relevant copyright holder name
01fafe55a Include Objective-C source files
90b5c4eef doc: Fix broken link in doc/build-osx.md
c83f0ac9b [MSVC] allow user level project customization
806b0052c [wallet] abort when attempting to fund a transaction above maxtxfee
fa815255c test: Add missing sync_all to wallet_balance test
819c5ddad [MSVC] Enable Fuzz for functional tests
faa1e0fb1 qt: test: Create at most one testing setup
fa64b947b util: No translation of `Bitcoin Core` in the copyright
fa69c3e6c util: Explain why the path is cached
0c78e49be tests: Switch one of the Travis jobs to an unsigned char environment (-funsigned-char)
9a841696c tests: Reduce compilation time and unneccessary recompiles by removing unused includes in tests
fab85208f qt: Run «make translate» in ./src/
fabe87d2c scripted-diff: Avoid passing PACKAGE_NAME for translation
fa5e9f157 build: Stop translating PACKAGE_NAME
c4606b843 Add Travis check for single parameter constructors not marked "explicit"
f466c4ce8 Add missing ECC_Stop(); in GUI rpcnestedtests.cpp
9824a0d6e Remove extra CBlockIndex declaration
d8bd97d5e Fix GCC 7.4.0 warning
af5d1b5f4 Add ChaCha20Poly1305@Bitcoin AEAD implementation
01174596e signrawtransactionwithkey: report error when missing redeemScript/witnessScript param
3b9bf0eb0 rpc: Allow shutdown while in generateblocks
63d0a079e build: dont compile rapidcheck with -Wall
fa89badf8 test: Require standard txs in regtest
71d0344cf docs: release note wording
3d2ff3791 wallet/rpc: use static help text
53c3c1ea9 wallet/rpc/getbalances: add entry for 'mine.used' balance in results
a2aabfb74 Use qInfo() if no error occurs
e47e79377 [MSVC]: Create the config.ini as part of bitcoind build
5a88ea7c6 doc: remove orphaned header in developer notes
fa0032615 ci: Run extended tests
099e4b9ad Set AA_EnableHighDpiScaling attribute early
fabc57e07 test: Log to debug.log in all tests
a49503402 Make and get the multisig redeemscript and destination in one function instead of two
dddd9270f net: Document what happens to getdata of unknonw type
fa4a04a5a test: use common setup in gui tests
fad3d2a62 test: Create data dir in BasicTestingSetup
eb832cd3b MSVC: Fix error in debug mode (Fix #16245)
e61de6306 Change ismine to take a CWallet instead of CKeyStore
7c611e200 Move ismine to wallet module
fab365835 [qa] Test that getdata requests work as expected
f724f3140 Make AbortNode() aware of MSG_NOPREFIX flag
96fd4ee02 Add MSG_NOPREFIX flag for user messages
f0641f274 Prepend the error/warning prefix for GUI messages
e91f0a7af doc: Remove travis badge from readme
4971be76a docs: add rapidcheck to vcpkg install list
750d1bc7d Cleaned up and consolidated msvc build files to allow faster builds and easier migration to vs2019.
fa410f67a test: Suppress false positive leak in secure_allocator<RNGState>
fa35c4239 test: Log output even if fuzzer failed
fa9b41916 test: Add test that mainnet requires standard txs
fa613ca0a chainparams: Remove unused fMineBlocksOnDemand
fa7dd88b7 test: Add test for unknown args
5224be5a3 gui: Fix open wallet menu initialization order
fa883ab35 net: Use mockable time for tx download
f8995807e tests: Make coins_tests/updatecoins_simulation_test deterministic
0e01e4522 devtools: Fetch and display ACKs at sign-off time in github-merge
c59e3a326 getrawtransaction: inform about blockhash argument when lookup fails
fa55dd89c doc: Add release notes for 14897 & 15834
88884c6f7 travis: Use absolute paths for cache dirs
fae9d54ab travis: Fix caching issues
dbd137a4e Improve build-osx formatting
fa4bc4ebf doc: Remove explicit mention of version from SECURITY.md
d9753383b addrdb: Remove temporary files created in SerializeFileDB. Fixes non-determinism in unit tests.
71fd628ad Add example 2nd arg to signrawtransactionwithkey
59cb722fd Update configure to reject unsafe miniUPnPc API ver
fa8f19519 Replace remaining fprintf with tfm::format manually
9218ce8d4 Failing functional tests stop lcov
d75e704ac Add log output during initial header sync
fac03ec43 scripted-diff: Replace fprintf with tfm::format
fac5ddfc5 doc: Rework section on ACK
fa72a64b9 tinyformat: Add doc to Bitcoin Core specific strprintf
e1a55690e Delete error-prone CScript constructor
067fba563 devtools: Always use unabbreviated commit IDs in github-merge.py
30ea931de depends: xtrans: Configure flags cleanup.
b748bf6f5 Fix spelling errors identified by codespell 1.15.0
f402012cc fixup: Fix prunning test
97f517dd8 Fix RPC/pruneblockchain returned prune height
993aa414d scripted-diff: gitian: Use REFERENCE_DATETIME directly.
8053e5cda Remove -mempoolreplacement to prevent needless block prop slowness.
53b7de629 Add test for dumping the private key imported from descriptor
2857bc4a6 Extend importmulti descriptor tests
fa2b083c3 [test] Add test to check mempool consistency in case of reorgs
fabeb1f61 validation: Add missing mempool locks
fa0c9dbf9 txpool: Make nTransactionsUpdated atomic
d7c054277 doc: update release process with SECURITY.md
e4e2b28cf doc: clarify support in SECURITY.md
8081927c3 scripts: add key for fanquake to trusted keys list
ab2190557 doc: Add release notes for 15993
02709e956 Align formatting with clang-format
91a1b8508 Use PACKAGE_NAME in UPnP description
9f76e45b9 Drop support of insecure miniUPnPc versions
f27309f55 Move DEFAULT_PEERBLOOMFILTERS from validation.h to net_processing.h
5efcb7728 Disable bloom filtering by default.
81a884bbd Import private keys from descriptor with importmulti if provided
a4d1bd1a2 Add private key derivation functions to descriptors
f874e14cd [build]: check std::system for -[alert|block|wallet]notify
cc3ad56ff [build] MSVC: set HAVE_SYSTEM for desktop apps
c1c91bb78 [build] detect std::system or ::wsystem
cac30a436 Clean up logic in memory_cleanse() for MSVC
67f4e9c52 Include core_io.h from core_read.cpp
0959d37e3 Don't use global (external) symbols for symbols that are used in only one translation unit
bc8863b81 depends: remove usage of TAR_OPTIONS
fdd7fa19a docs: create security policy
a47df1347 [qa] Test disconnect block failure -> shutdown
4433ed0f7 [validation] Crash if disconnecting a block fails
7860c98bd wallet: do not encrypt wallets with disabled private keys
c061be1e2 tests: Mark unit test blockfilter_index_initial_sync as non-deterministic
3ff1f2a31 build: remove export GZIP from gitian descriptors
6f7f141f7 Add riscv64 to outputs list in release-process.md
6e6494b3f qt: fix opening bitcoin.conf via Preferences on macOS; see #15409
d2ae6be80 gui: Set progressDialog to nullptr
0c62e3aa7 New regression testing for CVE-2018-17144, CVE-2012-2459, and CVE-2010-5137.
38bfca6bb Added comments referencing multiple CVEs in tests and production code.
eca976767 Make reasoning about dependencies easier by not including unused dependencies
58e291cfa Add test for GCC bug 90348
a352d2ae5 Don't GPG sign intermediate commits with github-merge tool
2d8ad2f99 gui: Enable console line edit on setClientModel
3c5254a82 Limit Python linting to files in the repo
75485ef09 gui: Enable open wallet menu on setWalletController
5ebc6b0eb bitcoind: update -avoidpartialspends description to account for auto-enable for avoid_reuse wallets
ada258f8c doc: release notes for avoid_reuse
27669551d wallet: enable avoid_partial_spends by default if avoid_reuse is set
8f2e208f7 test: add test for avoidreuse feature
0bdfbd34c wallet/rpc: add 'avoid_reuse' option to RPC commands
f904723e0 wallet/rpc: add setwalletflag RPC and MUTABLE_WALLET_FLAGS
8247a0da3 wallet: enable avoid_reuse feature
eec15662f wallet: avoid reuse flags
58928098c wallet: make IsWalletFlagSet() const
129a5bafd wallet: rename g_known_wallet_flags constant to KNOWN_WALLET_FLAGS
308b76732 Fix bug around transaction requests
f635a3ba1 Expire old entries from the in-flight tx map
faa2a47cd logging: Add threadsafety comments
0b282f9b0 Log early messages with -printtoconsole
412987430 Replace OpenDebugLog() with StartLogging()
0830d4045 docs: add release note for 14954
97dce7226 contrib: add curl as a required program in gitian-build.py
d595b4aae gui: move coin control OK to the right
0db94e55d wallet: Pass WalletBatch to CWallet::UnsetWalletFlag
6cb888b37 Apply the batch treatment to CWallet::SetAddressBook via ImportScriptPubKeys
8541cbea2 depends: libX*: --disable-malloc0returnsnull in conf
6154a09e0 Move some of ProcessImport into CWallet::Import*
0e752637a depends: libXext: Bump to 1.3.3 to fix _XEatDataWords
683b7d7a3 depends: Purge libtool archives
14209286d depends: Build secondary deps statically.
ae7faf20d Exceptions should be caught by reference, not by value.
36b0a2f2a Add vertical spacer
fb434159d Remove global symbols: Avoid using the global namespace if possible
c995c870a depends: add ability to skip building zeromq
00fade007 contrib: use newer config.guess & config.sub in install_db4.sh
0784af16e remove parameters -addresstype=legacy in rpc_rawtransaction test
480e3415d configure: Add flag for enabling thread_local.
fa013664a util: Add type safe GetTime
8afca323e doc: add bitcoin_config.h PACKAGE updates to release process
3ee28c506 build: bump bitcoin_config.h packages to v0.18
bb41e632c wallet_balance.py: Prevent edge cases
a65dafa8f replace tx hash with txid in test rawtransaction
df9e15f09 refactor: Improve CRollingBloomFilter::reset by using std::fill
d2dbc7da2 bench: Add benchmark for CRollingBloomFilter::reset
be4efb165 rpc: Mention getwalletinfo where a rescan is triggered
df0e97ccb RPC: Hint for importmulti in help output of importpubkey and importaddress
2c448d6bc parameterize hard coded numbers referring to miner conf window
d8bc47fde depends: switch to secure download of all dependencies
fadbc5d89 mempool: remove unused magic number from consistency check
e0eae1b4a Make --setup command independent
4de3c1567 depends: add patch to common dependencies
d5dc66e28 doc: fix/improve analyzepsbt in doc/psbt.md
78f9b5160 Do not show list for the only recipient.
ccb26cf34 Batch writes for importmulti
d6576e349 Have WalletBatch automatically flush every 1000 updates
366fe0be0 Add AddWatchOnlyWithDB, AddKeyOriginWithDB, AddCScriptWithDB functions
0f22a0cf2 Fix gitian-build.py --verify option
4c56a798c Set/unset USE_LXC, USE_VBOX, USE_DOCKER explicitly
cbbd98863 Fix Docker related issues for gitian-build.py
fa4733039 test: Speed up cache creation
fa6ad7a5e test: Bump MAX_NODES to 12
9f85e9cb3 scripted-diff: Rename LockAnnotation to LockAssertion
de9b5dbca Make sure the compile-time locking promises given via LockAnnotation:s hold also in practice at runtime (ifdef DEBUG_LOCKORDER)
3a809446b Move LockAnnotation to make it reflect the truth
cc2588579 Move LockAnnotation from threadsafety.h (imported code) to sync.h (our code)
8a6810d0d Add a 'logpath' field to getrpcinfo
fa499b5f0 rpc: bugfix: Properly use iswitness in converttopsbt
9402ef073 Remove temporary method assumeLocked(). Remove LockingStateImpl. Remove redundant cs_main locks.
593a8e8a2 wallet: Use chain.lock() instead of temporary chain.assumeLocked()
fa5c5cd14 rpc: Switch touched RPCs to IsValidNumArgs
f3b90f2e0 Run all lint scripts
403e677c9 refactoring: IsInitialBlockDownload -> CChainState
3ccbc376d refactoring: FlushStateToDisk -> CChainState
4d6688603 refactoring: introduce ChainstateActive()
d7c97edee move-only: make the CChainState interface public
faf38bc05 build with -fstack-reuse=none
fad0ce59e tests: Fail if RPC has been added without tests
8be3f3063 netaddress: Update CNetAddr for ORCHIDv2
01971da9b docs: Add productivity notes for "dummy rebases"
fa7e311e1 [doc] rpcwallet: Only fail rescan when blocks have been pruned
1609809fb validation: Hold cs_main when reading chainActive in RewindBlockIndex
e23809a05 [rpc] deriveaddresses: Correct descriptor checksum in RPCExamples
fa2b52af3 Disallow extended encoding for non-witness transactions (take 3)
662d1171d Add option to create an encrypted wallet
fa3c65114 [refactor] interfaces: Add missing LockAnnotation for cs_main
fa86c8aec init: Remove dead code in LoadChainTip
fa8ced32a doc: Mention blocksonly in reduce-traffic.md, unhide option
fa320de79 test: Add test for p2p_blocksonly
8794a4b3a QA: add test for HKDF HMAC_SHA256 L32
551d48941 Add HKDF HMAC_SHA256 L=32 implementations
26fe9b990 Add support for descriptors to utxoupdatepsbt
3135c1a2d Abstract out UpdatePSBTOutput from FillPSBT
fb90ec3c3 Abstract out EvalDescriptorStringOrObject from scantxoutset
eaf4f8873 Abstract out IsSegWitOutput from utxoupdatepsbt
bd63c1ed1 [docs] Update release-notes.md
96d32a7bc [docs] Update release-process.md
d20d75675 rpc: faster getblockstats using BlockUndo data
fa3872e7b test: Format predicate source as multiline on error
0b09a57ae Give WalletModel::UnlockContext move semantics
a407b6fdf [tests] Make random seed logged and settable
fa1dce732 net: Rename ::fRelayTxes to ::g_relay_txes
fa1d76671 tests: Make msg_block a witness block
fa193dc8e doc: Remove win32 from the release process
fa52eb55c test: Remove True argument to CBlock::serialize
c3ef63a52 Show loaded wallets as disabled in open menu instead of nothing
62d50ef30 Add LOCKS_EXCLUDED(cs_main) to LimitValidationInterfaceQueue(...) which does AssertLockNotHeld(cs_main)
a3592c91a .gitignore: Don't ignore depends patches
f6bb11fd3 Add test for ArgsManager::GetChainName
4b331159d Add unit test NextString, ForEachNoDup functions
05bfee345 util_SettingsMerge test cleanup
41ab2a892 fix static_assert for macro HAVE_THREAD_LOCAL
1b05dff08 Fix portability issue with pthreads
3cb9ce85d Document strenghtening
1d207bc46 Add hash strengthening to the RNG
c01c065b9 Do not construct out-of-bound pointers in SHA512/SHA1/RIPEMD160 code
aaaa57c2a scripted-diff: Bump copyright headers in wallet
faf372924 wallet: Only fail rescan when blocks have actually been pruned
2dfe27517 Add ChaCha20 bench
fa08c5cb9 test_runner: Move pruning back to extended
486c1eea8 refactoring: remove unused chainActive
631940aab scripted-diff: replace chainActive -> ::ChainActive()
a3a609079 refactoring: introduce unused ChainActive()
1b6e6fcfd rename: CChainState.chainActive -> m_chain
2bc2b8b49 Add ChaCha20 encryption option (XOR)
facfb4111 rpc: Deprecate getunconfirmedbalance and getwalletinfo balances
faf666f81 Remove Windows 32 bit build
7b29ec277 [tests] Comment for why logging config is set as command-line args.
00d110463 Install bitcoin-wallet manpage.
2620e24b8 [depends] boost: update to 1.70
0ff1c2a83 Separate reason for premature spends (coinbase/locktime)
54470e767 Assert validation reasons are contextually correct
2120c3152 [refactor] Update some comments in validation.cpp as we arent doing DoS there
12dbdd7a4 [refactor] Drop unused state.DoS(), state.GetDoS(), state.CorruptionPossible()
aa502b88d scripted-diff: Remove DoS calls to CValidationState
7721ad64f [refactor] Prep for scripted-diff by removing some \ns which annoy sed.
5e78c5734 Allow use of state.Invalid() for all reasons
6b34bc6b6 Fix handling of invalid headers
ef54b486d [refactor] Use Reasons directly instead of DoS codes
9ab2a0412 CorruptionPossible -> BLOCK_MUTATED
6e55b292b CorruptionPossible -> TX_WITNESS_MUTATED
7df16e70e LookupBlockIndex -> CACHED_INVALID
c8b0d2269 [refactor] Drop redundant nDoS, corruptionPossible, SetCorruptionPossible
34477ccd3 [refactor] Add useful-for-dos "reason" field to CValidationState
faea56400 rpc: Add lock annotations to block{,header}ToJSON
6a7f8777a Ban all peers for all block script failures
7b999103e Clean up banning levels
b8b4c8014 [refactor] drop IsInvalid(nDoSOut)
881872901 [refactor] Refactor misbehavior ban decisions to MaybePunishNode()
00e11e61c [refactor] rename stateDummy -> orphan_state
f34fa719c Drop obsolete sigops comment
999931cf8 rpc: Add getbalances RPC
da9f1ace5 doc: Add historical release notes for 0.18.0
fad13e925 rpcwallet: Make helper methods const on CWallet
beb42d71a Silence GCC 7 warning "control reaches end of non-void function" (-Wreturn-type) in psbt.cpp
fc929842c GUI: Move QRImageWidget to its own file-pair
b6c748f84 doc: Add release notes for 15730
d3e845836 rpc: Show scanning details in getwalletinfo
90e27abe3 wallet: Track current scanning progress
faede747b doc: Explain how to pass in non-fundamental types into functions
f1a77b0c5 [docs] Add doxygen comment for CReserveKey
37796b2dd [docs] Add doxygen comment for CKeyPool
fab00a5cb rpc: Serialize in getblock without cs_main
fa1c3591a rpc: Use IsValidNumArgs in getblock
fad40ec91 wallet: Use IsValidNumArgs in getwalletinfo rpc
77851ab68 GUI: Refactor actual QR code rendering into new QRImageWidget::setQR
ba534ccd5 [tests] log thread names by default in functional tests
fa79a783d test: Add reorg test to wallet_balance
fad03cd04 test: Check that wallet txs not in the mempool are untrusted
fa195315e test: Add getunconfirmedbalance test with conflicts
fa464e821 test: Add wallet_balance test for watchonly
fafb55e2c [qa] test_runner: Move feature_pruning to base tests
a0a222eec Replace deprecated Boost Filesystem function
8728a6678 [tests] fix block time in feature_pruning.py
4f65af97b Remove dead code for walletFile check
8722e54e5 threads: add thread names to deadlock debugging message
383b186c2 threads: prefix log messages with thread names
ddd95ccb8 tests: add threadutil tests
ae5f2b6a6 threads: introduce util/threadnames, refactor thread naming
78e407ad0 GetKeyBirthTimes should return key ids, not destinations
70946e7fe Replace CScriptID and CKeyID in CTxDestination with dedicated types
5d7ce74ab add missing debian contrib files to tarball
a34081b7c Remove unused OpenSSL includes to make it more clear where OpenSSL is used
70c1cf8c1 wallet: Avoid logging no_such_file_or_directory error
fac174e2d lint: Check that all wallet args are hidden
2ee811e69 wallet: Track scanning duration
765d5890b Bugfix: dummywallet: Add -ignorepartialspends to list of ignored wallet options
0f09eb779 dummywallet: Reformat ignored wallet options list
1b602f6fe remove extraneous scope
6ad372a97 wallet: log on rescan completion
e47dc4f68 Include bitcoin_config.h in release process
48ed65bcd Align MSVC build options with Linux build ones
188ca75e5 disable HAVE_THREAD_LOCAL on unreliable platforms
faebd8ca1 appveyor: Write @PACKAGE_NAME@ to config
5d2620527 doc: explain AcceptToMemoryPoolWorker's coins_to_uncache
e32e08407 Remove NOTFOUND transactions from in-flight data structures
23163b759 Add an explicit memory bound to m_tx_process_time
218697b64 Improve NOTFOUND comment
cc556e4a3 Add test for superfluous witness record in deserialization
25b078658 Fix missing input template by making minimal tx
9f9db3904 QA/mininode: Send all headers upfront in send_blocks_and_test to avoid sending an unconnected one
fcc443b63 QA: feature_filelock, interface_bitcoin_cli: Use PACKAGE_NAME in messages rather than hardcoding Bitcoin Core
a014373d8 QA: Avoid re-reading config.ini unnecessarily
e0bb27999 Doc: remove text about txes always relayed from -whitelist
201393f93 Align code example with clang-format
2ee756f04 Show recipient list as detailedText of QMessageBox
654e41954 Make SendConfirmationDialog fully fledged
64491cb37 doc: Fix -dustrelayfee= argument docs grammar
422677963 refactor: replace isPotentialtip/waitForNotifications by higher method
fa1c8e297 Resolve the qt/guiutil <-> qt/optionsmodal CD
c9e6e7ed7 wallet: add cachable amounts for caching credit/debit values
fa465e4da test: Add missing syncwithvalidationinterfacequeue to wallet_import_rescan
151f3e9cf Add settings merge test to prevent regresssions
710a7136f rpc: Speedup getaddressesbylabel
feed98e18 Ensure repos are up-to-date
edfe9438c Add WITH_LOCK macro: run code while locking a mutex
fadf7d139 wallet: Remove unused import checkpoints.h
b67978529 Add comments to Python ECDSA implementation
c634b1e20 [POLICY] Make sending to future native witness outputs standard
8c7b9324c Pure python EC
5c759c73b [wallet] Move maxTxFee to wallet
89e8df167 tests: fix outdate include in blockfilter_index_tests
fa90a89ee [test] combine_logs: append node stderr and stdout if it exists
942ff2054 contrib: gh-merge: Use pagination to fetch all review comments
fad7c3334 refactor: Add handleNotifications method to wallet
316b8b233 Filter IPv6 by ASN
99e88a372 rpc: Remove dependency on interfaces::Chain in SignTransaction
fab6a0a65 test: Add test that addmultisigaddress fails for watchonly addresses
fad81d870 test: Fixup creatmultisig documentation and whitespace
fa346fe88 doc: Remove upgrade note in release notes from EOL versions
81b2830b1 qt: update request payment button text and tab description
fa46ac312 bench: Add wallet_balance benchmarks
2d8ba4f86 remove out-of-date comment on pay-to-witness support
fa747498f doc: Clarify RPC versioning
ef2d515af [wallet] move-only: move CReserveKey to be next to CKeyPool
b4fd0ca9b Include cstring for sanity_test_fdelt if required
7fb886b1b [moveonly] Split glibc sanity_test_fdelt out
510c6532b Extract ParseDescriptorRange
17be9e0e3 gitignore: add *.plist (clang-check)
e7acf44bb gitignore: add *.dat
8dfbb5cf2 doc: mention creating application support bitcoin folder on OSX
8a33f4d63 GUI: Options: Remove the upper-bound limit from pruning size setting
4ddeb2f86 GUI: Options: Set the range of pruning size before loading its value
b4338c151 [rpc] Remove the addresses field from the getaddressinfo return object
fa2dfbf30 travis: Bump second timeout to 33 minutes, Add rationale
faf400077 scripted-diff: Bump copyright headers in test, bench
f4a230b62 docs: Clarify PR guidelines w/re documentation
fa821904b scripted-diff: Rename test_bitcoin to test/setup_common
140bbeec4 doc: describe onlynet option in doc/tor.md
184f8785f wallet_bumpfee.py: add test for change key preservation
d08becff8 add functional tests for feerate bumpfee with adding inputs
0ea47ba7b generalize bumpfee to add inputs when needed
fa8685d49 test: Use test_bitcoin setup in bench, Add test utils
666696b67 test: Have segwit always active in (Basic)TestingSetup
303372c41 docs: Improve netaddress comments
1b46a4889 [cleanup] Remove unused CReserveKey
9819ad6d0 [rpc] simplify generate RPC
78a2fb55c bitcoin-wallet tool: Drop libbitcoin_server.a dependency
b874747b5 Remove access to node globals from wallet-linked code
fbc6bb8e8 bitcoin-wallet tool: Drop MakeChain calls
7a9046e48 [wallet] Refactor CWalletTx::RelayWalletTransaction()
0b3a65455 Avoid redefine warning
4d074e84a [build] Move AnalyzePSBT from psbt.cpp to node/psbt.cpp
fd509bd1f [docs] Document src subdirectories and different libraries
9eaeb7fb8 [build] Move wallet load functions to wallet/load unit
91a25d1e7 [build] Add several util units
99517866b [build] Move several units into common libraries
050946554 [build] Move rpc rawtransaction util functions to rpc/rawtransaction_util.cpp
1acc61f87 [build] Move rpc utility methods to rpc/util
4a75c9d65 [build] Move policy settings to new src/policy/settings unit
fdf8888b6 [build] Move CheckTransaction from lib_server to lib_consensus
fafe5f0d0 test: Remove unused imports
fa16a0921 scripted-diff: use self.sync_* methods
faf77f9b9 test: Pass self to test_simple_bumpfee_succeeds
fa6dc7c5c test: Add BitcoinTestFramework::sync_* methods
fafe008cb test: Pass at most one node group to sync_all
833d98ae0 [wallet] Remove unnecessary Chain::Lock parameter from ResendWalletTransactions
52b760fc6 [wallet] Schedule tx rebroadcasts in wallet
f463cd107 [wallet] Keep track of the best block time in the wallet
90bce2457 qa: Prevent concurrency issues reading .cookie file
fa4680ed0 scripted-diff: Rename sync_blocks to send_blocks to avoid name collisions and confusion
fa078984c test: Properly log named args in authproxy
aa410c2b1 rpc: Validate maxfeerate with AmountFromValue
8ae6d020b doc: correct bitcoinconsensus_version in shared-libraries
beda0dae9 Upgrade gitian image before signing
fa49db7ea doc: Clarify sendrawtransaction::maxfeerate==0 help
c7efb652f blockfilter: Update BIP 158 test vectors.
19308c9e2 rpc: Add getblockfilter RPC method.
ff3510509 init: Add CLI option to enable block filter index.
accc8b8b1 index: Access functions for global block filter indexes.
2bc90e4e7 test: Unit test for block filter index reorg handling.
6bcf0998c test: Unit tests for block index filter.
b5e8200db index: Implement lookup methods on block filter index.
75a76e361 index: Implement block filter index with write operations.
2ad2338ef serialize: Serialization support for big-endian 32-bit ints.
ba6ff9a6f blockfilter: Functions to translate filter types to/from names.
62b7a4f09 index: Ensure block locator is not stale after chain reorg.
4368384f1 index: Allow atomic commits of index state to be extended.
b5d398772 Take non-importing keys into account for spendability warning in descriptor import
65d2f5d2d Update bips.md for 0.18.0
9b085f486 Mention new descriptor RPCs in descriptors.md
fa2056af1 travis: Properly cache and error on timeout
28d78de00 Mention new PSBT RPCs in psbt.md
4831aec5b Remove unused var
f4b7a2f20 rpc: getrpcinfo docs
faca95eff qa: Make swap_magic_bytes in p2p_invalid_messages atomic
41a46cbb3 Speed up deriveaddresses for large ranges
6e597001a Import all origin info in importmulti; even for non-importing pubkeys
9a93c91c8 Keep full pubkeys in FlatSigningProvider::origins
fa57411fc wallet: Get all balances in one call
fa26eb5e8 rpc: RPCHelpMan: Always push_name when outer type is an object
fa652b229 rpc: Add some doxygen comments to utils
124ea38e3 change default Python block serialization to witness
7813eb1db [qa] Overhaul p2p_compactblocks.py
ea1a2d879 [wallet] Remove ResendWalletTransactionsBefore
faf62d941 gui: Generate bech32 addresses by default
54245985f Squashed 'src/secp256k1/' changes from 0b70241850..b19c000063
4bf1b1cef qa: Check unconfirmed balance after loadwallet
2ebf650b2 wallet: Update transactions with current mempool after load
57908a739 interfaces: Add Chain::requestMempoolTransactions
f5162458c [rpc] remove resendwallettransactions RPC
6dd469a3b Disconnect BlockNotifyGenesisWait and RPCNotifyBlockChange properly. Remove no-op CClientUIInterface::[signal_name]_disconnect.
03d6d2381 [tests] make pruning test faster
1c29ac40f [tests] style fixes in feature_pruning.py
fa36a333e travis: Switch to ubuntu keyserver to avoid timeouts
0aef39d06 Silence "Test case [...] did not check any assertions" warnings when running "test_bitcoin --log_level=test_suite"
5fd73c869 Avoid repeated log messages in tests by connecting to signal handlers (ThreadSafeMessageBox, etc.) only once
e502c3c51 tests: Reduce noise level in test_bitcoin output
2a1408c3e Comment for seemingly duplicate LIBBITCOIN_SERVER
fa292adce doc: rpc-mining: Clarify error messages
7d01b5cf2 doc/dependencies: Fix typo libsrvg->librsvg
afc06fc86 rpc: Fix help text for signtransactionwithXXX
43ae1e96e release: Update the Windows Codesigning certificate
765c0b364 refactor: combine Chain::findFirstBlockWithTime/findFirstBlockWithTimeAndHeight
0440481c6 wallet: Move CWallet::ReacceptWalletTransactions locks to callers
529c1ae4a [tests] Add test for wallet rebroadcasts
3b64f852e QA: add test for CKey::Negate()
463921bb6 CKey: add method to negate the key
892eff05f Add documentation of struct PSBTAnalysis et al
ef22fe8c1 Refactor analyzepsbt for use outside RPC code
afd20a25f Move PSBT decoding functions from core_io to psbt.cpp
e9d5e9756 Poly1305: tolerate the intentional unsigned wraparound in poly1305.cpp
b34bf302f Add Poly1305 bench
03be7f48f Add Poly1305 implementation
c96878078 [docs] fix comment: the return value of findFork is _not_ an ancestor when the specified block is on the active chain
f6ee177f7 Remove unused AES-128 code
ac67582ff depends: latest rapidcheck, use INSTALL_ALL_EXTRAS
e16b6a718 rpc: Rename size to vsize in mempool related calls
5d35ae332 Handle the result of posix_fallocate system call
418d3230f Resolve the checkpoints <-> validation CD.
fa8548c5d net: Remove unused unsanitized user agent string CNode::strSubVer
8a2656702 torcontrol: Use the default/standard network port for Tor hidden services, even if the internal port is set differently
866c8058a Interrupt orphan processing after every transaction
6e051f3d3 [MOVEONLY] Move processing of orphan queue to ProcessOrphanTx
9453018fd Simplify orphan processing in preparation for interruptibility
5801dd628 docs: Add more tips to productivity.md
947f73ceb [docs] remove reference to signrawtransaction in the developer docs.
fae38c3dc doc: Fix all typos reported by codespell
fa1c07315 contrib: gh-merge: Include review comments in merge commit
7b6616b78 [rpc] Remove deprecated functionality message from validateaddress help
839c3f7c4 [rpc] Remove signrawtransaction warning
a10972bc0 gui: Defer removeAndDeleteWallet when no modal widget is active
effe81f75 Move g_is_mempool_loaded into CTxMemPool::m_is_loaded
bb8ae2c41 rpc: Expose g_is_mempool_loaded via getmempoolinfo and /rest/mempool/info.json
fa9058f0e doc: Add release notes for 15629
fa4a922d7 qa: Add test for missing testnet section in conf file
eb4c43e49 doc: documents how to calculate m_assumed_blockchain_size and m_assumed_chain_state_size on the release process.
fabfb7967 doc: Add release notes for 15596
0d9d2b385 Doc: update ACK description in CONTRIBUTING.md
bb6195e34 refactor: Remove unused function
fab0a68aa qa: mininode: Clearer error message on invalid magic bytes
fa1ad200d doc: Add release notes for 15620
dddd6f0f5 init: Throw error when network specific config is ignored
fa926ec24 rpc: Mention all output types in decodescript doc
fa11c036e refactor: Expose UndoReadFromDisk in header
fa96d7642 rpc: Uncouple rpcs from maxTxFee global
fa965e03c rpc: Use IsValidNumArgs over hardcoded size checks
fa5c511a8 refactor: Remove unused function
f7696e618 depends: qt: Don't hardcode pwd path
89bee1bdb depends: tar: Always extract as yourself
340ef5077 depends: Defer to Python detected by autoconf
054d01d0a Do not relay banned IP addresses
fa3caa166 rpc: decodescript use IsValidNumArgs over hardcoded check
faad33ff1 rpc: Clarify decodescript RPCResult doc
204c72945 Add Gitian key for droark
b8705a091 Set 'distro' explicitly
92f3e808f [docs] release note for disabling reject messages by default
faf369880 wallet: Improve log output for errors during load
fac1a0fe5 wallet: Remove unused GetLegacyBalance
faa3a246e scripted-diff: wallet: Rename pcoin to wtx
fa0f92af9 build: depends: Switch to python3
ef0019e05 Generate log entry when blocks messages are received unexpectedly.
6c0a6f73e wallet/rpc: add maxfeerate parameter to sendrawtransaction
7abd2e697 wallet/rpc: add maxfeerate parameter to testmempoolaccept
15c69b158 wallet: Log and ignore errors in ListWalletDir and IsBerkeleyBtree
fae5f874d rpc: Document that minconf is an ignored dummy value
335931df4 rpc: return a number for estimated_feerate in analyzepsbt
a4d0fd026 doc: correct analysepsbt rpc doc
c9963ae8b Fix overflow bug in analyzepsbt fee: CAmount instead of int
19a0c4af0 depends: native_protobuf: avoid system zlib
228e80608 Enable TLS in link to chris.beams.io
56f1d28d9 dead code: Remove dead option in HexStr conversion
3f6568d66 cli: remove duplicate wallet fields from -getinfo
890396cbd cli: replace testnet with chain and return network name as per BIP70.
6e1aaffa9 doc: remove release note fragments
5bd078876 doc: correct path in build-windows.md
e377846ff rest/rpc: Make mempoolinfo atomic
2d5cf4c41 rpc: Speedup getrawmempool when verbose=true
fa55104cb build: use full version string in setup.exe
32da92bdf gitian: Improve error handling
d358466de Remove remaining wallet accesses to node globals
e5efacb94 test: Refactor vout fetches in rpc_rawtransaction
2e5d48265 tests: Print remaining jobs in test_runner.py
276972cb9 wallet_bumpfee.py: Make sure coin selection produces change
b1b2b2389 Remove use of CCoinsViewMemPool::GetCoin in wallet code
4e4d9e9f8 Remove use of CRPCTable::appendCommand in wallet code
91868e628 Remove use CValidationInterface in wallet code
c7a725030 Document assumptions about C++ compiler
82c3b3f8e Remove sharp edge (uninitialized m_filter_type) when using the compiler-generated constructor for BlockFilter
21be609b4 In lint-format-strings, open files sequentially
1111f0718 test: .style.yapf: Set column_limit=160
fa2797808 test: Remove python3.4 workaround in feature_dbcrash
faebd2ef4 doc: Move wallet lock annotations to header
4d4e4c644 Suggested interfaces::Chain cleanups from #15288
fa58a2e33 contrib: Bump gitian descriptors for 0.19
fad76e7a4 doc: Remove pr release notes file in wrong dir
c7ea8d323 Add sizeof(size_t) assumptions
0580f86bb Fixup whitespace
47101bbb2 scripted-diff: Rename CPubKey and CKey::*_KEY_SIZE and COMPRESSED_*_KEY_SIZE
73aaf4ecf Make SignatureExtractorChecker private to its own file
519b0bc5d Make last disconnected block BLOCK_FAILED_VALID, even when aborted
fa3148aac doc: Remove ppa from linux build instructions
dddd1d05d .python-version: Specify full version 3.5.6
faa7cdf76 scripted-diff: Update copyright in ./test
fa0e65b77 scripted-diff: test: Remove brackets after assert
fab5a1e0f build: Require python 3.5
fa6bf21f5 scripted-diff: test: Use py3.5 bytes::hex() method
c9985c84f build: Bump version to 0.18.99
10c7642a5 docs: Update Transifex links
3eac2d57b docs: add "sections" info to example bitcoin.conf
20e6ea259 [addrman] Improve collision logging and address nits
f13ad1cae modify test for memory locked in case locking pages failed at some point
9586157c0 [rpc] deriveaddresses: add range to CRPCConvertParam
07cae5287 [wallet] remove unused GetScriptForMining
8f5d9431a Add regtests for HTTP status codes.
ca253f6eb Make deriveaddresses use stop/[start,stop] notation for ranges
fa852f0e8 test: Bump timeout on tests that timeout on windows
aeb7fbfd6 appveyor: Don't build debug libraries instead of "build and delete"
8d220417c Optimization: don't add txn back to mempool after 10 invalidates
9ce9c3700 Prevent callback overruns in InvalidateBlock and RewindBlockIndex
9bb32eb57 Release cs_main during InvalidateBlock iterations
1675b7ce5 Use stop/[start,stop] notation in importmulti desc range
456601163 Add support for stop/[start,stop] ranges to scantxoutset
6b9f45e81 Support ranges arguments in RPC help
7aa6a8aef Add ParseRange function to parse args of the form int/[int,int]
faa9b8819 fuzz: Link BasicTestingSetup (shared with unit tests)
fa85468cd test: Move main_tests to validation_tests
fa02b2224 test: Remove useless test_bitcoin_main.cpp
fab2daa02 test: Add missing LIBBITCOIN_ZMQ to test_test_bitcoin_LDADD
4a5e52cb5 msvc: Use a single file to specify the include path
f71fdda3b [addrman] Ensure collisions eventually get resolved
8bb3e4c48 [rpc] remove deprecated generate method
4991e3c81 [net] feeler connections can be made to outbound peers in same netgroup
fa466cbc5 doc: Update release process for snap package
fa45123f6 test: Add .style.yapf
2fa85ebd1 add rpc_misc.py, mv test getmemoryinfo, add test mallocinfo
4d834018e [addrman] Improve tried table collision logging
9999879f5 refactor: Use RPCHelpMan::IsValidNumArgs in getrawtransaction
fa9ff8fe2 doc: Remove misleading hint in getrawtransaction
fa2cdc9ac test: Simplify create_cache
fa3853513 bench: Benchmark MempoolToJSON
fa5dc3534 rpc: Pass mempool into MempoolToJSON
ef362f277 rpc/gui: Remove 'Unknown block versions being mined' warning
3f5ad622e Enable PID file creation on Windows - Add available WIN PID function - Consider WIN32 in each relevant case - Add new preprocessor definitions to suppress warning - Update error message for generic OS
9b1ff5c74 Call InvalidateBlock without cs_main held
241b2c74a Make RewindBlockIndex interruptible
880ce7d46 Call RewindBlockIndex without cs_main held
436f7d735 Release cs_main during RewindBlockIndex operation
1d342875c Merge the disconnection and erasing loops in RewindBlockIndex
32b2696ab Move erasure of non-active blocks to a separate loop in RewindBlockIndex
9d6dcc52c Abstract EraseBlockData out of RewindBlockIndex
6ad79cbd5 wallet: Use fsbridge::ifstream to fix Windows path issue
a720a9830 gui: Fix async open wallet call order
04cca3309 Style cleanup.
4c01e4e15 flatfile: Unit tests for FlatFileSeq methods.
65a489e93 scripted-diff: Rename CBlockDiskPos to FlatFilePos.
d6d8a78f2 Move CDiskBlockPos from chain to flatfile.
e0380933e validation: Refactor file flush logic into FlatFileSeq.
992404b31 validation: Refactor block file pre-allocation into FlatFileSeq.
e2d2abb99 validation: Refactor OpenDiskFile into method on FlatFileSeq.
9183d6ef6 validation: Extract basic block file logic into FlatFileSeq class.
62e7addb6 util: Move CheckDiskSpace to util.
f7efd87c8 Change brace formatting
a1df1b48a Remove use of IsInitialBlockDownload in wallet code
1106a6fde Remove use of uiInterface.LoadWallet in wallet code
318f41fb2 circular-dependencies: Avoid treating some .h/.cpp files as a unit
d02b34c8a Remove use of AcceptToMemoryPool in wallet code
e2c8ba9f6 Remove uses of InitMessage/Warning/Error in wallet code
c5e59a96a Remove uses of GetAdjustedTime in wallet code
6d6bcc77c Remove use of g_connman / PushInventory in wallet code
00dfb2a44 Remove uses of g_connman in wallet code
cc3836e8f Remove uses of fPruneMode in wallet code
cc02c796d Remove uses of fee globals in wallet code
1fb0a4a04 Remove use of CalculateMemPoolAncestors in wallet code
cd32160af Remove use of GetTransactionAncestry in wallet code
291276f7f Remove use of GetCountWithDescendants in wallet code
bdc662868 Remove use of IsRBFOptIn in wallet code
80f52a226 Remove uses of CheckFinalTx in wallet code
28c86de3b gui: Drop unused return values in WalletFrame
8b8d8eeae Remove travis_wait from lint script
53b310390 refactor: Drop redundant wallet reference
c119ba3c9 [doc] clarify getdata limit after #14897
fa4ce7038 rpc: Actually throw help when passed invalid number of params
fa05626ca rpc: Add RPCHelpMan::IsValidNumArgs()
6d44c5ebf depends: Add commands for each package for each stage
80f0e05b7 depends: Preprocessing doesn't care about deps
fa25210d6 qa: Fix wallet_txn_doublespend issue
1111aecbb qa: Always refresh stale cache to be out of ibd
ff7f31e07 [doc] productivity: more advanced git range-diff
3a21905a4 [doc] devtools: mention clang-format dependency
fab0d8580 qa: Remove mocktime unless required
bf1209319 [doc] productivity: fix broken link
e3e1a5631 [test] functional: set cwd of nodes to tmpdir
1a062b85f tests: remove byte.hex() to keep compatibility
1a7ba84e1 Fix lack of warning of unrecognized section names
39e20fc54 Add missing #include.
8e4b4f683 Address test todos by removing -txindex to nodes. Originally added when updating getrawtransaction to stop searching unspent utxos.
0bedcbafd Use a single wallet batch for UpgradeKeyMetadata
3ec56bea0 appveyor: Remove unused NDEBUG removal
8a1f0a38d scripted-diff: Remove NDEBUG pre-define
a083f75ba Update assumevalid, minimumchainwork, and getchaintxstats to height 563378.
a607c9ae4 [Doc] importmulti: add missing description of keypool option
d3661a3fd [Doc] add missing newline to witnessScript in listunspent help
540729ef4 Implement analyzepsbt RPC and tests
fd637be8d Add checksums to descriptors.md
be62903c4 Make descriptor checksums mandatory in deriveaddresses and importmulti
b52cb6368 Add getdescriptorinfo to compute checksum
3b40bff98 Descriptor checksum
77542cf2a Move PSBT UTXO fetching to a separate method
cb40b3abd Figure out what is missing during signing
08f749c91 Implement joinpsbts RPC and tests
7344a7b99 Implement utxoupdatepsbt RPC and tests
901baf2c9 doc: update FreeBSD build guide for 12.0
543ef7d62 tests: Add missing cs_main locks required when accessing pcoinsdbview, pcoinsTip or pblocktree
43206239a tests: Add script checking for deterministic line coverage
f4b00b70e Import public keys in order
9e1551b9c Test pubkey import to keypool
513719c5f Add option to importmulti add an imported pubkey to the keypool
9b81fd19a Fetch keys from keypool when private keys are disabled
99cccb900 Add a method to add a pubkey to the keypool
cb3511b9d Add release notes for importing key origin info change
4c75a69f3 Test importing descriptors with key origin information
02d6586d7 Import KeyOriginData when importing descriptors
3d235dff5 Implement a function to add KeyOriginInfo to a wallet
eab63bc26 Store key origin info in key metadata
3782075a5 Move all PID file stuff to init.cpp
fa535af92 fuzz: test_runner: Better error message when built with afl
eeeee58bc travis: Combine --disable-bip70 into existing job
fab6b07c1 test: txindex: interrupt threadGroup before calling destructor
345bff601 Remove hdmasterkeyid
bac8c676a Add a method to CWallet to write just CKeyMetadata
e7652d3f6 Add WriteHDKeypath function and move *HDKeypath to util/bip32.{h,cpp}
c45415f73 Refactor keymetadata writing to a separate method
fa9b60c84 Remove unused TransactionError constants
88a91e2c9 [build] AppVeyor: clean cache when build configuration changes
4a43eb8cd [build] Makefile.am: add rule for src/bitcoin-wallet
7cee85807 Add compile time verification of assumptions we're currently making implicitly/tacitly
8c3fdd3a6 fixes m_assumed_blockchain_size variables values:
3c6ef0393 msvc: Fix silent merge conflict between #13926 and #14372 part II
fd46c4c00 Bump minimum Qt version to 5.5.1
fa7ca8ef5 qa: Add test/fuzz/test_runner.py
fab15ff70 fuzz: Script validation flags
fabcfa5f0 fuzz: Move deserialize tests to test/fuzz/deserialize.cpp
6aaa0abc1 Remove manual byte editing in wallet_tx_clone func test
6ca836ab3 Add release note for listunspent P2WSH change
928beae00 Add test for P2SH-P2WSH in signrawtransactionwithkey and listunspent
314784a60 Make listunspent and signrawtransaction RPCs support witnessScript
a4b92e467 Log full paths for wallets
94086fb59 gui: Add close wallet action
f77ba3431 gui: Add closeWallet to WalletController
f6122abe0 interfaces: Add remove to Wallet
8c9b8a366 Replace script name with special parameter
5039e4b61 Remove unnecessary const_cast
318b1f7af [wallet] Close bdb when flushing wallet.
fa178a638 [rpc] mining: Omit uninitialized currentblockweight, currentblocktx
dc3b2ccb5 tests: Added missing tests for RPC wallet errors
102faad81 Factor out combine / finalize / extract PSBT helpers
78b9893d0 Remove op== on PSBTs; check compatibility in Merge
bd0dbe876 Switch away from exceptions in refactored tx code
15b31032a appveyor: Remove outdated libraries
ae892adce tests: accept unicode characters on Windows
c6c3d42a7 Move PSBT definitions and code to separate files
81cd95884 Factor BroadcastTransaction out of sendrawtransaction
c734aaa15 Split DecodePSBT into Base64 and Raw versions
162ffefd2 Add pf_invalid arg to std::string DecodeBase{32,64}
84f53154e Travis: Add test without BIP70 (but still full wallet + tests)
113f0004b GUI: If BIP70 is disabled, give a proper error when trying to open a payment request file
9975282fa GUI: If BIP70 is disabled, attempt to fall back to BIP21 parsing
fa0ad4e7c RPCHelpMan: Check default values are given at compile-time
1a0139cba trivial: correct parameter name in comments
7687f7873 [wallet] Support creating a blank wallet
3407b446c gui: Uppercase bech32 addresses in qr codes
50e647210 Move ParseConfirmTarget from rpc/mining to rpc/util
dfbf117bb Move maxTxFee initialization to init.cpp
fae8b8bb1 qa: Add tool-prefix to functional test readme
a94e47092 A few textual improvements
faf3d2272 test_runner: Remove unused --force option
d855e4cac Avoid triggering undefined behaviour (std::memset(nullptr, 0, 0)) if an invalid string is passed to DecodeSecret(...)
faa46475d wallet: Add lock annotation for mapAddressBook
1cff3d6cb Change in transaction pull scheduling to prevent InvBlock-related attacks
a99999cc0 util: Add SetupHelpOptions()
fa1e28154 doc: Add missing wallet-tool manpages
fa0fe3b8a contrib: Add missing wallet tool to gen-manpages.sh
7fdb92e53 Update linearize-hashes.py
6440e6137 qa: Drop RPC connection if --usecli
fa1db331d travis: Only exit early if compilation took longer than 30 min
5b76c314d doc: Add separate productivity notes document
b985e9c85 Add release notes for importmulti descriptor support
fbb5e935e Add test for importing via descriptor
9f48053d8 [wallet] Allow descriptor imports with importmulti
d2b381cc9 [wallet] Refactor ProcessImport() to call ProcessImportLegacy()
4cac0ddd2 [wallet] Add ProcessImportLegacy()
a1b25e12a [wallet] Refactor ProcessImport()
30d0f7be6 rpc: Fix for segfault if combinepsbt called with empty inputs
364cff1ca Fix issue #9683 "gui, wallet: random abort (segmentation fault) running master/HEAD".
e1b6436aa Fix build after pr 15266 merged
d3bf3b930 qa: Test .walletlock file is closed
87aa0b48a netaddress: Make IPv4 loopback comment more descriptive
6180b5f32 netaddress: Fix indentation in IsLocal
107623c26 net: Correct comparison of addr count
47012391e [Docs] Small updates to getrawtransaction description
851380ce1 remove deprecated mentions of signrawtransaction from fundraw help
df8a7d340 qt: Pre-0.18 split-off translations update
bad1716c6 init: Modify docs and add release note for 12255
d067e81dc msvc: add rapid check property tests
1951ea434 gui: Show indeterminate progress dialog while opening walllet
8847cdaaa gui: Add OpenWalletActivity
2f8b8f479 wallet: Close wallet env lock file
8602a1e6a wallet: Close dbenv error file db.log
4c8982a88 interfaces: Avoid interface instance if wallet is null
be82dea23 gui: Add thread to run background activity in WalletController
6c49a55b4 gui: Add Open Wallet menu
32a8c6abf gui: Add openWallet and getWalletsAvailableToOpen to WalletController
ab288b4e5 interfaces: Add loadWallet to Node
17abc0fd5 wallet: Factor out LoadWallet
1435fabc1 Use RdSeed when available, and reduce RdRand load
0dd6a8c12 Check m_internals in UnregisterValidationInterface
fd6d499bd gui: Fix m_node.startShutdown() order
07b9aadcf gui: Expose BitcoinGUI::unsubscribeFromCoreSignals
60e190ceb gui: Fix WalletController deletion
fa1d40000 cirrus ci: Inital config
86b47fa74 speed up Unserialize_impl for prevector
ef0b01217 tests: Make updatecoins_simulation_test deterministic
fac3a054c test: Fix race in p2p_invalid_messages
fa6b7b9cf travis: Revert "Run extended tests once daily"
fae169c95 test: Make bloom tests deterministic
561e375c7 Make PID file creating errors fatal
745a2ace1 Improve PID file removing errors logging
bef8fdd6e msvc: Fix silent merge conflict between #13926 and #14372
aebafd0ed Rename Chain getLocator -> getTipLocator
2c1fbaa77 Drop redundant get_value_or
84adb206f Fix ScanForWalletTransactions start_block comment
712d35bc5 wallet: Add missing cs_db lock
2efa66b46 Document rescanblockchain returned stop_height being null
fa2a69fcb doc: Add cs_main lock annotations for mapBlockIndex
facaae4cc travis: Save cache when compilation took very long
db2d09323 Add suggested rescanblockchain comments
a8d645c93 Update ScanForWalletTransactions result comment
95a812b59 Rename ScanResult stop_block field
5d35d4384 Update release notes through to cb35f1d3
9ad5ca17d Release notes: integrate detached & rm backports
119d360aa travis: Document whether functional tests are run in the job name
64f28545e Revert "travis: Compile trusty with depends for now"
267eac00f Prefer boost::optional#get_value_or over #value_or
1971f5ba0 Piecewise construct to avoid invalid construction
e6c58d3b0 Do not import private keys to wallets with private keys disabled
b5c5021b6 Refactor importwallet to extract data from the file and then import
a786c3b30 Slight tweak to the verify-commits script directions
2e023419c tests: unify RPC argument to cli argument conversion and handle dicts and lists
faee6c9ca travis: Remove unused FUNCTIONAL_TESTS_CONFIG
82dcacb82 msvc: build leveldb locally
52091066b msvc: build secp256k1 locally
3617f1173 Fix assertion in CKey::SignCompact
f96dbd1bb gdb attaching to process during tests has non-sudo solution
7cb1a1401 Explain that unused mempool memory is added to -dbcache
3c3e31c3a [tests] Add wallet-tool test
49d2374ac [tools] Add wallet inspection and modification tool
2d483142a Remove 'boost::optional'-related gcc warnings
0890339fb build: prefer python3.4 even if newer versions are present on the system
6f6514a08 Correct units for "-dbcache" and "-prune"
2ca632e5b test: Build fuzz targets into seperate executables
77777c562 log: Construct global logger on first use
fa5e6ef55 wallet: Fixup rescanblockchain result doc
595283851 [rpc] util: add deriveaddresses method
2e68ffaf2 [doc] descriptor: explain GetPubKey() usage with cached public key
229026975 scripted-diff: rename DescriptorImpl m_script_arg to m_subdescriptor_arg
e1c27da30 doc: correct logging rpc return type and example
ec30a79f1 Fix UB with bench on genesis block
fa5ce3f10 travis: Compile trusty with depends for now
fa83999d9 travis: Compile once on trusty
a6cd50dec Add gitian PGP key for hebasto
fa5f890ae rpc: Compile on GCC4.8
fa5278a41 qa: Use wallet to retrieve raw transactions
04da9f483 [RPC] Update getrawtransaction interface
4f2e6c8b8 Squashed 'src/leveldb/' changes from 524b7e36a8..f545dfabff
0164b0f5c build: Remove WINVER pre define in Makefile.leveldb.inlcude
fab4bed68 [test] fuzz: make test_one_input return void
70e7cee96 Trivial: Doxygenize existing CBufferedFile and VectorReader comments
faa1522e5 RPCHelpMan: Pass through Result and Examples
11e0fd8d6 Descriptor expansions only need pubkey entries for PKH/WPKH
fa2198328 qa: Style-only fixes in touched files
593ba696f Add warning messages to the debug window
ad5e5a105 Scripts and tools: Drop no-longer-relevant copyright holder names
2434ab5c2 Scripts and tools: Fix devtools/copyright_header.py to always honor exclusions
b09dab0f2 Prevent mutex lock fail even if --enable-debug
9431e1b91 Trivial: fixup a few doxygen comments
f618c58b7 Docs: Update python docs to reflect that wildcard imports are disallowed
d0522ec94 Drop defunct Windows compat fixes
fa3745bda qa: Add tests for invalid message headers
1f77f6754 tests: unify RPC argument to cli argument conversion and handle dicts and lists
65bc38d1c [doc] add notes on release notes
b651ef7e1 submitheader: more directly test missing prev block header
1e7f74174 remove some magic mining constants in functional tests
5a5ea93e8 Doc: add information about security to the JSON-RPC doc
5c04814b2 Move non-linux source tarball to bitcoin-binaries
2bc4c3eaf Notify the GUI that the keypool has changed to set the receive button
55e05a82c Added some factors that affect the dependency list
d8a299206 windows: Call SetProcessDEPPolicy directly
1bd9ffdd4 windows: Set _WIN32_WINNT to 0x0601 (Windows 7)
0297be61a Allow connections from misbehavior banned peers.
a36d97d86 Default -whitelistforcerelay to off
13782b8ba docs: add perf section to developer docs
58180b5fd tests: add utility to easily profile node performance with perf
da6011826 Fix macOS launch-at-startup memory issue
516437a1b Qt: remove macOS launch-at-startup option when compiled with > macOS 10.11
14bcdbe09 Check for more than private keys disabled to show receive button
42ff30ec6 [Docs] add short documentation for /rest/blockhashbyheight
579d418f7 [QA] add rest tests for /rest/blockhashbyheight/<HEIGHT>.<FORMAT>
eb9ef04c4 REST: add "blockhashbyheight" call, fetch blockhash by height
f24ed6d39 Delete README_osx.md and move its contents into build-osx.md
948d8f4f1 lint: Enable python linters via an array
85f0ca95f Remove errant past from walletcreatefundedpsbt for nLocktime replaceability
1ed425ea1 gui: Fix window title update
eea02be70 Add locking annotation for vNodes. vNodes is guarded by cs_vNodes.
f1dc6932e zmq: log outbound message high water mark when reusing socket
fdf82ba18 Update all subprocess.check_output functions in CI scripts to be Python 3.4 compatible
3046e5fc0 Update zmq to 4.3.1
a2a6c8f45 rpc: remove duplicate solvable field from getaddressinfo
ccc27bdcd doc: Clarify -blocksdir usage
0dd9bdefa gui: Refactor to use WalletController
8fa271f08 gui: Add WalletController
cefb399e2 gui: Use AutoConnection for WalletModel::unload signal
5b4283cb8 Add comment describing fDisconnect behavior
31097b7b0 docs: Spelling error fix on fuzzing.md
223de8d94 Document RNG design in random.h
f2e60ca98 Use secure allocator for RNG state
cddb31bb0 Encapsulate RNGState better
152146e78 DRY: Implement GetRand using FastRandomContext::randrange
a1f252eda Sprinkle some sweet noexcepts over the RNG code
4ea8e5083 Remove hwrand_initialized.
9d7032e4f Switch all RNG code to the built-in PRNG.
16e40a8b5 Integrate util/system's CInit into RNGState
2ccc3d3aa Abstract out seeding/extracting entropy into RNGState::MixExtract
aae8b9bf0 Add thread safety annotations to RNG state
d3f54d1c8 Rename some hardware RNG related functions
05fde14e3 Automatically initialize RNG on first use.
2d1cc5093 Don't log RandAddSeedPerfmon details
4e81438f6 build: Drop macports support
18185b57c scripted-diff: batch-recase BanMan variables
c2e04d37f banman: Add, use CBanEntry ctor that takes ban reason
1ffa4ce27 banman: reformulate nBanUtil calculation
daae598fe banman: add thread annotations and mark members const where possible
84fc3fbd0 scripted-diff: batch-rename BanMan members
af3503d90 net: move BanMan to its own files
d0469b2e9 banman: pass in default ban time as a parameter
2e56702ec banman: pass the banfile path in
4c0d961eb banman: create and split out banman
83c1ea2e5 net: split up addresses/ban dumps in preparation for moving them
136bd7926 tests: remove member connman/peerLogic in TestingSetup
7cc2b9f67 net: Break disconnecting out of Ban()
a51754179 Remove no longer needed shellcheck suppressions
0b7196eca Fix warnings introduced in shellcheck v0.6.0
07a53dce9 Remove repeated suppression. Fix indentation.
638e53b47 Pin shellcheck version to v0.6.0
7cf994d5c qa: Improve tests of /rest/headers and /rest/block
0825b86b2 doc: /rest/block responds with 404 if block does not exist
4412a59bf qa: Remove race between connecting and shutdown on separate connections
979bc0c20 Improve "help-console" message
be625f7c5 doc: Explain empty result of /rest/headers
b745e149c [docs] Expand help text for importmulti changes
b9dafe7d9 Fix remaining compiler warnings (MSVC). Move disabling of specific warnings from /nowarn to project file.
04215eb32 [doc] explain what .python-version does
44de1561a Remove remaining chainActive references from CWallet
db21f0264 Convert CWallet::ScanForWalletTransactions and SyncTransaction to the new Chain apis
2ffb07929 Add findFork and findBlock to the Chain interface
d93c4c1d6 Add time methods to the Chain interface
700c42b85 Add height, depth, and hash methods to the Chain interface
fe7048b39 gui: Show current wallet name in window title
8a7926112 gui: Keep network style in BitcoinGUI
f411c8b35 gui: Remove unused return type in some BitcoinGUI methods
cbd9091ed refactor/lint: Add ignored suggestions to an array
645e905c3 doc: Add release notes for unloadwallet change to synchronous call
c37851de5 rpc: Make unloadwallet wait for complete wallet unload
7c572c488 Add workaround for QProgressDialog bug on macOS
ca91661ad Fix wallet selector size adjustment
f1bd219a5 contrib: Allow use of github API authentication in github-merge
a4c5bbfcd contrib: Add support for http[s] URLs in github-merge
059a3cffd contrib: Detailed reporting for http errors in github-merge
f652f85d0 qa: Ignore shellcheck warning SC2236
d6b076c17 Drop IsLimited in favor of IsReachable
6a57ca91d Use FRC::randbytes instead of reading >32 bytes from RNG
3a0e76fc1 Replace remaining 0 with nullptr in Qt code
9096276e0 Don't use zero as null pointer constant (-Wzero-as-null-pointer-constant)
8ac34140d configure: bitcoin-tx doesn't need libevent, so don't pull it in
fac2f5eca Use C++11 default member initializers
332b3dd7c util: Make ToLower and ToUpper take a char
edb5bb350 util: remove unused [U](BEGIN|END) macros
7fa238c70 Replace use of BEGIN and END macros on uint256
24313fbf7 Remove redundant stopExecutor() signal
1c0e0a5e3 Remove redundant stopThread() signal
03b8596dd Add checksum in gitian build scripts for ossl
3537c8345 Do not deselect peer when switching away from tab
b0037c519 Improve Peers tab layout
ef5ebc6d8 docs: Clarifying testing instructions
ba8c8b222 Fail if either disk space check fails
8cff83124 Error if rpcpassword contains hash in conf sections
5282608e9 docs: Add FreeBSD build notes link to doc/README.md
369d7b392 Fix download link
ca126d490 Fix out-of-bounds write in case of failing mmap(...) in PosixLockedPageAllocator::AllocateLocked
11fdfcf7f Show addresses for "SendToSelf" transactions
fad058a79 build: Allow to configure --with-sanitizers=fuzzer
fa2510d5c Use C++11 default member initializers
fac4e731a test: Run invalid_txs.InputMissing test in feature_block
c98f8866f Fix the build problem in libbitcoin_server
b0c7b54d0 init: Use systemd automatic directory creation
2d5f1ea2e [tests] move wallet util functions to wallet_util.py
6be64ef02 [tests] tidy up wallet_importmulti.py
e8db6b804 Qt: Fix update headers-count
7bb45e4b7 Qt: update header count regardless of update delay
a88640e12 Fix minimized window bug on Linux
91b0c5b09 qt: Use WalletModel* instead of wallet name in console window
b2ce86c3a qt: Use WalletModel* instead of wallet name in main window
d2a1adffe qt: Factor out WalletModel::getDisplayName()
f12e1d0b5 rpc: Avoid permanent cs_main lock in getblockheader
7e4bd1978 Add BitcoinApplication & RPCConsole tests
ca20b65cc Move BitcoinApplication to header so it can be tested
6b25f29a9 Use std::vector API for construction of test data.
75778a072 test: Correct ineffectual WithOrVersion from transactions_tests
1db71d4a2 Add names to Travis jobs
fab3f1467 rpc: Document bytessent_per_msg and bytesrecv_per_msg
cc341adbb gui: Fix for Incorrect application name when passing -regtest
f3d7d75e4 Release notes: integrate detached release notes
97fbe6794 Release notes: update notes through fb52d0684
fb3ce7580 Don't label transactions "Open" while catching up
a0ac15459 doc: Add getrpcinfo release notes
251a91c1b qa: Add tests for getrpcinfo
d0730f5ce rpc: Add getrpcinfo command
068a8fc05 rpc: Track active commands
de23739b2 test: Fix rpc_net.py "pong" race condition
fa38d3df6 [rpc] Correct reconsiderblock help text, add test
b60ac00d2 Botbot.me (IRC logs) not available anymore
ae5594d51 [Trivial] Update license year range to 2019
fab17e827 test: Add basic test for BIP34
1a49a0e31 Bump manpages
06ba77973 Update copyright headers to 2018
6dc4593db IsReachable is the inverse of IsLimited (DRY). Includes unit tests
b6f0db69a Increase timeout of featuer_assumevalid test to fix flaky tests
aa9aca85f If tests are ran with (ASan + LSan), Docker needs access to ptrace
a3b8b4366 Update Travis base OS to Xenial
fa48baf23 wallet: Avoid leaking locktime fingerprint when anti-fee-sniping
79f0a3f1f Get more info about GUI-related issue on Linux
453803adc [test] wallet_txn_clone: Correctly clone txin sequence
488563ea1 doc: Add historical release notes for 0.17.1
4999992c3 whitespace: Split ~300 char line into multiple ones
fa71b3816 scripted-diff: Rename rpc_timewait to rpc_timeout
fa3e5786d scripted-diff: Remove unused 'split' parameter to setup_network
fa5e37336 validation: Add cs_main locking annotations
e4ed8ce2c blockfilter: Remove default clause in switch statement.
f33efa8ec GUI: Restore RPC Console to non-wallet tray icon menu
fabcd645b test: Avoid racy test p2p_timeouts
72b63bc90 Fix minor grammar error in doc
698d0f882 Remove misplaced Q_UNUSED and others enhancements
fa5c346c5 doc: Add comment to cs_main and mempool::cs
fa05d52af test: Bump timeout to run tests in travis thread sanitizer
c8d9d9093 Fix broken notificator on GNOME
6c10037f7 rpc: Fix data race (UB) in InterruptRPC()
eaf4070e3 Add suppression for InterruptRPC (fRPCRunning) data race
523785042 Modify build instructions to work with Command Prompt as well as PowerShell; other minor changes
b301950df  Made expicit constructor CTransaction(const CMutableTransaction &tx).
faf29dd01  Minimal changes to comply with explicit CMutableTransaction -> CTranaction conversion.
8b9171ccf wallet: Initialize stop_block to nullptr in CWallet::ScanForWalletTransactions
fafe941bd test: Add missing validation locks
fa61202ca test: Add comment to g_insecure_rand_ctx
84104c781 clarifying getrawtransaction[time] get help text
fa0d3c440 test: Undo thread_local g_insecure_rand_ctx
3019ba28d Making supported operating systems more clear
5e5138a72 travis: Use trap and set -e errtrace
069752b72 build: Enable functional tests in the ThreadSanitizer (TSan) build job
3e21b690d [Qt] Restore < Qt5.6 compatibility for addAction
4d454dcb6 Refactoring with QString::toNSString
de7266fc3 [net] add dnsseed.emzy.de to DNS seeds
d98a29ec4 Fix cuckoocache_tests TSAN failure introduced in #14935. Fixes #14967.
b74a52192 fix testmempoolaccept CLI syntax
faee59103 test: Fix race in mempool_accept
fac455846 sync: Add RecursiveMutex type alias
bf4383277 rpc: Remove unused PreCommand signal
57281199b lint/format-strings: Correctly exclude escaped percent symbols
7257353b9 Select orphan transaction uniformly for eviction
fa4b8c90d test: add_nodes can only be called once after set_test_params
faead93c6 test: Make g_insecure_rand_ctx thread_local
faa831102 Revert "tests: Support calling add_nodes more than once"
4de11a368 Remove Python 2 import workarounds
82687b503 docs: add NSIS setup/install steps to windows docs
fc91c1f28 Revert "travis: Save cache on build error"
c84c2b8c9 tests: Test for expected return values when calling functions returning a success code
be5ca825a doc: update NetBSD build instructions for 8.0
eacff95de Add release notes
bdacbda25 Overhaul importmulti logic
e414486d5 Do not permit copying FastRandomContexts
022cf47dd Simplify testing RNG code
fd3e7973f Make unit tests use the insecure_rand_ctx exclusively
8d98d4261 Bugfix: randbytes should seed when needed (non reachable issue)
273d02580 Use a FastRandomContext in LimitOrphanTxSize
3db746beb Introduce a Shuffle for FastRandomContext and use it in wallet and coinselection
8098379be Use a local FastRandomContext in a few more places in net
9695f31d7 Make addrman use its local RNG exclusively
fa694f706 test: Add tests for truncated scripts
a46c8476e depends: disable unused qt features
73b46eeb7 depends: qt 5.9.7
095e76597 depends: expat 2.2.6
31926ee8c [test] functional framework: add CScript hex() for Python 3.4
74ce32683 [test] Travis: enforce Python 3.4 support in functional tests
8db0c3d42 Removed implicit CTransaction conversion from benchmaks
ed61abedb Removed implicit CTransaction constructor from tests
fa30a0e7f test: mempool_persist: Verify prioritization is dumped correctly
fa3e874d6 test: pruning: Check that verifychain can be called when pruned
9b51b158f Add nice table to files.md
aaaa8eb1e test: consensus: Check that final transactions are valid
fae3617d7 test: Correctly deserialize without witness
95a5a9fcc qt: Remove ellipsis from sending/receiving addresses
a96c0df35 qt: Add Window menu
9ea38d022 qt: Allow to inspect RPCConsole tabs
d2ce315fb [docs] add release note for change to GBT
0025c9eae [mining] segwit option must be set in GBT
ee3b21dcc [tests] Add docstring for wallet_importmulti.py
fbdba4059 [tests] add test_address method to wallet_import.py
fd3a02c38 [tests] add test_importmulti method to wallet_import.py
08a4a0f70 [tests] add get_multisig function to wallet_importmulti.py
7c99614b4 [tests] add get_key function to wallet_importmulti.py
c9ba253f4 Add E711 to flake8 check
17b55202d Compare to None with is/is not
fa9a5bc1a RPCHelpMan: Support required arguments after optional ones
b7bee6af7 doc: Update minimum required qt
1b89074ae Change '== None' to 'is None'
16d293772 Handle exception as ImportError
89282379b threads: fix unitialized members in sched_param
fa0c24c96 rpc: Document default values for optional arguments
e09a5875c rpc: Assert named arguments are unique in RPCHelpMan
fa4c8679e rpc: Avoid creating non-standard raw transactions
e5a8ea8f1 [tests] tidy up imports in wallet_importmulti.py
cb41ade6b [tests] fix flake8 warnings in wallet_importmulti.py
93009618b Fix start with the `-min` option
45842c3d2 Improve documentation for running verify-commits.py script
8931a95be Include util/strencodings.h which is required for IsSpace(...)
a67d71311 [doc] developer-notes.md: point out that UniValue deviates from upstream
522b80b33 add `--retry 5` to curl opts in install_db4.sh
78542a3f3 doc: Fix PSBT howto and example parameters
fabca42c6 RPCHelpMan: Add space after colons in extended description
cf4b0327e Use std::numeric_limits<UNSIGNED>::max()) instead of (UNSIGNED)-1
fafd040f7 rpc: Add description to fundrawtransaction vout_index
43f909990 scripted-diff: Run scripted-diff in subshell
fa4fc8856 validation: Add and use HaveTxsDownloaded where appropriate
1ca050254 scripts: Add trusted key for Samuel Dobson
4927bf2f2 Increase maxconnections limit when using poll.
11cc491a2 Implement poll() on systems which support it properly.
f3cf95ffd tests: Modify rpc_bind to conform to #14532 behaviour.
0dcac5104 wallet_keypool_topup.py: Test for all keypool address types
dae1423e5 Add locking annotations to feeStats, shortStats and longStats
764e42fee scripted-diff: Rename from cs_feeEstimator to m_cs_fee_estimator
9a789d4dc policy: Add Clang thread safety annotations for variables guarded by cs_feeEstimator
688f665a5 Scripts and tools & Docs: Used #!/usr/bin/env bash instead of obsolete #!/bin/bash, added linting for .sh files shebang and updated the Developer Notes.
7d1b60ce9 Cleanup SplashScreen class
f3f6dde56 Test coinbase category in wallet rpcs
e982f0b68 Add all category options to wallet rpc help
28211a4bc Move SocketEvents logic to private method.
7e403c0ae Move GenerateSelectSet logic to private method.
1e6afd0db Introduce and use constant SELECT_TIMEOUT_MILLISECONDS.
c1825b9d3 [tests] Add wallet_balance.py
e4a0c3547 Improve blocksdir functional test.
af1ed206f Fix broken Gmane URLs
6b82fc59e Use const in COutPoint class
c5ed6e73d Move CheckBlock() call to critical section
4aabadbf4 tests: have combine_logs default to most recent test dir
48b37db50 make peertimeout a debug argument, remove error message translation
a62e66729 docs: Add more Doxygen information to Developer Notes
2012d4df2 Add CScriptNum decode python implementation in functional suite
b14948e2e Remove duplicate libconsensus linking in test make
1c28feb7d qt: Remove hidden columns in coin control dialog
fbaaf782c validation: assert that pindexPrev is non-null when required
8042bbfbf p2p: allow p2ptimeout to be configurable, speed up slow test
26879509f Add comments to descriptor tests
82df4c64f Add descriptor expansion cache
1eda33aab [refactor] Combine the ToString and ToPrivateString implementations
24d3a7b3a [refactor] Use DescriptorImpl internally, permitting access to new methods
6be0fb4b3 [refactor] Add a base DescriptorImpl with most common logic
4894133dc Add missing lock in CNode::copyStats(...)
b312cd770 Add missing locking annotations
59e387705 test: add invalid tx templates for use in functional tests
fa5cef0f7 bench: Destroy wallet txs instead of leaking their memory
0e75f44a0 Replace CAffectedKeysVisitor with descriptor based logic
c77f09230 Fix descriptor_tests not checking ToString output of public descriptors
1db0096f6 rpc: Pass argument descriptions to RPCHelpMan
29aeed173 Bugfix: test/functional/mempool_accept: Ensure oversize transaction is actually oversize
c87fc71f7 Bugfix: test/functional/rpc_psbt: Correct test description comment
097c4aa37 Bugfix: test/functional/rpc_psbt: Remove check for specific error message that depends on uncertain assumptions
6541d59dd Add LSan suppression warnings
ff7212ec3 Add ASan Travis build
ebd3bf259 Make test p2p_invalid_messages.py pass: Allow for expected Travis ASAN memory increase
fa739d4bd qa: Add wallet_encryption error tests
5a1f57646 qa: clean up assert_memory_usage_stable utility
0cf1632f0 qa: fix p2p_invalid_messages on macOS
14bc2a17d Trivial: add doxygen-compatible comments relating to BerkeleyEnvironment
88b1d956f Tests: add unit tests for GetWalletEnv
f1f4bb734 Free BerkeleyEnvironment instances when not in use
848077f94 clarify RPC rawtransaction documentation
6c6ee8af8 Less confusing documentation for `torpassword`
0b4a5786b Use window() instead of obsolete topLevelWidget()
4a86a0acd Make SafeDbt DB_DBT_MALLOC on default initialization
e4eee7d09 Add Benchmark to test input de-duplication worst case
6bbdb2077 squashme: connect thru node interface
dcb70b152 Indicate -rpcauth option password hashing alg
4ab638b79 http -> https
d6b3790d1 tests: check readability of cookie file
5c40e7b91 test: allows test_runner command line to receive parameters for each test
28479f926 qa: Test bitcond shutdown
8d3f46ec3 http: Remove timeout to exit event loop
e98a9eede http: Remove unnecessary event_base_loopexit call
6b13580f4 http: Unlisten sockets after all workers quit
18e968581 http: Send "Connection: close" header if shutdown is requested
02e1e4eff rpc: Add wait argument to stop
af9a9918b Fix detection of copyright holders
4f4993fe2 Remove UBSan suppression
958e1a307 streams: Remove unused seek(size_t)
751436125 Correct misleading "overridden options" label
c9066f07c Allow running rpc_bind.py --nonloopback test without IPv6
a0f8df365 qt: Call noui_connect to prevent boost::signals2::no_slots_error in early calls to InitWarning
fa7d36b8e test: Move UBSAN suppressions to test/sanitizer_suppressions/ubsan
fa36d4e45 travis: --disable-hardening for xenial thread sanitizer
89bf196c8 travis: Run thread sanitizer
828475670 A few minor formatting fixes and clarifications to descriptors.md
27c44ef9c rpcbind: Warn about exposing RPC to untrusted networks
d6a128748 CNetAddr: Add IsBindAny method to check for INADDR_ANY
361500395 net: Always default rpcbind to localhost, never "all interfaces"
d6cde007d rpcauth: Improve by using argparse and getpass modules
3d2c7d6f9 Add regtest for JSON-RPC batch calls.
98a1846b0 tests: Support calling add_nodes more than once
fa71eb519 Convert comments to thread safety annotations
fa21ca09a test: Add BOOST_REQUIRE to getters returning optional
feeef7d30 Do not specify sudo in .travis
3fb09b988 Warn unrecognized sections in the config file
e816b341a revert removal of fstream.hpp header in fs.h
467461030 Log env path in BerkeleyEnvironment::Flush
6be7d14d2 Properly generate salt in rpcauth.py, update tests
2474de026 Fix running individually through test_runner.py, as suggested by @MarcoFalke (#14732)
c54e5a41c Remove unreferenced boost headers
0f459d868 fix an undefined behavior in uint::SetHex
07e286d94 Improve scripted-diff developer docs
b7b36deca fix uninitialized read when stringifying an addrLocal
8ebbef016 add test demonstrating addrLocal UB
fa5e0452e rpc: Documentation fixups
c276df775 zmq: enable tcp keepalive
109699dd3 Add release notes
b65326b56 Add matching descriptors to scantxoutset output + tests
16203d5df Add descriptors to listunspent and getaddressinfo + tests
fa91e8eda Use RPCHelpMan for all RPCs
69ca48717 Implement prevector::fill once
7bad78c2c Drop defunct IS_TRIVIALLY_CONSTRUCTIBLE handling from prevector.h
fa520e72f lint: Must use RPCHelpMan to generate the RPC docs
2bc3f114d Bump the minimum Qt version to 5.2
da427dbd4 Rename ListTransactions filter variable
65b740f92 [wallet] Restore ability to list incoming transactions by label
b08af10fb disallow oversized CBlockHeaderAndShortTxIDs
6bed4b374 fix a deserialization overflow edge case
051faf7e9 add a test demonstrating an overflow in a deserialization edge case
fa0815c30 rpc: Correctly name arguments
bd3b0361d Add stop_block out arg to ScanForWalletTransactions
fa7da0617 qa: Check specific reject reasons in feature_block
b81a18605 GetPubKey: make sigdata const
27154ce76 util.h: explicitly include required QString header
3002d6cf3 Return a status enum from ScanForWalletTransactions
bb24d6865 Make CWallet::ScanForWalletTransactions args and return value const
1a9f9f7e5 Introduce SafeDbt to handle DB_DBT_MALLOC raii-style
f7beb95a1 remove redundant KeyOriginInfo access, already done in CreateSig
0fb2e6981 CreateTransaction: Assume minimum p2sh-p2wpkh spend size for unknown change
b06483c96 Remove stale comment in CalculateMaximumSignedInputSize
fa483e13b rpc: Add RPCHelpMan for machine-generated help
ba8f0c6c8 Release notes: integrate detached release notes
6062f0e61 Release notes: update notes through to 11e1ac3ae08
58c5cc9ce Adjust configure so that only bip70 is disabled when protobuf is missing instead of the GUI
fa5a6ce10 qa: Raise ci test_runner timeout to 40 mins
fa3df025e travis: Avoid timeout on verify-commits check
86cddf085 doc: add detached release notes for #14060
8e209340c build: Add CLIENT_VERSION_BUILD to CFBundleGetInfoString
b4f6e58ca Better error message for user when corrupt wallet unlock fails
fa2156820 qa: Avoid race in p2p_invalid_block by waiting for the block request
6c787d340 tests: Make feature_block pass on centos
fa0d36f71 rpc: Include rpc/util.h where needed for RPCHelpMan
5c5902acc build: Add bitcoin-tx.exe into Windows installer
fa9ed38d5 test_node: get_mem_rss fixups
4e4de10f6 Throw error if CPubKey is invalid during PSBT keypath serialization
6b8d86ddb Require a public key to be retrieved when signing a P2PKH input
591203149 wallet: Create IsDatabaseLoaded function
7a90b1b9d build: Fix windows build error if `--disable-bip70`
7afddfa8c importmulti: Don't add internal addresses to address book
fa4da3c05 [doc] conf: Remove deprecated options from docs, Other cleanup
c82190cdb tests: Add Python dead code linter (vulture)
590a57fde tests: Remove unused testing code
c30620983 blockfilter: Additional constructors for BlockFilter.
20b812993 blockfilter: Refactor GCS params into struct.
4773fa820 Add llvm-symbolizer directory to PATH. Needed to get symbolized stack traces from the sanitizers.
7c9f79076 Update KNOWN_VIOLATIONS: Remove fixed violations
587924f00 Use IsSpace(...) instead of boost::is_space
c5fd143ed Use ToLower(...) instead of std::tolower
e70cc8983 Use IsDigit(...) instead of std::isdigit
3d305e3b8 Send fewer spam messages in p2p_invalid_messages
081accb87 Pass chain locked variables where needed
79d579f4e Remove uses of cs_main in wallet code
ea961c3d7 Remove direct node->wallet calls in init.cpp
8db11dd0b Pass chain and client variables where needed
7e2e62cf7 Add skeleton chain and client classes
5c292dafc Add UBSan suppressions needed to pass test suite
fced6b508 Add UBSan options: print_stacktrace + halt_on_error
825f779dc doc: Add historical release notes for 0.17.0.1
5a05aa2db Add metavar to match var name in help text + Change wording for better readability
99d33a6be appveyor: Script improvement part II
15c93f075 wallet: Add trailing wallet.dat when detecting duplicate wallet if it's a directory.
c456fbd8d Refactor: Move m_db pointers into BerkeleyDatabase
038510944 Add test for rpcpassword hash error
13fe258e9 Error if rpcpassword in conf contains a hash character
9f49db733 Enable functional tests in UBSAN job. Enable -fsanitize=integer (part of UBSAN). Merge UBSAN Travis job with no depends.
6c5355e43 example_test.py: fixup coinbase height argument, derive number clearly
fef5adcc3 blockfilter: Use unordered_set instead of set in blockfilter.
4fb789e9b Extract CSipHasher to it's own file in crypto/ directory.
bbbbb3f88 qa: Add test to ensure node can generate all help texts at runtime
9cc0230cf Add NODISCARD to all {Decode,Parse}[...](...) functions returning bool. Sort includes.
579497e77 tests: Explicitly ignore the return value of DecodeBase58(...)
145fe95ec tests: Check return value of ParseParameters(...)
7c5bc2a52 miner: Default to DEFAULT_BLOCK_MIN_TX_FEE if unable to parse -blockmintxfee
b6022149e trivial: Don't translate in help text
ab8c6f24d Add SAFE_CHARS[SAFE_CHARS_URI]: Chars allowed in URIs (RFC 3986)
991248649 rpc: Make HTTP RPC debug logging more informative
4ed730802 scripted-diff: Rename misleading 'defaultPort' to 'http_port'
60ae463a6 Fix `bitcoin-qt -version` output formatting
c3f1821ac Make blockdir always net specific
0a656f85a qt: All tray menu actions call showNormalIfMinimized
6fc21aca6 qt: Use GUIUtil::bringToFront where possible
5796671e1 qt: Add GUIUtil::bringToFront
2068f089c scripted-diff: Move util files to separate directory.
76e13b586 warnings: Compiler warning on memset usage for non-trivial type
6b1d2972b Remove obj_c for macOS Dock icon menu
2464925e7 Use Qt signal for macOS Dock icon click event
63c74d2d3 build: Remove illegal spacing in darwin.mk
fa4362661 test_runner: Remove travis specific code
e13fea975 Add regression test for PSBT signing bug #14473
565500508 Refactor PSBTInput signing to enforce invariant
0f5bda2bd Simplify arguments to SignPSBTInput
53e6fffb8 Add bool PSBTInputSigned
65166d4cf New PartiallySignedTransaction constructor from CTransction
4f3f5cb4b Remove redundant txConst parameter to FillPSBT
fe5d22bc6 More concise conversion of CDataStream to string
d20a9fa13 tests: add tests for invalid P2P messages
62f94d39f tests: add P2PConnection.send_raw_message
5aa31f6ef tests: add utility to assert node memory usage hasn't increased
535203075 Avoid using numeric_limits for sequence numbers and lock times
bafb92150 Remove duplicated code
e4dc39b3b Replace platform dependent type with proper const
3fd7e76f6 [tests] Move deterministic address import to setup_nodes
086fc8357 Tests: Fix a comment
75a4bf699 Update release-process.md to include RC version bumping
1e0f3c449 macOS: disable AppNap during sync
9605bbd31 Make clear function argument case in dev notes
53bb6be3f Remove obj_c for macOS Dock icon setting
0a0466761 FreeBSD: Document Python 3 requirement for 'gmake check'
fa77aaa5a doc: Add external interface consistency guarantees
04b0bc742 build: include rc number in version number
895e6bbb2 build: if VERSION_BUILD is non-zero, include it in the package version
053b6f42d align items in contrib init
a16f44c04 qt: Remove "Pay only required fee" checkbox
4bd125fff tests: Print dots by default
8711cc0c7 qt: Improve BitcoinAmountField class
0e6de3aac added details about commit messages
d8bf1071c Bugfix: RPC: Add address_type named param for createmultisig
cf2f4306f gui: explicitly disable "Dark Mode" appearance on macOS
04972fefd Remove unused `adjustedTime` parameter
36c8e6858 Various textual improvements in build docs
d3ecc3d69 travis: Save cache on build error
15db77f4d Don't rely on locale dependent functions in base_blob<BITS>::SetHex(...) (uint256), DecodeBase58(...), ParseMoney(...) and ParseHex(...)
9b2a25b13 Add tests for InferDescriptor and Descriptor::IsSolvable
225bf3e3b Add Descriptor::IsSolvable() to distinguish addr/raw from others
4d78bd93b Add support for inferring descriptors from scripts
fa78a2fc6 [tests] Test that nodes respond to getdata with notfound
ed2e18398 Remove fs::relative call and fix listwalletdir tests
fbaccbf00 build: Fix Qt link order for Windows build
65f3672f3 wallet: Refactor to use WalletLocation
01a4c095c wallet: Add WalletLocation utility class
c11875c59 Add segwit address tests for importmulti
201451b1c Make getaddressinfo return solvability
1753d217e Add release notes for importmulti segwit change
353c06459 Fix typo in test_framework/blocktools
f6ed748cf Add SegWit support to importmulti with some ProcessImport cleanup
4dca7d0a9 appveyor: Enable multiwallet test
4ea77320c tests: add test case for loading copied wallet twice
2d796faf6 wallet: Fix duplicate fileid
ab9aca2bd [rpc] add 'getnewaddress' hint to 'generatetoaddress' help text.
1cdb9bb51 minor p2p_sendheaders fix of height in coinbase
591820430 Removed explicit mention of storage requirement (squashed)
48439b3c1 Don't link SSL_LIBS with GUI unless BIP70 is enabled
fbb643d2a Add BIP70 deprecation warning
38b98507c qt: cleanup: Move BIP70 functions together in paymentserver
96c509e4d show the progress of functional test
8afb16687 Update documentation to incude origin information
ff37459ab Add tests for key origin support
2c6281f18 Add key origin support to descriptors
43719e0a3 [macOS] Remove DS_Store WindowBounds bytes object
fa4bcaf82 travis: Compile once on xenial
585b47cfe rpc: Prevent concurrent savemempool
8907df9e0 qa: Ensure wallet unload during walletpassphrase timeout
fadffae17 Revert "Make qt wallet test compatible with qt4"
8640631eb docs: Document lint tests
7e18673f0 Fix typo
cb53b825c scripted-diff: Replace boost::bind with std::bind
2196c5182 refactor: Use boost::scoped_connection in signal/slot, also prefer range-based loop instead of std::transform
3be209d10 rpc: Always throw in getblockstats if -txindex is required
a4edb168b ZMQ: add options to configure outbound message high water mark, aka SNDHWM
33ae98591 doc: Update OpenBSD build guide for 6.4
6d247b114 gitignore contents of db4 folder
321decffa rpc: Fix wallet unload during walletpassphrase timeout
d56a06893 docs: Add release notes for listwalletdir RPC
0cb3cad16 qa: Add tests for listwalletdir RPC
cc3377360 rpc: Add listwalletdir RPC
d1b03b8e5 interfaces: Add getWalletDir and listWalletDir to Node
fc4db35bf wallet: Add ListWalletDir utility
1fb3c167c Add `doc/bitcoin-conf.md`
c9f02955b [wallet] Deprecate the generate RPC method
aab81720d [tests] Add generate method to TestNode
bc60c615a Avoid 1 << 31 (UB) in calculation of SEQUENCE_LOCKTIME_DISABLE_FLAG
369244f65 utils: Fix broken Windows filelock
b6b991531 Textual improvements
96f6dc9fc Avoid triggering undefined behaviour in base_uint<BITS>::bits()
2b91e42ec [docs] Add release note for removing getwitnessaddress
eeeaa2921 descriptors.md: Refer to descriptors as describing instead of matching
b191c7dfb doc: add comment explaining recentRejects-DoS behavior
c26920933 [tests] Small fixups before deprecating generate
ee0b7c4e8 build: Pin to specific versions of Python packages we install from PyPI in Travis
c32cf6a0f Add ignored word: mut
4ae50daaa Revert "qa: Fix codespell error and have lint-spelling error instead of warn"
b7df96f45 refactor: Drop boost::this_thread::interruption_point and boost::thread_interrupted in main thread
d4d70eda3 Fix listreceivedbyaddress not taking address as a string
14a06525b tests: add test for 'getaddressinfo' RPC result 'ischange' field
93d1aa9ab rpcwallet: add 'ischange' field to 'getaddressinfo' response
081cc02a9 Fix QCompleter popup regression
1f01fe025 bitcoin-tx: Use constant for n pubkeys check
d56202707 [doc] getblocktemplate: use SegWit in example
ca6d86c32 tests: Stop node before removing the notification file
29ed2d64f Improve CAmount tests
008990536 Add compile time checking for cs_main locks which we assert at run time
94e21c150 test: forward timeouts properly in send_blocks_and_test
a48e44bd4 Fix CLEAN_BITCOIN_TEST to remove .log files for all BITCOIN_TESTS files
0c69ff617 clarify rpcwallet flag url change
b8edb9810 [rpc] Descriptions: Textual consistency fixes
69e7ee2dd Add GUARDED_BY(cs_wallet) for setExternalKeyPool, mapKeyMetadata, m_script_metadata and setLockedCoins
37b2538c2 Add GUARDED_BY(cs_wallet) for encrypted_batch, nWalletMaxVersion, m_max_keypool_index and nOrderPosNext
dee42927c wallet: Add Clang thread safety analysis annotations
1c7e25db0 wallet: Add missing locks
7d173c4cd qt: Revert "Force TLS1.0+ for SSL connections"
9dcf6c0df build: Add --disable-bip70 configure option
3e9f6c821 Add missing locks and locking annotations for CAddrMan
2ab9140c9 Add tooltips for both datadir and blocksdir
2f6b466ae Stop requiring imported pubkey to sign non-PKH schemes
62c304ea4 tests: Allow closed http server in assert_start_raises_init_error
0bd64dc6d Fix macOS files description
9d0e52834 implements different disk sizes for different networks on intro
64937fda6 [docs] path to descriptors.md fixed
42a995ae4 [tests] Remove rpc_zmq.py
36323e2ac Clean systray icon menu for -disablewallet mode
304570450 Add "Blocksdir" to Debug window
a6b5ec18f rpc: creates possibility to preserve labels on importprivkey
b09c81454 Don't access out of bounds array entry array[sizeof(array)]
59a50c217 appveyor: trivial build cache modifications
4a9f064ea Fix typos
86eddd466 doc: miss install
3b706212a doc: RPC documentation
d10f2cd7d travis: set codespell version to avoid breakage
f149e31ea depends: qt: avoid system harfbuzz and bz2
1f59c6f3e doc: Remove "temporary file" notice from 0.17.0 release notes
ff94da788 tests: Make appveyor run with --usecli
5aaf1a047 doc: Add historical release notes for 0.17.0
db0183936 test: Add missing call to skip_if_no_cli()
4fb3388db check that a separator is found for psbt inputs, outputs, and global map
3f5ac2720 Include some files currently missed by 'make distclean'.
380c84321 utils: Convert Windows args to utf-8 string
88a79cb43 fix converttopsbt permitsigdata arg, add basic test
0809e68a9 doc: Add historical release notes for 0.14.3 and 0.15.2
430bf6c7a depends: fix bitcoin-qt back-compat with older freetype versions at runtime
ec1201a36 Don't use systray icon on inappropriate systems
e46023287 Document fixed attribute behavior in critical test framework classes.
17b42f412 Check for specific tx acceptance failures based on script signature
3a4449e9a Strictly enforce instance attrs in critical functional test classes.
7ac911afe [docs] Add release notes for removing `-usehd`
fa69ac761 doxygen: Fix member comments
b0510d78a Set C locale for amountWidget
d813266db [gitian] use versioned unsigned tarballs instead of generically named ones
43c7fbb1e Make MSVC compiler read the source code using utf-8
f86a571ed tests: Add test case for std::ios_base::ate
a554cc901 Move boost/std fstream to fsbridge
86eb3b3f1 utils: Add fsbridge fstream function wrapper
faa4043c6 qa: Run more tests with wallet disabled
c7b3e487f tests: exclude all tests with difference parameters
9c5af58d5 Consolidate redundant implementations of ParseHashStr
20442f617 [wallet] remove redundand restart node
ff40357da AppVeyor: Move AppVeyor YAML to dot-file-style YAML
854c85ae9 test: allow arguments to be forwarded to flake8 in lint-python.sh
032488e6e Move SocketHandler logic to private method.
2af9cff11 Move InactivityCheck logic to private method.
67654b640 tests: write the notification to different files to avoid race condition
7479b63d9 Move DisconnectNodes logic to private method.
edb5350c3 Move NotifyNumConnectionsChanged logic to private method.
db1580566 [wallet] Ensure wallet is unlocked before signing
97ddc6026 validation: Pass chainparams in AcceptToMemoryPoolWorker(...)
1d0ce94a5 Fix for incorrect version attr set on functional test segwit block.
6fa901fb4 Don't edit Chainparams after initialization
980b38f8a MOVEONLY: Move versionbits info out of versionbits.o
ba923e32a test: Fix broken segwit test
30973e984 [REST] improve performance for JSON calls
ebec90ac9 [wallet] Remove deprecated addwitnessaddress RPC method
07e3f585a [test] Remove deprecated addwitnessaddress from feature_segwit.py
82f2fa03a [test] Remove deprecated addwitnessaddress from wallet_bumpfee.py
9d7ee187a [test] Remove deprecated addwitnessaddress from p2p_compactblocks.py
3cf77f0b3 [tests] Remove deprecated addwitnessaddress call from wallet_dump.py
bdefc9705 [tests] Remove deprecated addwitnessaddress call from feature_nulldummy
67d7d67cf [test] Fix flake8 warnings in tests
fae9e84cb doc: Add GitHub pr template
1eb9a9b52 [RPC] Remove warning for removed estimatefee RPC
2c3eade70 Make fs::path::string() always return utf-8 string
862d159d6 Add test for conversion from non-witness to witness UTXO
f8c171463 Convert non-witness UTXOs to witness if witness sig created
25548b295 [wallet] Remove -usehd
fa6b30c40 lcov: filter /usr/lib/ from coverage reports
52beb9ed8 Add autogen.sh in ARM Cross-compilation
fa910e430 init: Remove deprecated args from hidden args
b6718e373 tests: Use MakeUnique to construct objects owned by unique_ptrs
fad95e8da doc: Split build linux dependencies
a23a7f60a wallet: Avoid potential use of unitialized value bnb_used in CWallet::CreateTransaction(...)
951a44e9c Drop unused setRange arg to BerkeleyBatch::ReadAtCursor
d2eee8792 Lift prevector default vals to the member declaration
000000901 doc: Split depends installation instructions per arch
fd5c95cc4 doc: Add historical release notes for 0.16.3
bf2e01097 uint256: Remove unnecessary crypto/common.h use
82d6c5aad gui: Show watch-only eye instead of HD disabled
a2eb6f540 [rpc] Add getnodeaddresses RPC command
9b4a36eff [qa] Test for duplicate inputs within a transaction
b8f801964 Fix crash bug with duplicate inputs within a transaction
fa84723e7 amount: Move CAmount CENT to unit test header
661ac15a4 appveyor: Run functional tests on appveyor
0ca4c8b3c Changed functional tests which do not require wallets to run without
2148c36b6 tests: Make it possible to run functional tests on Windows
d641c29a5 travis: Run feature_dbcrash functional tests in cron job
c0d947d72 tests: Reorder tests and move most of extended tests up to normal tests
be54f42e5 use integer division instead of double conversion and multiplication for computing amounts
8e1c13e6d doc: Document -checklevel levels
9dcb6763f [qa] Use correct python index slices in example test
cccc362d6 build: Remove libssl from LDADD unless gui
3ccfa34b3 convert C-style (void) parameter lists to C++ style ()
14b29a77a Fix reference to lint-locale-dependence.sh
e4ef4b459 [build] remove #ifdef ENABLE_WALLET from interfaces/node
fa8433e37 qa: Remove unneded import_deterministic_coinbase_privkeys overwrite, add comments
e413c2ddd qa: Fix codespell error and have lint-spelling error instead of warn
a2a04a5ab Bugfix: Only run bitcoin-tx tests when bitcoin-tx is enabled
92af71cea configure: Make it possible to build only one of bitcoin-cli or bitcoin-tx
9a565a828 Pass export privkey DER compression flag correctly
d0b1cee1f doc: `-help-debug` implies `-help`
2d471636e wallet: Remove trailing separators from -walletdir arg
ea3009ee9 wallet: Add walletdir arg unit tests
fae3fbd61 logging: Replace LogPrint macros with regular functions
e0664f7f5 build: Move interfaces/* to libbitcoin_server
f1bd03eb0 [depends, zmq, doc] upgrade zeromq to 4.2.5 and avoid deprecated zeromq api functions
fa511e8da Pass tx pool reference into CheckSequenceLocks
b6a253337 Remove redundant BIP174 test from rpc_psbt.json
d38bf9105 Call unicode API on Windows
893628be0 Drop minor GetSerializeSize template
da74db094 Drop unused GetType() from CSizeComputer
fac953983 qa: Run all tests even if wallet is not compiled
faa669cbc qa: Premine to deterministic address with -disablewallet
e22136893 utils: Convert fs error messages from multibyte to utf-8
7d038dcb4 [build] remove ENABLE_WALLET ifdef from httprpc.cpp
fa263bcfe qa: Fix silent merge conflict in wallet_importmulti
bc8aa2ba7 don't translate command line options
3387bb082 travis: avoid timeout without saving caches, also enable all qt
7177e093f depends: Remove unused Qt 4 dependencies
faea5bfc5 doc: release notes for -enablebip61 default change
b9f226b41 rpc: Remove cs_main lock from blockToJSON and blockHeaderToJSON
343b98cbc rpc: Specify chain tip instead of chain in GetDifficulty
54dc13b6a rpc: Fix SoftForkMajorityDesc and SoftForkDesc signatures
e7a72455f Scripts and tools: increased timeout downloading
3076556cd [build] Move dummy wallet into its own .cpp file.
faa1a7494 tx pool: Use class methods to hide raw map iterator impl details
dc287c98f Squashed 'src/univalue/' changes from 51d3ab34ba..7890db99d6
fa14b54a8 p2p: Disable BIP 61 by default
fa7e9694e qt: Also log and print messages or questions like bitcoind
dd031e383 noui: Move handlers to header file
eb4941256 doc/descriptors.md tweaks
ed2332aef test: Add test for config file parsing errors
e351a16a2 Remove reference to deprecated RPC call in build instructions
a6f16f1b1 Docs: Add disable-wallet section to OSX build instructions
2b5d6f8df Replace duplcate reference with reference to reference doc
89709db7a Adjust TODO link
9254ffcf2 Add descriptor reference documentation
e9a78e9b3 doc: Change documentation for =0 for non-boolean options
fab526751 doxygen: Remove misleading checkpoints comment in CMainParams
f8a81f73a lint: Add spell check linter (codespell)
ada356208 Fix typos reported by codespell
66e15e8f9 Explain GetAncestor check for m_failed_blocks in AcceptBlockHeader
8ecaee13f Increase signal to noise in appveyor build output by reducing the MSVC warning count from 12 to 4 (12 is assuming the changes in #14086 are also implemented).
e4a79b4b3 appveyor: Use clcache to speed up build
fa462b365 wallet: Set encrypted_batch to nullptr after delete. Avoid double free in the case of NDEBUG.
68bfc0bce doc: correct GetDifficulty doc after #13288
ee3a494f3 gui: Favor macOS show / hide action in dock menu
5d62dcf9c lint: Make sure we read the command line inputs using utf-8 decoding in python
c7f7fa467 Trivial: update clang thread-safety docs url
9256f7d13 build: avoid getifaddrs when unavailable
8dfc2f30d Test rpc_help.py failed: Check whether ZMQ is enabled or not.
83d53058a Switch nPrevNodeCount to vNodesSize.
fac3e22b1 qa: Read reject reasons from debug log, not p2p messages
190bf62be scripted-diff: Small locking rename
fb97437ef added note that control port must be enabled and how to do that in torrc config file
b9babc82d utils: Use _wfopen and _wreopen on Windows
62b6f0f21 Add EXCLUSIVE_LOCKS_REQUIRED to CWallet::ListCoins
341f7c7b0 macOS fix: Check for correct version of flake8 to avoid spurious warnings. The brew installed flake8 version is Python 2 based and does not work.
908a559f3 macOS fix: Add excludes for checks added in the newer shellcheck version installed by brew
ec4d57bbb macOS fix: Work around empty (sub)expression error when using BSD grep
b57d7d92f macOS fix: Avoid mapfile due to ancient version of bash shipped with macOS
dfef0df84 tests: Dry run bench_bitcoin (-evals=1 -scaling=0: <1 second running time) as part "make check" to allow for quick identification of assertion/sanitizer failures in benchmarking code
00c6306a6 Remove RUN_BENCH logic
946107a68 Only log "Using PATH_TO_bitcoin.conf" message on startup if conf file exists.
b602c9b3a tests: Add missing locking annotations and locks
c9c32e6b8 [wallet] Kill accounts
a66c0f78a util: Report parse errors in configuration file
1e29379d6 Fix potential deadlock
d58dc9f94 Add lock annotations (cs_args)
db5e9d3c8 Add missing locks (cs_args)
fa782a308 qa: Use named args in some tests
b4d330967 scripted-diff: Use named arguments in feature_block
749ba35e7 scripted-diff: Pass node into p2p_segwit acceptance tests
75ea00f39 Remove unused fsbridge::freopen
cceedbc4b Don't close old debug log file handle prematurely when trying to re-open (on SIGHUP)
fa309dc30 validation: Log FormatStateMessage on ConnectBlock error in ConnectTip
f05599557 blockfilter: Omit empty scripts from filter contents.
b193d5a44 Removes the Boost case_conv.hpp dependency.
7a208d9fa Implements custom tolower and toupper functions.
e2ba043b8 Implements ParseNetwork unit test.
1cc58978b tests: Fix accidental trunction from int to bool
ca1a09312 Add regression test: Don't assert(...) with side effects
4c3c9c386 Don't assert(...) with side effects
ed12d5df1 index: Fix for indexers skipping genesis block.
8550f1fb2 Add README.md to linux release tarballs
fe1ff5026 Hide spendable label if priveate key is disabled
f7e9e7046 [rpc] Remove deprecated sigrawtransaction rpc method.
90c834089 [RPC] Remove warning about wallet addresses in createmultisig()
df905e390 [rpc] Remove deprecated validateaddress usage.
16e288acd test padding non micro timestamps
4c530e010 travis: add  CXXFLAGS=-Wnopsabi at ARM job
1661a472b add unicode compatible file_lock for Windows
1d9aa008d Explicitly initialize prevector _union
f34c8c466 Make objects in range declarations immutable by default. Avoid unnecessary copying of objects in range declarations.
bb08423d5 [doc] Add release notes for 'account' API removal
1f4b865e5 [wallet] Re-sort wallet RPC commands
f0dc850bf [wallet] Remove wallet account RPCs
c55c5f2b1 fix missing differentiation between UNIT and FUNCTIONAL tests in travis build
b2f49bd73 Integration of property based testing into Bitcoin Core
c410f4157 [tests] Remove wallet accounts test
a9910d82c contrib: Adjust output to current test format
5778bf95d Report minfeefilter value in getpeerinfo rpc
414326952 use export LC_ALL=C.UTF-8
728c82d02 make script exit if a command fails
506890b24 move remaining travis build steps into individual files
272306ea5 number .travis/ script according to build lifecycle and add README to explain
519e2739c move lint stage up to resemble travis build ui
86d34f0e6 abort script in END_FOLD on non-zero exit code
4f2f88c7b move script sections info individual files and comply with shellcheck
23db9546c utils: run commands using utf-8 string on Windows
0b16f679d auto generate MSVC project files
fad8afa38 travis: Run unit tests --with-sanitizers=undefined
faf4a9b67 qa: Stop txindex thread before calling destructor
737670c03 Use assert when running from multithreaded code as BOOST_CHECK_* are not thread safe
9e2de6b9d Move cs_main locking annotations from .cpp to .h
9e0a51411 Add compile time checking for all cs_main runtime locking assertions
254c85b68 bench: Benchmark GCS filter creation and matching.
f33b717a8 blockfilter: Optimization on compilers with int128 support.
97b64d67d blockfilter: Unit test against BIP 158 test vectors.
a4afb9cad blockfilter: Additional helper methods to compute hash and header.
cd09c7925 blockfilter: Serialization methods on BlockFilter.
c1855f605 blockfilter: Construction of basic block filters.
53e7874e0 blockfilter: Simple test for GCSFilter construction and Match.
558c536e3 blockfilter: Implement GCSFilter Match methods.
cf70b5500 blockfilter: Implement GCSFilter constructors.
c454f0ac6 blockfilter: Declare GCSFilter class for BIP 158 impl.
9b622dc72 streams: Unit tests for BitStreamReader and BitStreamWriter.
fe943f99b streams: Implement BitStreamReader/Writer classes.
87f2d9ee4 streams: Unit test for VectorReader class.
947133dec streams: Create VectorReader stream interface for vectors.
c516c3a77 [contrib] Support ARM and RISC-V symbol check
7d0a8ad31 Docs: Fix help message typo optiona -> optional
61fe653bd fix walletcreatefundedpsbt deriv paths, add test
fae040010 qa: Add some actual witness in rpc_rawtransaction
fa3e9f762 qa: Add TestNode::assert_debug_log
995dd89d8 [Tests] Make combine_logs.py handle multi-line logs
ddddce0e4 util: Replace boost::signals2 with std::function
5bb0164ce depends: Enable unicode support on dbd for Windows
bb530efa1 Disallow extended encoding for non-witness transactions
0d00fd590 depends: allow CC/CXX to be overridden during configure
f1640d093 Make IS_TRIVIALLY_CONSTRUCTIBLE consistent on GCC < 5
fa74d3d72 qa: Remove unused deserialization code in msg_version
66b3fc543 Skip stale tip checking if outbound connections are off or if reindexing.
497e90c02 Remove default argument to prevector constructor to remove ambiguity
e8c4a1e36 Add new regtest ports in doc following #10825 ports reattributions
00f58f8c4 rpc: Avoid locking cs_main in some wallet RPC
6af6d9b23 test: Add tests for RPC help
fa5099ceb p2p: Remove dead code for nVersion=10300
856334171 Bugfix: NSIS: Exclude Makefile* from docs
3567b247f test: Add lint to prevent SIGNAL/SLOT connect style
f78558f1e qt: Use new Qt5 connect syntax
317f2cb3f test: Check RPC settxfee errors
a3197c529 Disable wallet and address book Qt tests on macOS minimal platform
faaac5caa RPCTypeCheck bip32derivs arg in walletcreatefunded
1f0c4282e QA: add basic walletcreatefunded optional arg test
1f18d7b59 walletcreatefundedpsbt: remove duplicate replaceable arg
d9d79576f Preserve a format of RPC command definitions
18c49eb88 http: Add const modifier to HTTPRequest methods
de0b4fba2 depends: fix qt determinism
ea16c2d04 appveyor: fetch the latest port data
48618daf2 Add checks for settxfee reasonableness
241f8b5de Fix typo in feature_blocksdir.py log message
fa6ab8ada rpc: Return more specific reject reason for submitblock
4b3b85c59 refactor: use fs:: over boost::filesystem::
8bd98a384 [trivial] Fix typo in CDiskBlockPos struct's ToString
1f6ff04e5 Use wildcard path in test_bitcoin.vcxproj
19efc01ae Add PSBT documentation
2252ec500 Allow ConstructTransaction to not throw error with 0-input txn
321159e53 don't report minversion wallet entry as unknown
a9cf5c962 Import CInv from correct module
90cc69c0c ci: Add appveyor.yml to build on MSVC
4d0c7924d Make macro compatible with MSVC
8845c8aea tests: Replace usage of tostring() with tobytes()
16bcc1b82 Remove unused dummy_tx variable from FillPSBT
bd19cc78c Serialize non-witness utxo as a non-witness tx but always deserialize as witness
43811e633 Fix PSBT deserialization of 0-input transactions
fa091b001 qa: Add tests for submitheader
36b1b63f2 rpc: Expose ProcessNewBlockHeaders
917353c8b Make SignPSBTInput operate on a private SignatureData object
cad5dd236 Pass HD path data through SignatureData
03a99586a Implement key origin lookup in CWallet
3b01efa0d [MOVEONLY] Move ParseHDKeypath to utilstrencodings
81e1dd5ce Generalize PublicOnlySigningProvider into HidingSigningProvider
84f1f1bfd Make SigningProvider expose key origin information
611ab307f Introduce KeyOriginInfo for fingerprint + path
5df6f089b More tests of signer checks
7c8bffdc2 Test that a non-witness script as witness utxo is not signed
8254e9950 Additional sanity checks in SignPSBTInput
c05712cb5 Only wipe wrong UTXO type data if overwritten by wallet
263b3777e gitian: bump descriptors for (0.)18
58efc49b9 build: bump version to 0.17.99
176aa5aa1 contrib: fix GetDesirableServiceFlags typo in seeds/README.md
68400d8b9 tests: Use explicit imports
49e56625a fix deprecation in bitcoin-util-test.py
825fb02ef net: Update hardcoded seeds
61c0d3b9a contrib: in makeseeds, add 0.16.x to PATTERN_AGENT, remove 0.13.x
fad389862 doc: move-only release notes of individual prs
869193f5a docs: fixed bitcoin-cli -help output for help2man
b0d3e9b10 qt: Translations update before 0.17 branch
265bd5088 Removes unsed `CBloomFilter` constructor.
fa6c3dea4 p2p: Clarify control flow in ProcessMessage()
5654efb18 Ported usage of deprecated optparse module to argparse module
4b7091a84 Replace median fee rate with feerate percentiles
2da54f5a6 Cleanup StartRest()
a679109be Speed up knapsack_solver_test by not recreating wallet 100 times.
fa85c985e qa: Add p2p_invalid_locator test
4441ad677 Make format string linter understand basic template parameter syntax
ef7beaea6 Visual Studio build configuration for Bitcoin Core
e306be742 Use 72 byte dummy signatures when watching only inputs may be used
48b1473c8 Use 71 byte signature for DUMMY_SIGNATURE_CREATOR
18dfea0dd Always create 70 byte signatures with low R values
18f690ec2 wallet: shuffle coins before grouping, where warranted
e254ff5d5 Introduce a maximum size for locators.
c1dde3a94 No longer shutdown after encrypting the wallet
d7637c5a3 After encrypting the wallet, reload the database environment
5d296ac81 Add function to close all Db's and reload the databae environment
a769461d5 Move BerkeleyEnvironment deletion from internal method to callsite
cf9ed307e qa: blocktools enforce named args for amount
227d27e70 Use pushKV in some new PSBT RPCs.
ec749b1bc Squashed 'src/leveldb/' changes from 64052c76c5..524b7e36a8
1f87c372b Simplify comparison in rpc_blockchain.py.
44bbceeef [Tests] Cleanup feature_block.py, remove unnecessary PreviousSpendableOutput object
736f94142 [Tests] Cleanup extra instances of create_transaction
157651855 [Tests] Rename create_tx and move to blocktools.py
fa5587fe7 qa: wait_for_verack by default
0e534d4dc Fix incorrect Doxygen comments
c4aecd1d8 Add risc-v 64-bit to gitian
96dda8b05 [depends] Add riscv qt depends support for cross compiling bitcoin-qt
fa31ca0c2 qa: Remove redundant checkmempool/checkblockindex extra_args
c4a884d55 Trivial: Revert translated string change, clarify wallet log messages
e58985c91 Log progress while verifying blocks at level 4.
bb5b1c0b2 [Docs] upgrade rescan time warning from minutes to >1 hour
5eb20f81d Consistently use ParseHashV to validate hash inputs in rpc
fa5ce2738 ui: Compile boost:signals2 only once
bcd4b0f5c Add linting of WalletLogPrintf(...) format strings
a3e455694 build: Add format string linter
d56b73f21 Remove redundant extern
f04bb1361 Enable -Wredundant-decls (gcc) if available
a9e90e500 Remove redundant redeclaration of rescanblockchain(...) in same scope
13bb5cae3 Docs: fix GetWarnings docs to reflect behavior
faab63111 shutdown: Stop threads before resetting ptrs
b2f23c415 [RPC] Remove getinfo deprecation warning
fa8527ffe wallet: Catch filesystem_error and raise InitError
7272fdcfe [docs] Reformat -help output for help2man
fafe73a62 qa: Raise feature_help timeout to 5s
faabd7bc4 qa: Use files for stdout/stderr to support Windows
facb56ffa qa: Run gen_rpcauth with sys.executable
3339d8453 [trivial] add doxygen-compatible comments to CAffectedKeysVisitor
bb6ca65f9 gui: get special folder in unicode
fada8966c qa: Close stdout and stderr file when node stops
1c5d22585 Drop boost::scoped_array
5e1777777 qa: Create unicode tempdir in test_runner
9c4dc597d Use LOCK macros for non-recursive locks
1382913e6 Make LOCK, LOCK2, TRY_LOCK work with CWaitableCriticalSection
ba1f095aa MOVEONLY Move AnnotatedMixin declaration
41b88e933 Add unit test for DEBUG_LOCKORDER code
384273260 test: Add testing of value_ret for SelectCoinsBnB
322d34ef6 doc: correct versions in dependencies.md
081f5b4e2 Docs: Improve "of" grammar
909f54c80 [wallet] Add wallet name to log messages
566f82690 use only travis jobs: instead of mix of jobs+matrix
d5f745a5c trivial: correct typos
3be70ba40 trivial: Fixed typos and cleaned up language
83c48d9a1 fix locale for lint-shell
dd777f3e1 Remove unused variable
cdf408945 Remove redundant assignments (dead stores)
fa67505e1 qa: Quote wallet name for rpc path
e57766906 gui: Pull initial 017x translations from transifex
75d9a0771 tx: Update transifex slug 016x→017x
af5fa82b6 Allow quicker shutdowns during LoadBlockIndex()
312ff01ee -prune option -help output aligned with code
fa5b44097 qa: Extract rpc_timewait as test param
d795c610d [qt] TransactionView: highlight replacement tx after fee bump
fe7180c5b [trivial,doc] Fix memory consistency model in comment
fa7a3a178 travis: Run bench_bitcoin once
fa365021b doc: Remove outdated net comment
494634a05 bench: Make CoinSelection output groups pass eligibility filter
46f834537 contrib: Support github pull request gitian-build
247d5740d Ignore unknown config file options for now
cbeaa91db Update ValidationInterface() documentation to explicitly specify threading and memory model
b296b425a Update documentation for SingleThreadedSchedulerClient() to specify the memory model
7bf22bf0c gui: Reject options dialog when key escape is pressed
4a43306a4 gui: Reject edit address dialog when key escape is pressed
f7a553177 gui: Add GUIUtil::ItemDelegate with keyEscapePressed signal
1dbad82f6 Add BIP174 to list of implemented BIPs
23fbbb100 wallet: sum ancestors rather than taking max in output groups
fa8f2d826 doc: Fix chainTxData comment
f98146d00 use travis:fold in test script steps
fa0e1e2f6 contrib: Remove debian and rpm subfolders
a13647b8b [qa] Add test for too-large wallet output groups
6f53edb39 Acquire cs_main before ATMP call in block_assemble bench
db213aa47 doc: add note to contributor docs about warranted PR's
284f424d5 Fix osslsigncode compile issue in gitian-build
57ec1c97b [wallet] correctly limit output group size
fa587773e scripted-diff: Remove unused first argument to addUnchecked
fe5c49766 tx pool: Use the entry's hash instead of the one passed to addUnchecked
ddd395f96 Mark CTxMemPoolEntry members that should not be modified const
04ce0d88c Report when unknown config file options are ignored
23f434378 Add CMerkleTx::IsImmatureCoinBase method
fa6094f15 chainparams: Update with data from assumed valid chain
222e62732 doc: Add historical release notes for 0.16.2
00db41817 Add aarch64 qt depends support for cross compiling bitcoin-qt
fa5ed4f8d refactor: Avoid locking tx pool cs thrice
4207c1b35 configure: Initialise assembly enable_* variables
afe087557 configure: Skip assembly support checks, when assembly is disabled
d8ab8dc12 configure: Invert --enable-asm help string since default is now enabled
f6b7fc349 Support h instead of ' in hardened descriptor paths
fddea672e Add experimental warning to scantxoutset
6495849bf [QA] Extend tests to more combinations
1af237fae [QA] Add xpub range tests in scantxoutset tests
151600bb4 Swap in descriptors support into scantxoutset
0652c3284 Descriptor tests
fe8a7dcd7 Output descriptors module
e54d76044 Add simple FlatSigningProvider
29943a904 Add more methods to Span class
620361fce Fix accidental use of the addition assignment operator ("+="). Remove newlines from error message.
d78a8dc3e Return void instead of bool for functions that cannot fail
3fc20632a qt: Set BLOCK_CHAIN_SIZE = 220
2b6a2f4a2 Regenerate manpages
eb7daf4d6 Update copyright headers to 2018
9730d3af3 make .travis/yml a bit more readable
2fb0066b9 net: Add missing verification of IPv6 address in CNetAddr::GetIn6Addr(...)
aecd615ad wallet: Fix accidental use of the comma operator
faaf49147 travis: Retry to fetch docker image
1ac3c983b Mark single-argument constructors "explicit"
1e60713a6 contrib: Fix test-security-check fail in Ubuntu 18.04
6b5506a28 Fix Qt's rcc determinism for depends/gitian
1e3bcd251 [net_processing] Add thread safety annotations
f393a533b Annotate AssertLockHeld() with ASSERT_CAPABILITY() for thread safety analysis
3828a7971 scripted-diff: prefer MAC_OSX over __APPLE__
fa6e841e8 gui: remove macOS ProgressBar workaround
68c272527 gui: remove SubstituteFonts
6c6dbd8af doc: mention that macOS 10.10 is now required
84b0cfa8b release: bump minimum required macOS to 10.10
26b15df99 depends: set OSX_MIN_VERSION to 10.10
6d5fcad57 [gui] Make proxy icon from statusbar clickable
12dd10134 scripted-diff: Remove trailing whitespaces
12c93cb85 depends: use MacOS friendly sed syntax in qt.mk
232f96f5c doc: Add release notes for -avoidpartialspends
e00b4699c clean-up: Remove no longer used ivars from CInputCoin
43e04d13b wallet: Remove deprecated OutputEligibleForSpending
012812110 test: Add basic testing for wallet groups
59d6f7b4e wallet: Switch to using output groups instead of coins in coin selection
87ebce25d wallet: Add output grouping
bb629cb9d Add -avoidpartialspends and m_avoid_partial_spends
65b3eda45 wallet: Add input bytes to CInputCoin
a443d7a0c moveonly: CoinElegibilityFilter into coinselection.h
173e18a28 utils: Add insert() convenience templates
7ebd8c638 qt: Update translation source messages
64b9f27e0 Skip is_closing() check when not available.
984d72ec6 Return the script type from Solver
e3245f2e7 Removes Boost predicate.hpp dependency
fa451511a doc: Adjust bitcoincore.org links
0454b56d8 trivial: remove unneeded include
9544a3f3f tiny refactor for ArgsManager
01a06d668 Avoid locking mutexes that are already held by the same thread
751c9587d Use the Travis python language feature on the lint build
515348f70 Don't unnecessarily install shellcheck on the lint build
675556984 trivial: Replace CPubKey::operator[] with CPubKey::vch where possible
5f019d535 Removes the boost/algorithm/string/join dependency
1be5c3333 Avoid unnecessarily setting env variables on the lint build
60c3c23a6 [contrib] Add automatic setup for Ubuntu Bionic
5b82aa735 Fix bitcoin-cli --version
46340b333 [bench] Add benchmark for unserialize prevector
fad231ad4 Fix merging of global unknown data in PSBTs
41df035ee Check that PSBT keys are the correct length
84547fa6d Avoid creating a temporary vector for size-prefixed elements
b1b8863fd docs: Specify preferred Python string formatting technique
a9e898a4a docs: Link to python style guidelines from developer notes
27ee53c1a wallet: Add error handling. Check return value of ParseUInt32(...) in ParseHDKeypath(...).
722326389 wallet: Add tests for ParseHDKeypath(...)
14788fbad [travis] Don't store debug info if --enable-debug is set
03a2d6801 Tests: add usage note to check-rpc-mappings.py
ea5340c9d tests: fixes mininode's P2PConnection sending messages on closing transport
95464c751 doc: Improve command to generate list of authors for release notes
1c22cc1af doc: Update broken links to now point to gitian-build.py
5c613aadd lint: Add linter for circular dependencies
066d2973a contrib: correct version check
3dee4cc50 Remove redundant statement
99be64496 Remove redundant unused variables
66ed24234 Remove redundant forward declaration
f447a0a70 Remove program options from build system
11588c639 Replace boost program_options
fa7f8a776 contrib: Clone core repo in gitian-build
a4ba2388f depends: disable Werror for zmqlib release, causes ndk build to break
33539cb34 Extract MakeUnique into utilmemory.h
fabe28a0c qa: Temporarily disable test that reads the default datadir location
41a8c8dfa travis: Check that ~/.bitcoin is never created
d06330396 wallet: Avoid potential null pointer dereference in CWalletTx::GetAvailableCredit(...)
fa39f674a bench: Remove unused variable
020628e3a Tests for PSBT
a4b06fb42 Create wallet RPCs for PSBT
c27fe419e Create utility RPCs for PSBT
db6eb9009 [doc] Remove outdated comment about mining code ignoring CPFP
347b4ff82 Initialize m_next_send_inv_to_incoming
78f06e4af Migrate gitian-build.sh to python
c1afe3232 Change gitian-descriptors to use bionic instead
822a2a33a Modified in_addr6 cast in CConman class to work with msvc.
c64cc1bd9 scripted-diff: Fix references to share/rpcuser (now share/rpcauth)
be98b2d9a [QA] Add scantxoutset test
eec7cf7b3 scantxoutset: mention that scanning by address will miss P2PK txouts
94d73d32a scantxoutset: support legacy P2PK script type
892de1dfe scantxoutset: add support for scripts
78304941f Blockchain/RPC: Add scantxoutset method to scan UTXO set
a1a998cf2 wallet: Fix backupwallet for multiwallets
3fe836b78 [moveonly] Extract RescanWallet to handle a simple rescan
65a449f8e Explain when reindex-chainstate can be used instead of reindex
fa43a4138 bench_bitcoin: Avoid read/write to default datadir
ea80b81e2 test_bitcoin: Avoid read/write to default datadir
d45b344ff Bucket for inbound when scheduling invs to hide tx time
8b5ef2793 SignPSBTInput wrapper function
58a8e2891 Refactor transaction creation and transaction funding logic
e9d86a43a Methods for interacting with PSBT structs
12bcc64f2 Add pubkeys and whether input was witness to SignatureData
41c607f09 Implement PSBT Structures and un/serialization methods per BIP 174
417b6c1d2 bitcoinconsensus: invalid flags should be set to bitcoinconsensus_error type, add test cases covering bitcoinconsensus error codes
768981c93 build: add missing leveldb defines
17e6aa8e3 Privatize CWallet::AddToWalletIfInvolvingMe
b7f565094 Extract CWallet::MarkInputsDirty
eeeef80fb qa: Fix some TODOs in p2p_segwit
93de2891f wallet: assert to ensure accuracy of CMerkleTx::GetBlocksToMaturity
89e70f9d7 Fix that CWallet::AbandonTransaction would only traverse one level
561784039 Drop dead code from Stacks
a3fa4d6a6 QA: Fix bug in -usecli logic that converts booleans to non-lowercase strings
4704e5f07 [QA] add createwallet disableprivatekey test
c7b8f343e [Qt] Disable creating receive addresses when private keys are disabled
2f15c2bc2 Add disable privatekeys option to createwallet
cebefba08 Add option to disable private keys during internal wallet creation
904857551 Add FindScriptPubKey() to search the UTXO set
a0b604c16 [tests] skip rpc_zmq functional test when python3 zmq lib is not present
37d363dd4 Tools: fix BIND_NOW check in security-check.py
9995a602a Add facility to store wallet flags (64 bits)
075429a48 Use common SetDataDir method to create temp directory in tests.
4b6998455 Add depends 32-bit arm support for bitcoin-qt
d0b9405f9 Refactors `keystore.h` type aliases.
801cb307b doc: Add release notes for -printtoconsole and -debuglogfile changes
b9f4b211d tests: Use MAX_SCRIPT_ELEMENT_SIZE from script.py
fa4bf92be Remove dead service bits code
d6f39b6c6 Drop unused pindexRet arg to CMerkleTx::GetDepthInMainChain
bd9d0690d Remove unused argument to WitnessSigOps(...)
d1d7cfebd Remove unused argument to DefaultOptions(...)
05dbb0c04 Remove unused argument to ThreadHTTP(...)
3339ba28e Make g_enable_bip61 a member variable of PeerLogicValidation
beef7ec4b Remove useless mapRequest tracking that just effects Qt display.
85644354c Corrected text to reflect new[er] process of specifying fingerprints instead of individual keys.
974f0bf8e depends: Mention RISC-V known compilation issue with gcc-7.3.x
f40b3b82d [tests] functional test for createmultisig RPC
b9024fdda segwit support for createmultisig RPC
d58055d25 Move AddAndGetDestinationForScript from wallet to outputype module
9a44db2e4 Add outputtype module
0d1f38c45 depends: update zmq config.guess/config.sub for riscv support
409481c46 depends: latest config.sub
d7005e998 depends: latest config.guess
4b6ab0212 Remove unused argument to ProcessGetBlockData(...)
c469ecf22 net: Remove unused interrupt from SendMessages
5e362c0cf Fix command line help for -printtoconsole and -debuglogfile
63c16ed50 Use __cpuid_count for gnu C to avoid gitian build fail.
57889e688 bitcoin-tx: Stricter check for valid integers
6ad0328f1 Don't assert(foo()) where foo has side effects
800dea88a Upgrade Qt depends to 5.9.6
70afa65b1 Fix depends Qt5.9.4 mac build
28482efef Ugrade Qt depends to Qt5.9.4
1fc605a8a fix bench/prevector.cpp
161e8d40a RPC: Add new getzmqnotifications method.
747ee89b4 Docs: Modify policy to not translate command-line help
b81560029 Remove CombineSignatures and replace tests
ed94c8b55 Replace CombineSignatures with ProduceSignature
0422beb9b Make SignatureData able to store signatures and scripts
189cf35f3 Add simple bech32 benchmarks
b330c3001 Docs: Improve doc of options addnode, connect, seednode
07c493f2d scripted-diff: Replace NET_TOR with NET_ONION
1336d9cb3 Delete double semicolon in wallet.cpp and misc.cpp
49d1f4cdd Detect if char equals int8_t
2dcd7b4ec logging: avoid nStart may be used uninitialized in AppInitMain warning
b6edb4f5e Inline Sign1 and SignN
702ae1e21 [RPC] [wallet] allow getbalance to use min_conf and watch_only without accounts.
e3aab295e [tests] p2p_segwit: sync_blocks in subtest wrapper.
55e805085 [tests] p2p_segwit: remove unnecessary arguments from subtests.
25711c269 [tests] p2p_segwit: log and assert segwit status in subtest wrapper.
6839863d5 [tests] p2p_segwit: Make sure each subtest leaves utxos for the next.
bfe32734d [tests] p2p_segwit: wrap subtests with subtest wrapper.
2af4e398d [tests] p2p_segwit: re-order function definitions.
94a0134a4 [tests] p2p_segwit: standardise comments/docstrings.
f7c7f8ecf [tests] p2p_segwit: Fix flake8 warnings.
caac39b0a Make ZMQ notification interface instance global.
cf15761f6 [wallet] GetBalance can take a min_depth argument.
0f3d6e9ab [wallet] factor out GetAvailableWatchOnlyBalance()
7110c830f [wallet] deduplicate GetAvailableCredit logic
ef7bc8893 [wallet] Factor out GetWatchOnlyBalance()
4279da478 [wallet] GetBalance can take an isminefilter filter.
f95989b3e Fix AreInputsStandard test to reference the proper scriptPubKey
ea65182f0 [wallet] loadwallet shouldn't create new wallets.
c2e4fc84e bench: Simplify CoinSelection
ea49e06c8 tests: Fix incorrect documentation for test case cuckoocache_hit_rate_ok
685d1d811 [tests] Check signrawtransaction* errors on missing prevtx info
a3b065b51 Error on missing amount in signrawtransaction*
962d8eed5 Remove boost dependency (boost/assign/std/vector.hpp)
2fca6568f depends: Update Qt download url
c6fd0df4e Fix incorrect tests
359e2e352 depends: Add RISC-V support
2454a8558 Docs: More precise explanation of parameter "onlynet"
4132ad3bf Show symbol for inbound/outbound in peer table
66b2cf1cc Use immintrin.h everywhere for intrinsics
4c935e2ee Add SHA256 implementation using using Intel SHA intrinsics
fa87da2f1 qa: Avoid start/stop of the network thread mid-test
fa103a5d5 [qa] wallet_basic: Specify minimum required amount for listunspent
bb3de15ad qt: Move BitcoinGUI initializers to class, fix initializer order warning
faa2cf685 [qt] coincontrol: Remove unused qt4 workaround
1fabd59e7 Break circular dependency: init -> * -> init by extracting shutdown.h
e62fdfeea Drop unused init.h includes
9f8c54b1b Log warning message when deprecated network name 'tor' is used (e.g. option onlynet=tor)
faca0a862 doc: Clarify that mempool txiter is const_iterator
98d842cb5 travis: Build with --enable-debug (x86_64-unknown-linux-gnu)
94e52d13d Add -ftrapv to DEBUG_CXXFLAGS when --enable-debug is used
268400d31 [Refactor] CPU feature detection logic for SHA256
cec84c2f1 bench: Add missing pow.h header
faa24441e policy: Remove promiscuousmempoolflags
fa1eac9cd [qa] mininode: Expose connection state through is_connected
75848bcf4 [tests] Fix p2p_sendheaders race
d280617bf [qa] Add a test for merkle proof malleation
793290f94 Net: Fixed a race condition when disabling the network.
629a47a15 Document FreeBSD quirk. Fix FreeBSD build.
6690a2860 Restrict as much as possible in net_processing to translation unit
fe65bdec2 bugfix: Delete walletView in WalletFrame::removeWallet
000000035 Obsolete #!/bin/bash shebang
3f72d04e2 Fix parameter count check for importpubkey.
3a03d2a33 Qt: load wallet in UI after possible init aborts
1d4df02b7 [move-only] Move things only referenced in net_processing out of header file
02bbc0531 Rescope g_enable_bip61 to net_processing
cd3f4aa80 Decouple wallet version from client version
32d153fa3 For AVX2 code, also check for AVX, XSAVE, and OS support
38040c34e [tests] Remove accounts from wallet_importprunedfunds.py
df10f07db [wallet] Don't use accounts when checking balance in sendmany
e20918410 [wallet] deprecate sendfrom RPC method.
927e1150b Test: Harden lint-filenames.sh
fa324a8b1 doc: Rewrite some validation doc as lock annotations
0b82bac76 bugfix: Remove dangling wallet env instance
0ee77b207 ui: Support wallets unloaded dynamically
9f9b50d5f doc: Add release notes for unloadwallet RPC
ccbf7ae74 test: Wallet methods are disabled when no wallet is loaded
4940a20a4 test: Add functional tests for unloadwallet RPC
6608c369b rpc: Add unloadwallet RPC
7b23e6e13 Follow-up to #13454: Fix broken build by exporting LC_ALL=C
af6ac3b67 doc: Remove mention of Qt4 from build docs
462c71f71 test: Update travis to not test Qt4 anymore
907f73bbc gui: Remove QT_VERSION fallbacks for Qt < 5
471a4992d Move rpc/util.cpp from libbitcoin-util to libbitcoin-server
bb582a59c Add P2WSH destination helper and use it instead of manual hashing
eaba1c111 Add additional unit tests for invalid IsMine combinations
e6b9730c4 Do not expose invalidity from IsMine
42c499614 Docs: Improve readability of "Squashing commits"
9e2e5626d Fix CVE-2018-12356 by hardening the regex.
d92204c90 build: add warning to detect hidden copies in range-for loops
466e16e0e cleanup: avoid hidden copies in range-for loops
280924e67 doc: Add historical release notes for 0.16.1
c9924a275 Fix incorrect shell quoting in FreeBSD build instructions.
f618ebc4e validation: count blocks correctly for check level < 3
ad691f666 Add linter: Enforce the source code file naming convention described in the developer notes
cf01fd6f9 Avoid concurrency issue
3c292cc19 ScanforWalletTransactions should mark input txns as dirty
ed82f1700 have verifytxoutproof check the number of txns in proof structure
47776a958 Add linter: Make sure all shell scripts opt out of locale dependence using "export LC_ALL=C"
3352da8da Add "export LC_ALL=C" to all shell scripts
fa3d39ec5 doc: Remove note to install all boost dev packages
bad068ad9 build: Build system changes to support only Qt5
86edf4a2a expose CBlockIndex::nTx in getblock(header)
faf52f953 tests: Drop variadic macro
3d6985309 travis: Change Mac goal to all deploy so that travis can build all executables for Mac.
c2dfbb4a9 Add unavailable options to hidden options category
c8176b3cc Add linter: Make sure we explicitly open all text files using UTF-8 or ASCII encoding in Python
9fdf05d70 tests: Fix lock-order-inversion (potential deadlock) in DoS_tests. Reported by TSAN.
634bd9700 Explicitly specify encoding when opening text files in Python code
1e1eb6367 Improve coverage of SHA256 SelfTest code
51ed05a2b travis: Increase travis_wait time while verifying commits
537efe19e rpc: Extract GetWalletNameFromJSONRPCRequest from GetWalletForJSONRPCRequest
e5b2cd8e7 Use python instead of slow shell script on verify-commits
9882d1f04 Reset default -g -O2 flags when enable debug
98b181323 [build] Tune wildcards for LIBSECP256K1 target
f74894480 Only set fNewBlock to true in AcceptBlock when we write to disk
51cd508e2 When build fails due to lib missing, indicate which one
fa8071a09 qa: Log as utf-8
9b72c988a scripted-diff: Avoid temporary copies when looping over std::map
fa6e49731 rpc: Avoid "duplicate" return value for invalid submitblock
faa18ca04 wallet: Erase wtxOrderd wtx pointer on removeprunedfunds
f77e1d34f test: Add MempoolAncestryTests
a08d76bcf mempool: Calculate descendant maximum thoroughly
6d3568371 wallet: Switch to using ancestor/descendant limits
6888195b0 wallet: Strictly greater than for ancestor caps
322b12ac4 Remove deprecated TransactionWithinChainLimit
478475154 Switch to GetTransactionAncestry() in OutputEligibleForSpending
475a385a8 Add GetTransactionAncestry to CTxMemPool for general purpose chain limit checking
46847d69d mempool: Fix max descendants check
b9ef21dd7 mempool: Add explicit max_descendants
f6f8026e4 validation: check the specified number of blocks (off-by-one)
55771b7c6 Removed unused == operator from CMutableTransaction.
a42609857 Fix compiler warnings emitted when compiling under stock OpenBSD 6.3
abd2678ac Drop ParseHashUV in favor of calling ParseHashStr
fa6edfef3 qa: Remove portseed_offset from test runner
fafa27032 Make ReceivedBlockTransactions return void
f68049dd8 crypto: cleanup sha256 build
ebebedce2 speed up of tx_validationcache_tests by reusing of CTransaction.
9d6c9dbb8 lint: Add linter to error on #include <*.cpp>
16e3cd380 Clarify include recommendation
6d10f4373 Enforce the use of bracket syntax includes ("#include <foo.h>")
906bee8e5 Use bracket syntax includes ("#include <foo.h>")
698cfd081 docs: Mention lint-locale-dependence.sh in developer-notes.md
0a4ea2f45 build: Add linter for checking accidental locale dependence
25bc9615b Document validationinterace callback blocking deadlock potential.
85f0135ea utils: checking for bitcoin addresses in translations
2acd1d671 Drop uint 256 not operator
ec3073a27 index: Move index DBs into index/ directory.
89eddcd36 index: Remove TxIndexDB from public interface of TxIndex.
2318affd2 MOVEONLY: Move BaseIndex to its own file.
f376a4924 index: Generalize logged statements in BaseIndex.
61a1226d8 index: Extract logic from TxIndex into reusable base class.
e5af5fc6f db: Make reusable base class for index databases.
9b0ec1a7f db: Remove obsolete methods from CBlockTreeDB.
0231ef6c6 cli: Ignore libevent warnings
57ba401ab Enable double-SHA256-for-64-byte code on 32-bit x86
989c8990b Rename “OS X” to the newer “macOS” convention
81bbd32a2 build: Guard against accidental introduction of new Boost dependencies
f41d339b7 bench: Use non-throwing ParseDouble(...) instead of throwing boost::lexical_cast<double>(...)
253f59290 Add stdin, stdout, stderr to ignored export list
fc6a9f2ab Use IN6ADDR_ANY_INIT instead of in6addr_any
908c1d774 GCC-7 and glibc-2.27 compat code
2b30ccc30 [docs] update transifex doc link
1e4eec47b doc: split FreeBSD build instructions out of build-unix.md
86967b2e3 Add option to use docker for gitian-build.sh
fa4760fbb qa: Increase includeconf test coverage
f7e153e95 [wallets] [docs] Add release notes for createwallet RPC.
32167e830 [wallet] [tests] Add tests for `createwallet` RPC.
db56755ca Fix "gmake check" under OpenBSD 6.3 (probably *BSD): Avoid using GNU grep specific regexp handling
493a16694 bench: Don't return a bool from main
fa26cf015 qa: Fixup setting of PATH env var
faac7a2db qa: Avoid checking reject code for now
fa36aa796 wallet: Prevent segfault when sending to unspendable witness
2ce81867b [tests] Add logging to provide anchor points when debugging failures.
903055730 Test gArgs erroring on unknown args
4f8704d57 Give an error and exit if there are unknown parameters
174f7c808 Use a struct for arguments and nested map for categories
6b8b63af1 Generic TransactionSignatureCreator works with both CTransaction and CMutableTransaction
fa2d83eb4 travis: Skip cache for lint stage
3d4fa8358 Stop translating command line options
83102388c doc: update bitcoin-dot-org links in release-process.md
e9a1881b9 refactor: add a function for determining if a block is pruned or not
c814e2e7e Remove template matching and pseudo opcodes
4defdfab9 [MOVEONLY] Move unused Merkle branch code to tests
4437d6e1f 8-way AVX2 implementation for double SHA256 on 64-byte inputs
230294bf5 4-way SSE4.1 implementation for double SHA256 on 64-byte inputs
1f0e7ca09 Use SHA256D64 in Merkle root computation
d0c963288 Specialized double sha256 for 64 byte inputs
fa7a6cf1b policy: Treat segwit as always active
f44a0ebff Ensure gitian-build.sh uses bash
93843f689 doc: remove leftover check-doc documentation
942131774 [wallet] [rpc] Add `createwallet` RPC
fd9b3a718 test: Output should be unlocked when spent
54c3bb4cf wallet: Unlock spent outputs
59e9688ed Travis: Build tests on Ubuntu 18.04 with docker
c004ffc9b Make handling of invalid in IsMine more uniform
fa3c910bf test: Move linters to test/lint, add readme
c865ee1e7 Fix FreeBSD build by including utilstrencodings.h
e56771365 Do not use uppercase characters in source code filenames
419a1983c docs: Add a note about the source code filename naming convention
fa865efa4 qa: Fix wallet_listreceivedby race
b16ab9af0 Report progress in ReplayBlocks while rolling forward
9e305b56f build: split warnings out of CXXFLAGS
41d0476f6 Tests: Add data file
4cbfb6aad Tests: Test new getblockstats RPC
35e77a028 RPC: Introduce getblockstats
80b4910f7 wallet: Use shared pointer to retain wallet instance
fa9da85b7 qa: Initialize lockstack to prevent null pointer deref
870bd4c73 Update functional RBF test to check replaceable flag
1680b8bf0 docs: Update OpenBSD build instructions for OpenBSD 6.3
97c112d4c Declare TorReply parsing functions in torcontrol_tests
be87c6f83 [wallet] Fix incorrect comment for DeriveNewSeed.
ebec7317c Drop the chain argument to GetDifficulty
60ebc7da4 trivial: Mark overrides as such.
5f3cbde9d Increased max width of amount field to prevent number overflow bug.
6249021d1 [docs] Add release notes for HD master key -> HD seed rename
79053a5f2 [rpc] [wallet] Add 'hdmasterkeyid' alias return values.
c75c35141 [refactor] manually change remaining instances of master key to seed.
131d4450b scripted-diff: Rename master key to seed
2885c131b Qt: use [default wallet] as name for wallet with no name
6aa33fead Drop UpdateTransaction in favor of UpdateInput
13c3a659c Qt/Bugfix: fix handling default wallet with no name
9994d01d8 Add Unit Test for SingleThreadedSchedulerClient
2e7513471 fixup! ui: Support wallets loaded dynamically
b0d2ca9fb wallet: Exit SyncMetaData if there are no transactions to sync
c722f00a7 [qt] Added satoshi unit "Satoshi (sat)" will be displayed in dropdowns and status bars. "sat" will be used when appended to numbers.
4ddbcbf8c [qt] BitcoinUnits::format with zero decimals Formatting with zero decimals will now result in 123 instead of 123.0
9d4f9421a doc: Bump to Ubuntu Bionic 18.04 in build-windows.md
84f41946b break circular dependency: random/sync -> util -> random/sync
4b62bdf51 Wallet: Refactor ReserveKeyFromKeyPool for safety
dae0d13bb RPCAuth Detection in Logs
4138f42d2 Revert "Merge #12870: make clean removes src/qt/moc_ files"
82dda6bed GUI: Allow generating Bech32 addresses with a legacy-address default
7ab1c6f6a GUI: Rephrase Bech32 checkbox text/tooltip
a7b295e91 Add circular dependencies script
67e0e0414 [wallet] [docs] Update release notes for removing `getlabeladdress`
81608178c [wallet] [rpc] Remove getlabeladdress RPC
0e674ba55 ui: Support wallets loaded dynamically
1c8fe0bf9 ui: Remove unnecessary variable fFirstWallet
cd53981b3 [docs] Add release notes for `loadwallet` RPC.
a46aeb690 [wallet] [tests] Test loadwallet
5d152601e [wallet] [rpc] Add loadwallet RPC
876eb6468 [wallet] Pass error message back from CWallet::Verify()
e0e90db07 [wallet] Add CWallet::Verify function
dd435ad40 Add unit tests for signals generated by ProcessNewBlock()
73cd5b25b [gui] Add proxy icon in statusbar
470316c3b [wallet] setup wallet background flushing in WalletInit directly
59b87a27e [wallet] Fix potential memory leak in CreateWalletFromFile
cbede7dbf [qt] OptionsDialog: add prune setting
0bf431870 net: Serve blocks directly from disk when possible
5b35b9276 Break circular dependency: chain -> pow -> chain
66b0b1b2a Add compile time checking for all cs_wallet runtime locking assertions
87fe292d8 doc: Mention disabling BIP61 in bips.md
fe16dd822 net: Add option `-enablebip61` to configure sending of BIP61 notifications
fa0fc1bc7 bench: Add block assemble benchmark
3d8ae7465 travis: Rename the build stage "check_doc" to "lint"
a8da482a8 Bump wallet version for pre split keypool
dfcd9f3e6 Use a keypool of presplit keys after upgrading to hd chain split
5c50e93d5 Allow -upgradewallet to upgradewallets to HD
2bcf2b52a Test sethdseed
b5ba01a18 Add 'sethdseed' RPC to initialize or replace HD seed
a3ae8e687 Fix concurrency-related bugs in ActivateBestChain
ecc3c4a01 Do not unlock cs_main in ABC unless we've actually made progress.
506c5785f Enable Travis checking for two Python linting rules we are currently not violating
0d31ef476 Enable W191 and W291 flake8 checks. Remove trailing whitespace from Python files. Convert tabs to spaces.
2352aa9f3 test: Ensure that recursive -includeconf produces appropriate warnings
c5bcc7dbe util: warn about recursive -includeconf arguments in configuration files
7384a3584 [tests] Remove spurious error log in p2p_segwit.py
09c669990 [qa] Handle disconnect_node race
08ebdba82 [qa] Avoid printing to console during cache creation
4d4185a4f Make gArgs aware of the arguments
11fa6bb66 Bugfix: ensure consistency of m_failed_blocks after reconsiderblock
beee49ba1 [tests] Allow stderr to be tested against specified string
e5036715c [Tests] Use LIBC_FATAL_STDERR_=1 in tests
c22ce8a7b [Tests] Write stdout/stderr to datadir instead of temp file.
b6f0b4d85 wallet: Improve logging when BerkeleyDB environment fails to close
18c0b8430 [bitcoin-11004] creating another jobs for the CHECK_DOC=1, separated from the core jobs
12d1b77f7 [tests] Fixed intermittent failure in p2p_sendheaders.py.
f08a38559 [qt]: changes sendcoinsdialog's box layout for improved readability.
fac1e1f3b qa: Remove unused option --srcdir
57f34630f Refactor SHA256 code
0df017889 Benchmark Merkle root computation
a2f678d35 Bugfix: the end of a reorged chain is invalid when connect fails
f30e9be4c RPC Docs: gettxout*: clarify bestblock and unspent counts
d8c4998f3 Fix typos
cda8e36f0 Refactor: RPC: Separate GetBlockChecked() from getblock()
43f3dec00 Remove enum specifier (to avoid re-declare scoped enum as unscoped)
9aac9f90d replace modulus with FastMod
47782b49e Add Clang thread safety analysis annotations
0e2dfa8a6 Fix missing locking in CTxMemPool::setSanityCheck(double dFrequency)
6bc5b7100 Fix missing locking in CTxMemPool::check(const CCoinsViewCache *pcoins)
cbba1d2da Add compile time checking for all ::mempool.cs runtime locking assertions
dd3c07acc Separate HaveKey function that checks whether a key is in a keystore
fac1223a5 Cache witness hash in CTransaction
faab55fbb Make CMutableTransaction constructor explicit
364bae5f7 qa: Pad scriptPubKeys to get minimum sized txs
7485488e9 Policy to reject extremely small transactions
0f8719bb0 Add transaction tests for constant scriptCode
9dabfe49c Add constant scriptCode policy in non-segwit scripts
2f1a30c63 Fix MAX_STANDARD_TX_WEIGHT check
a508091c5 doc: Mention good first issue list in CONTRIBUTING.md
c3f34d06b Make it clear which functions that are intended to be translation unit local
a53f0feff Add some checks for invalid recursion in IsMine
b5802a9f5 Simplify IsMine logic
4e9182053 Make IsMine stop distinguishing solvable/unsolvable
6d714c341 Make coincontrol use IsSolvable to determine solvability
fad63ebe0 [logging] Don't incorrectly log that REJECT messages are unknown.
16be13345 Fix rescanblockchain rpc to property report progress
264c64380 wallet: Reset BerkeleyDB handle after connection fails
20ce5af4c Print a log message if we fail to shrink the debug log file
a59dac35a refactor: Avoid extra lookups of mapAddressBook in listunspent RPC
d76962e05 rpc: Reduce cs_main lock in listunspent
5d536619a [tests] Remove 'account' API from wallet functional tests
21f568055 Trivial: s/SetBestChain/ChainStateFlushed in comments after #13106
4b75dcf0e devtools: Make linter check LogPrint calls
ff2ad2d56 Add missing newlines to LogPrint debug logging
3fdc5fee1 Make sure initialization occurs in the constructor
c4fda7672 wallet: Interrupt rescan on shutdown request
29c9bdcc1 Handle unsuccessful fseek(...):s
0bd4cd398 logging: remove unused return value from LogPrintStr
76f344de6 logging: Fix potential use-after-free in LogPrintStr(...)
25b7ab9c0 doc: Add release notes for -includeconf
0f0badd5a test: Test includeconf parameter.
2a89b0c81 rpcauth: Make it possible to provide a custom password
12ad33a8e [doc] qt: fixes broken link on readme
a533834d5 [tests] Fix flake8 warnings in several wallet functional tests
1408d6cf7 Revert #12769: Add systemd service to bitcoind in debian package
ddebde71e Add Windows shutdown handler
457c2da2a Remove python2 from configure.ac
39d291191 [Docs] Add version footnote to tor.md
a95bf6422 [tests] Fix race in rpc_deprecated.py
56921f936 wallet: Add Clang thread safety annotations for variables guarded by cs_db
9b78ef3ed nit: descendent should be spelled descendant even in the release-notes
244f4baf0 scheduler: Add Clang thread safety annotations for variables guarded by m_cs_callbacks_pending
f7c414daa nit: fix typo for entry description string
fa85de9ff Remove script to clean up datadirs
8c2d695c4 util: Store debug log file path in BCLog::Logger member.
8e7b96138 scripted-diff: Rename BCLog::Logger member variables.
1eac317f2 util: Refactor GetLogCategory.
8499f15e6 Add Clang thread safety annotations for variables guarded by cs_warnings
cf13ad23d Add Clang thread safety annotations for variables guarded by cs_nTimeOffset
012dec034 Add Clang thread safety annotations for variables guarded by cs_rpcWarmup
968b76f77 Add missing cs_KeyStore lock
4bcd5bb87 Add locking annotations for variables guarded by cs_KeyStore
3316a9ebb util: Encapsulate logCategories within BCLog::Logger.
6a6d764ca util: Move debug file management functions into Logger.
f55f4fcf0 util: Establish global logger object.
58f9a0a00 Use --failfast when running functional tests on Travis
bf720c146 Add --failfast option to functional test runner
9cb6cdc59 Simplify semantics of ChainStateFlushed callback
50b6533aa scripted-diff: Rename SetBestChain callback ChainStateFlushed
d8e9a2ac7 Remove "rpc" category from GetWarnings
7da3b0adb rpc: Move RPC_FORBIDDEN_BY_SAFE_MODE code to reserved section
ab3f4dd27 tests: Add test for 64-bit PE, modify 32-bit test results
aa85dcf47 build: sync ax_boost_chrono/unit_test
2ae705d84 Remove Safe mode
629ff8c35 -includeconf=<path> support in config handler, for including external configuration files
bd9d67b75 Don't test against min relay fee information in mining_prioritisetransaction.py
66dc662c8 Add compile time checking for all cs_KeyStore runtime locking assertions
9b2704777 [doc] Include txindex changes in the release notes.
ed77dd6b3 [test] Simple unit test for TxIndex.
6d772a3d4 [rpc] Public interfaces to GetTransaction block until synced.
a03f804f2 [index] Move disk IO logic from GetTransaction to TxIndex::FindTx.
e0a3b8003 [validation] Replace tx index code in validation code with TxIndex.
8181db88f [init] Initialize and start TxIndex in init code.
f90c3a62f [index] TxIndex method to wait until caught up.
70d510d93 [index] Allow TxIndex sync thread to be interrupted.
94b4f8bbb [index] TxIndex initial sync thread.
34d68bf3a [index] Create new TxIndex class.
c88bcec93 [db] Migration for txindex data to new, separate database.
0cb830324 [db] Create separate database for txindex.
2c71edc2f [wallet] [rpc] Fix importaddress help text
820d31f95 Add "bip125-replaceable" flag to mempool RPCs
5109fc4a9 [tests] [qt] Add tests for address book manipulation via EditAddressDialog
9c01be1b8 [tests] [qt] Introduce qt/test/util with a generalized ConfirmMessage
8cdcaee4c [qt] Display more helpful message when adding a send address has failed
c5b277033 Add purpose arg to Wallet::getAddress
3e5300433 test: add rpcauth-test to AC_CONFIG_LINKS to fix out-of-tree make check
6674a75bf [tests] Make rpcauth.py testable and add unit tests
fa02c5b38 qa: Clarify documentation for send_txs_and_test
e2f58f421 wallet: Make vpwallets usage thread safe
4d330399e List support for BIP173 in bips.md
3ee4be105 Make tests pass after 2020
fac0db0ff wallet: Make fee settings non-static members
cf0277928 Add logging and error handling for file syncing
aee80b0ef qt: Don't log to console by default
8b8032e28 test: Add rpcauth pair that generated by rpcauth
6ad47b04b trivial: Fix relevent typo
fa811b0b1 qa: Normalize executable location
c1d742025 [tests] Fix feature_block flakiness
4d355bfb2 [tests] tidy up blocktools.py
cab8be5ad [tests] Fix flake8 warnings in blocktools.py
b184127db [doc][trivial] no retargeting in regtest mode
2a87b1b07 Add systemd service for bitcoind
9085532d3 Sync contrib/debian from Matt Corallo's PPA
7d0f80bbf Use anonymous namespace instead of static functions
b61fb7113 Mention removal of bare multisig IsMine in release notes
9c2a8b8d3 Do not treat bare multisig as IsMine
08f322865 Optimization: only test for witness scripts at top level
3619735b0 Track difference between scriptPubKey and P2SH execution in IsMine
ac6ec6252 Switch to a private version of SigVersion inside IsMine
19fc97309 Do not expose SigVersion argument to IsMine
1accfbcf4 Output values for "min relay fee not met" error
abd58a2fc Fix for utiltime to compile with msvc.
1f838394b [wallet] [tests] Test disallowed multiwallet params
3476e3c48 [wallet] Fix zapwallettxes/multiwallet interaction.
80a5e5953 [qa] Attach node index to test_node AssertionError and print messages
defffb358 trivial: Improve include comment in src/interfaces/wallet.h
1bf3f33b4 node: Removed unused wallet-related methods from the Node interface.
b38200459 benchmark: Removed bench/perf.cpp
fb1dfbbec Remove unused IsMine overload
952d8213a Make CScript -> CScriptID conversion explicit
e4d0b4437 Consistently log CValidationState on failure
3c058fdcc wallet: Add HasWallets
373aee26c wallet: Add AddWallet, RemoveWallet, GetWallet and GetWallets
b77b6e234 MOVEONLY: Move logging code from util.{h,cpp} to new files.
6efd9644c refactor: Drop CWalletRef typedef
3cc9094d3 scripted-diff: Rename CChainState::g_failed_blocks to m_failed_blocks
7de1de7da Add new fee structure with all sub-fields denominated in BTC
fa3bb183a bench: Amend mempool_eviction test for witness txs
962d223e5 bench: Move constructors out of mempool_eviction hot loop
18326ae2a [doc] Add comments for chainparams.h, validation.cpp
cead28bbe [docs] Add release notes for deprecated 'account' API
72c9575f7 [wallet] [tests] Add tests for accounts/labels APIs
d41a42056 test: Fix dangling wallet pointer in vpwallets
109e05dcd [wallet] [rpc] Deprecate wallet 'account' API
3576ab126 [wallet] [rpc] Deprecate account RPC methods
9e49db242 Make --enable-debug to pick better options
6a3b0d3d1 Print to console by default when not run with -daemon
fadfbd33a qa: Add test for orphan handling
d86edd3d3 Hold cs_main while calling UpdatedBlockTip() and ui.NotifyBlockTip
2c084a660 net: Minor accumulated cleanups
3db1ba01c [tests] Set -deprecatedrpc=accounts in tests
4e671f035 [tests] Rename rpc_listtransactions.py to wallet_listtransactions.py
a28b907f8 [wallet] [rpc] Remove duplicate entries in rpcwallet.cpp's CRPCCommand table
67bf2aa68 qt:Show the entire Window when double clicking on taskbar
150b2f026 Default to defining endian-conversion DECLs in compat w/o config
fad29582c [doc] build-windows: Switch to Artful, since Zesty is EOL
9db48c563 tests: Remove redundant bytes²
643aad17f Enable additional flake8 rules
f020aca29 Minor Python cleanups to make flake8 pass with the new rules enabled
b95f9a61e tests: Remove compatibility code not needed now when we're on Python 3
d1b828bb4 correcting the array name from pnSeeds6 to pnSeed6
7d8a8cc25 Avoid launching as admin when NSIS installer ends.
cd0e1e91d Fix inconsistent namespace formatting guidelines
9e50c337c Note new weight field in release-notes.
d0d9112b7 Test new weight field in p2p_segwit
2874709a9 Expose a transaction's weight via RPC
2bff47299 [contrib] convert test-security-check to python3
958bf4048 add lint tool to check python3 shebang
54a5a2115 [MOVEONLY] Turn CScript::GetOp2 into a function and move to cpp
6a7456ad6 [MOVEONLY] Move CSCript::FindAndDelete to interpreter
33a8ecfbc Delete unused non-const-iterator CSCript::GetOp overloads
2fb168b55 Make iterators in CScript::FindAndDelete const
8b56fc0b9 [qa] Test that v0 segwit outputs can't be spent pre-activation
ccb8ca42a Always enforce SCRIPT_VERIFY_WITNESS with P2SH
5c31b20a3 [qa] Remove some pre-activation segwit tests
95749a583 Separate NULLDUMMY enforcement from SEGWIT enforcement
ce650182f Use P2SH consensus rules for all blocks
6ec78f146 wallet: Refactor g_wallet_init_interface to const reference
193612567 wallet: Make WalletInitInterface members const
e87fefc60 test: Add rpc_bind test to default-run tests
152701568 Avoid std::locale/imbue in DateTimeStrFormat
8cbc5c4be Drop dead code CScript::Find
2eb5036c3 macOS: Prevent Xcode 9.3 build warnings
60f61f995 Tighten up bech32::Decode(); add tests.
339730a6d logging: bypass timestamp formatting when not logging
ae1d2b030 Give an error when rescan is aborted by the user
69b01e6f8 Add cancel button to rescan progress dialog
159c32d1f Add assertion to guide static analyzers. Clang Static Analyzer needs this guidance.
fd447a6ef Fix dead stores. Values were stored but never read. Limit scope.
0ef7b403d [doc] Fix comment in FindForkInGlobalIndex
fae58eca9 tests: Avoid copies of CTransaction
fa72f34c6 bitcoin-tx: Remove unused for loop
6cba60ace speed up wallet_hd.py and clarify/augment checks
72ec5b776 debug log number of unknown wallet records on load
5b4fc3eca depends: Fix Qt build with XCode 9.3
545e85ecc Add AssertLockHeld assertions in CWallet::ListCoins
1499fdc35 Add shell script linting: Check for shellcheck warnings in shell scripts
c25321ff9 Add config changes to release notes
5e3cbe020 [tests] Unit tests for -testnet/-regtest in [test]/[regtest] sections
005ad2664 ArgsManager: special handling for -regtest and -testnet
608415d4e [tests] Unit tests for network-specific config entries
68797e20f ArgsManager: Warn when ignoring network-specific config setting
d1fc4d95a ArgsManager: limit some options to only apply on mainnet when in default section
8a9817d17 [tests] Use regtest section in functional tests configs
30f94074c [tests] Unit tests for config file sections
95eb66d58 ArgsManager: support config file sections
4d34fcc71 ArgsManager: drop m_negated_args
aff16fd51 depends: Add 'make clean' and 'make clean-all' rules
0000d8f72 Document how FlushStateMode::NONE is handled
2311c7cc8 Call FlushStateToDisk(...) regardless of fCheckForPruning
459ea5836 rpc: Drop redundant testing of signrawtransaction prevtxs args
1e7813e9b Remove redundant initializations from the constructor
12e7c558a Ignore macOS daemon() depracation warning
3673ca36e ArgsManager: keep command line and config file arguments separate
c55aa4f27 test: Fix sign for expected values
3450a9b25 Extract consts for WITNESS_V0 hash sizes
41ba06180 [docs] Add release notes for wallet 'label' API.
189e0ef33 [wallet] [rpc] introduce 'label' API for wallet
40c58866c Fix illegal default `addProxy` and `addrSeparateProxyTor` settings.
fad0fc3c9 Refine travis check for duplicate includes
be6783121 Make DummySignatureCreator a singleton
190b8d2dc Make BaseSignatureCreator a pure interface
9b9d71726 wallet: Remove redundant lambda function arg in handleTransactionChanged
7ef9cd849 Increase entropy in test temp directory name
f6dfb0f50 Reorder travis builds
156db42c3 tests: run tests in parallel
66f32551b tests: split up actual tests and helper files
f13187265 Initialize non-static class members where they are defined
73bc1b7cd Initialize editStatus and autoCompleter. Previously not initialized where defined or in constructor.
7039319db Docs: fixed link, replaced QT with Qt
23abfb7b7 added logging line back that was accidentally removed with #10762
75d0e4c54 [qa] Delete cookie file before starting node
cab0824c9 Logprint the start of a rescan
b86730a4d util: Remove designator initializer from ScheduleBatchPriority
cff66e6a2 util: Pass pthread_self() to pthread_setschedparam instead of 0
fa385c3a8 [doc] devtools: Setup ots git integration
c36b720d0 Add Travis check for duplicate includes
280023f31 Remove duplicate includes
bf08fc5b6 test: Assert on correct variable
ece88fd26 Introduce BigEndian wrapper and use it for netaddress ports
fab9095d4 qa: Windows fixups for functional tests
e36a0c085 [qa] Ensure bitcoind processes are cleaned up when tests end
2b2b96cd4 Use std::bind instead of boost::bind to re-lock the wallet
662d19ff7 [rpcwallet] Clamp walletpassphrase value at 100M seconds
41ff9675a list the types of scripts we should consider for a witness program
9b0f0c551 Add m_ prefix to WalletBatch::m_batch
398c6f0f9 Update walletdb comment after renaming.
ea23945db scripted-diff: Rename wallet database classes
d207207fd [logging] add lint-logs.sh to check for newline termination.
5c21e6c6d [logging] Comment all continuing logs.
0314ad4e6 doc: add qrencode to brew install instructions
17780d6f3 scripted-diff: Avoid `interface` keyword to fix windows gitian build
09b30db2b Asserts that the tx version number is a signed 32-bit integer.
d1b622b5a tests: Add check for test suite name uniqueness in lint-tests.sh
dc8067b3e tests: Add note about uniqueness requirement for test suite names
3ebfb2dad tests: Avoid test suite name collision in wallet crypto_tests
01189ab9a build: Show enabled sanitizers in configure output
891beb0f8 [test] fundrawtransaction: lock watch-only shared address
b119e7873 docs: Fix conflicting statements about initialization in developer notes
d894894aa wallet: Refactor to WalletInitInterface* const g_wallet_init_interface
39bc2faa2 wallet: Make WalletInitInterface and DummyWalletInit private
77a733a99 [tests] Add additional unit tests for -nofoo edge cases
af173c2be [tests] Check GetChainName works with config entries
fa27f1c23 [tests] Add unit tests for ReadConfigStream
087c5d204 ReadConfigStream: assume the stream is good
6d5815aad Separate out ReadConfigStream from ReadConfigFile
834d30341 [tests] Add unit tests for GetChainName
11b6b5b86 Move ChainNameFromCommandLine into ArgsManager and rename to GetChainName
1e46d8ae8 Get rid of ambiguous OutputType::NONE value
9272d7053 Support serializing Span<unsigned char> and use that instead of FLATDATA
833bc0858 Add Slice: a (pointer, size) array view that acts like a container
f63bc5e06 wallet: Initialize m_last_block_processed to nullptr. Initialize fields where defined.
a5263fb51 doc: Use bitcoind in Tor documentation
c9cce0a7f Tests: Add Metaclass for BitcoinTestFramework
996013769 Add developer notes about blocking GUI code
9a61eed1f Use WalletBalances struct in Qt
56f33ca34 Remove direct bitcoin calls from qt/sendcoinsdialog.cpp
e872c93ee Remove direct bitcoin access from qt/guiutil.cpp
58845587e Remove direct bitcoin calls from qt transaction table files
3cab2ce5f Remove direct bitcoin calls from qt/paymentserver.cpp
3ec2ebcd9 Remove direct bitcoin calls from qt/addresstablemodel.cpp
827de038a Remove direct bitcoin calls from qt/coincontroldialog.cpp
a0704a899 Remove most direct bitcoin calls from qt/walletmodel.cpp
90d4640b7 Remove direct bitcoin calls from qt/optionsdialog.cpp
582daf6d2 Remove direct bitcoin calls from qt/rpcconsole.cpp
3034a462a Remove direct bitcoin calls from qt/bantablemodel.cpp
e0b66a3b7 Remove direct bitcoin calls from qt/peertablemodel.cpp
d7c2c9594 Remove direct bitcoin calls from qt/intro.cpp
fe6f27e6e Remove direct bitcoin calls from qt/clientmodel.cpp
5fba3af21 Remove direct bitcoin calls from qt/splashscreen.cpp
c2f672fb1 Remove direct bitcoin calls from qt/utilitydialog.cpp
3d619e9d3 Remove direct bitcoin calls from qt/bitcoingui.cpp
c0f2756be Remove direct bitcoin calls from qt/optionsmodel.cpp
71e0d9087 Remove direct bitcoin calls from qt/bitcoin.cpp
5b10ab011 [trivial] Add newlines to end of log messages.
4a6c0e3dc Modernize best block mutex/cv/hash variable naming
45dd13503 Fix csBestBlock/cvBlockChange waiting in rpc/mining
ea73b84d2 Add src/interface/README.md
2ebad11cf make clean removes src/qt/moc_ files
55efc1f62 [tests] simplify binary and hex response parsing in interface_rest.py
ade5964e3 [tests] only use 2 nodes in interface_rest.py
ad00fbed3 [tests] refactor interface_rest.py to avoid code repetition
7a3181a76 [tests] Make json request building more consistent in interface_rest.py
3fd4490db [tests] improve logging and documentation in interface_rest.py
abf190e4e [tests] fix flake8 warnings in interface_rest.py test
4e0568715 [wallet] [rpc] [doc] importprivkey: hint about importmulti
8dd547d82 Adding logging for loop iteration level in p2p_sendheaders.py
b386970d0 [moveonly] Extract HelpRequested to dry up the help options testing
89fe5feea [tests] Stop feature_block.py from blowing up memory.
a5bca1309 Bugfix: Include <memory> for std::unique_ptr
9c92c8c82 [tests] Remove Comparison Test Framework
e80c640d7 [tests] Remove bip9-softforks.py
fafcad38c doc: Add testmempoolaccept to release-notes
177b875ad Avoid travis lint-include-guards error
b63f23c17 Add P2P, Network, and Qt categories to the desktop icon
faace1386 qa: Match full plain text by default
fa6f12af6 travis: Run verify-commits only on cron jobs
05c03d124 rpc: fix type mistmatch in listreceivedbyaddress
63048ec73 [tests] Test starting bitcoind with -h and -version
9df1a9c00 test: Remove travis checkout depth
ea04bf786 Enable flake8 warning F841 ("local variable 'foo' is assigned to but never used")
169f3e863 Remove assigned but never used local variables
94715767a [verify-commits] Add some additional useful documentation.
ccedbafd7 Increase LevelDB max_open_files unless on 32-bit Unix.
cb1e319fe Bugfix: RPC: savemempool: Don't save until LoadMempool() is finished
f50975b13 [contrib] fixup symbol-check.py Python3 support
5de2b18c6 [contrib] fixup security-check.py Python3 support
f526046ef adapt bumpfee change discard test to be more strict and add note on p2sh discrep
5a67c0524 [tests] Fix intermittent rpc_net.py failure.
6feb46c37 Add --with-sanitizers option to configure
0bd2ec548 Improve formatting of developer notes
de7e93138 Add Marco-expired-key-signed-commits to allow-revsig-commits
99f6d48e2 Revert "test: Update trust git root".
0c17e2763 init: Remove help text for non-existent -fuzzmessagestest arg
05120ee75 contrib: Remove unused import string
136084470 contrib: Fix check-doc script regexes
839430085 [Tests] fix a typo in TestNode.assert_start_raises_init_error()
ffb033a6d test: List any failed tests at the end of test_runner output
18740586b Make base58 python contrib code work with python3
f92541f7e test: Make summary row bold-red if any test failed
f7683cba7 Track negated arguments in the argument paser.
4f872b245 Add additional tests for GetBoolArg()
d71bedb95 qa: Fix function names in feature_blocksdir
a16c6d23c Fix error in memory usage calculation (unintended integer division)
c7ec52438 [wallet] Add dummy wallet init class
49baa4a46 [wallet] Use global g_wallet_init_interface to init/destroy the wallet.
0fee2b418 doc: Add note about our preference for scoped enumerations ("enum class")
d54874d79 Set SCHED_BATCH priority on the loadblk thread.
9142dfea8 Use explicit casting in cuckoocache's compute_hashes(...) to clarify integer conversion
adc258608 doc: Refer to witness reserved value as spec. in the BIP
4ae7d1529 init: Fix help message for checkblockindex
bc6fdf2d1 Change all python files to use Python3
fc7c32fc6 do not truncate .dat extension for wallets in gui
342fb8034 qt: Avoid resetting on resetguisettigs=0
caaf9722f [wallet] Create wallet init interface.
5fb54210a [wallet] Move wallet init functions into WalletInit class.
b466f6be9 [Tests] Use blockmaxweight where tests previously had blockmaxsize
61f82981b rpc: Adjust ifdef to avoid unreachable code
779c5f984 Qt: hide RPCConsole wallet selector when no wallets are present
dc6f150f3 Qt: show wallet name in request dlg in case of multiwallet
4826ca4b8 Qt: show wallet name in send confirmation dlg in case of multiwallet
cfa4133ce GUI: RPCConsole: Log wallet changes
b6d04fc7c Qt: Get wallet name from WalletModel rather than passing it around
12d8d2681 Qt: When multiple wallets are used, include in notifications the name
d1ec34a76 Qt: QComboBox::setVisible doesn't work in toolbars, so defer adding it at all until needed
d49cc70e6 Qt: Add wallet selector to debug console
6a318e48a Reduce variable scopes
ac8a1d092 [RPC] Remove field in getblocktemplate help that has never been used
d40f06a3d Introduce interface for signing providers
3a0f8d795 Qt: Remove unused method setupAmountWidget(...)
4d74c78c6 Add username and ip logging for RPC method requests
9cb9af8c4 [REST] Handle UTXO retrieval when ignoring the mempool
1fdc7c41b Make CTxMemPool::isSpent() const
b55555da3 rpc: Add testmempoolaccept
f381299d6 Move CKeyStore::cs_KeyStore to CBasicKeyStore
25eb9f502 Inline CKeyStore::AddKey(const CKey &) in CBasicKeyStore
bc308ba99 [CI]: bump travis timeout for make check to 50m
6acb02d63 add release note for sendmany output shuffling
cf6ef3c13 shuffle sendmany recipients ordering to shuffle tx outputs
30d1a0ae3 Docs: Improve documentation on standard communication channels
3bcc0059b Add lint-include-guards.sh which checks include guard consistency
8fd6af89a Fix missing or inconsistent include guards
8af65d96f Document include guard convention
4757c04cb [config] Remove blockmaxsize option
12982682a [tests] Change feature_csv_activation.py to use BitcoinTestFramework
db7ffb9d1 [tests] Move utility functions in feature_csv_activation.py out of class.
0842edf9e [tests] Remove nested loops from feature_csv_activation.py
76a9aacd3 Move compressor utility functions out of class
a7c45bce9 Add native support for serializing char arrays without FLATDATA
57dae3fc4 Replace boost::call_once with std::call_once
5805d6fea feebumper: discard change outputs below discard rate
2fb9c1e66 shuffle selected coins before transaction finalization
b7fbcc53d Qt: Warn users about invalid-BIP21 URI bitcoin://
d27327c79 Fix typos
a004eb1da tests: Remove unused argument max_invalid from check_estimates(...)
4d9b4256d Fix typos
1ec1602a4 Make FastRandomContext support standard C++11 RNG interface
bcab47bc1 use base58 map instead of strchr()
818dc74ba Support serialization as another type without casting
34ca75032 Remove unnecessary NONNEGATIVE_SIGNED
a1926362e -blocksdir: keep blockindex leveldb database in datadir
8b2ef27ff tests: Test connecting with non-existing RPC cookie file
a2b2476e9 tests: Test connecting to a non-existing server
fae137454 qa: Allow for partial_match when checking init error
728667b77 scripted-diff: rename TestNode to TestP2PConn in tests
265d7c44b [tests] Improve assert message when wait_until() fails
ebf053ac6 [tests] Change feature_block.py to use BitcoinTestFramework
c8330d421 qa: Use node.datadir instead of tmpdir in test framework
d2527bd54 Rename wallet_accounts.py test
045eeb887 Rename account to label where appropriate
e5468a19d Remove unreachable help conditions
fc02c12ae [tests] Add logging to feature_block.py
3898c4f3d [tests] Tidy up feature_block.py
5cd01d235 [tests] Fix flake8 warnings in feature_block.py
db983beba tests: Add lint-tests.sh which checks the test suite naming convention
5fd864fe8 tests: Rename test suits not following the test suite naming convention
7b4a296a7 tests: Add note about test suite naming convention
d843db773 Qt: remove "new" button during receive-mode in addressbook
0dbb32b2c Avoiding 'file' function name from python2 with more descriptive variable naming
2e511d542 [tests] improve logging in feature_csv_activation.py
6f7f5bc00 [tests] fix flake8 nits in feature_csv_activation.py
58122736b [Tests] Require exact match in assert_start_raises_init_eror()
0ec08a672 [Tests] Move assert_start_raises_init_error method to TestNode
f38e4fdb0 QA: Add -blocksdir test
fab8a6f60 wallet: Change output type globals to members
b0fec8d62 Append scripts to new test_list array to fix bad assignment
97bcd3681 [Trivial] Simplify if-else blocks and more descriptive variable naming
577f11141 Make verify-commits.sh test that merges are clean
9d7f839a2 test: Use os.path.join consistently in feature_pruning tests
81b082277 test: Use wait_until in tests where time was used for polling
499d95e27 Add static_assert to prevent VARINT(<signed value>)
4c317d89e Document RPC method aliasing
081bf54ee Test that BnB is not used when there are preset inputs
8ae413235 Remove redundant checks for MSG_* from configure.ac
71129e026 Do not check for main() in libminiupnpc
8c632f73c ax_boost_{chrono,unit_test_framework}.m4: take changes from upstream
6ef99826b Actually disable BnB when there are preset inputs
bb079a0e2 Remove unused variable in SortForBlock
8674e74b4 Provide relevant error message if datadir is not writable.
2b3ea39de Polish interfaces around PeerLogicValidation
79ddfad48 Apply hardening measurements in bitcoind systemd service file
172f5fa73 Support deserializing into temporaries
2761bca99 Merge READWRITEMANY into READWRITE
33eb9071b Fix ComputeTimeSmart test failure with -DDEBUG_LOCKORDER
fa79016ab travis: Clone depth 1 unless $CHECK_DOC
73b5bf2cb Add a test to make sure that negative effective values are filtered
76d2f068a Benchmark BnB in the worst case where it exhausts
6a34ff533 Have SelectCoinsMinConf and SelectCoins use BnB or Knapsack and use it
fab04887c Add a GetMinimumFeeRate function which is wrapped by GetMinimumFee
cd927ff32 Move original knapsack solver tests to coinselector_tests.cpp
fb716f7b2 Move current coin selection algorithm to coinselection.{cpp,h}
4566ab75f Add tests for the Branch and Bound algorithm
4b2716da4 Remove coinselection.h -> wallet.h circular dependency
7d77eb1a5 Use a struct for output eligibility
ce7435cf1 Move output eligibility to a separate function
0185939be Implement Branch and Bound coin selection in a new file
fa1436c42 [qa] util: Remove unused sync_chain
1ee72a819 qt: Avoid querying unnecessary model data when filtering transactions
fac70134a rpc: Update createrawtransaction examples
42343c748 Split up and sanitize CAccountingEntry serialization
e29c6c8c6 Ubuntu xenial first dependencies
cba2800e8 Increase signal-to-noise ratio in debug.log by adjusting log level when logging failed non-manual connect():s
386a6b62a Allow to optional specify the directory for the blocks storage
8172d3aad configure: UniValue 1.0.4 is required for pushKV(, bool)
f4b68b3f8 Log fatal LevelDB errors more verbosely
f84fed8eb Store effective value, fee, and long term fee in CInputCoin
12ec29d3b Calculate and store the number of bytes required to spend an input
029ecac1b Split up and sanitize CWalletTx serialization
1f45e2164 scripted-diff: Convert 11 enums into scoped enums (C++11)
a7324bd79 Format timestamps using ISO 8601 formatting (e.g. "2018-02-28T12:34:56Z")
de04fde53 bitcoin-cli: Provide a better error message when bitcoind is not running
b4bc32a45 [wallet] Get rid of CWalletTx default constructor
a128bdc9e [wallet] Construct CWalletTx objects in CommitTransaction
fa2310572 qa: Cache only chain and wallet for regtest datadir
fa06dfce0 [rpc] createrawtransaction: Accept sorted outputs
0749808a7 CheckMinimalPush comments are prescriptive
b3ea8ccb7 Simplify Base32 and Base64 conversions
e690cf4b8 [gitian] Add kallewoof key for signing
92fa6d223 [gitian] Re-order keys by owner first name alphabetic order
f08761371 Add tests of listreceivedbyaddress address filtering
8ee08120d Add address filtering to listreceivedbyaddress
3b26b6af7 qt: Remove TransactionTableModel::TxIDRole
3296a3bb7 Generalize ConvertBits
fa3528a85 qa: Fix some tests to work on native windows
46e7f800b Limit the number of IPs we use from each DNS seeder
4ef82f169 depends: biplist 1.0.3
08e0855b9 Give hint about gitian not able to download
b156ff7c3 [tests] bind functional test nodes to 127.0.0.1
4f933b3d2 p2wpkh, p2wsh and p2sh-nested scripts in decodescript
c5be37e2c doc: Mention configure without wallet in FreeBSD instructions
b4db76c55 net: Correct addrman logging
92fabcd44 Add LookupBlockIndex function
b7cd08b71 Add documentation to PeerLogicValidation interface and related functions
43a32b739 Add missing cs_lock in CreateWalletFromFile
f814a3e8f Fix cs_main lock in LoadExternalBlockFile
c651df8b3 Lock cs_main while loading block index in AppInitMain
02de6a6bc Assert cs_main is held when accessing mapBlockIndex
e68172ed9 Add test-before-evict discipline to addrman
6fbc0986f gui: Show messages as text not html
cc879675e depends: Remove ccache
cfdd89589 qt: Set modal overlay hide button as default
e2b2e48b6 doc: SIGNER can contains space inside now.
7deba93bd test: Update trust git root
741f0177c Add DynamicMemoryUsage() to LevelDB
d558f44c5 Bugfix: RPC: Add missing UnregisterHTTPHandler for /wallet/
85d531971 Qt: Ensure UI updates only come from the currently selected walletView
e449f9a9e Qt: Add a combobox to toolbar to select from multiple wallets
3dba3c3ac Qt: Load all wallets into WalletModels
13a399a46 depends: patch pthread_set_name_np out of zeromq
8f7922636 depends: zeromq 4.2.3
2b1f79457 [Depends] Fix Qt build with Xcode 9.2
992f56876 depends: Only use D_DARWIN_C_SOURCE when building miniupnpc on darwin
0e7c52dc6 Shut down if trying to connect a corrupted block
5f8cc0df1 Add a test for large tx output scripts with segwit input.
be8ab7d08 Create new wallet databases as directories rather than files
26c06f24e Allow wallet files not in -walletdir directory
d8a99f65e Allow wallet files in multiple directories
6058766de Remove deprecated PyZMQ call from Python ZMQ example
59f47959b docs: Update osx brew install instruction
a9761cae1 Fix typos and cleanup
7ba2d5785 Fix ListCoins test failure due to unset g_wallet_allow_fallback_fee
ee041196f Show a transaction's virtual size in its details dialog.
87c4320df gitian-build.sh: fix signProg being recognized as two parameters
0bc095efd [qt] Improved "custom fee" explanation in tooltip
e7d9fc5c5 [qt] navigate to  transaction history page after send
18307849b Consensus: Fix bug when compiler do not support __builtin_clz*
0fbed98e4 [script] lint-whitespace: improve print linenumber
ac4886181 Add tests for HexStr std::reverse_iterator cases
90eac8c1f Add tests for HexStr corner cases
b120f7bdb [test] Add tests for self usage in arith_uint256
08b17def5 [arith_uint256] Do not destroy *this content if passed-in operator may reference it
874e81808 Allow dustrelayfee to be set to zero
22b4aae02 [arith_uint256] Avoid unnecessary this-copy using prefix operator
7ef46d063 Remove redundant includes. Conform to header include guidelines.
5aad635b7 Use memset() to optimize prevector::resize()
e46be25f0 Reduce redundant code of prevector and speed it up
f0e7aa702 Add new prevector benchmarks.
d16bfaab9 fix version typo
cfaac2a60 Add build support for 'gprof' profiling.
b22c289ae [docs] Minor improvements to Compatibility Notes
0eb84f30d test: Use wait_until to ensure ping goes out
d918eb786 Fix typos
d3f4dd313 doc: Add historical release notes for 0.16.0
1dfb4e7d7 [Tests] Check output of parent/child tx list from getrawmempool, getmempooldescendants, getmempoolancestors, and REST interface
fc44cb108 [RPC] Add list of child transactions to verbose output of getrawmempool
3f592b81d [QA] add wallet-rbf test
8222e057f Disable wallet fallbackfee by default on mainnet
2736c9e05 Avoid unintentional unsigned integer wraparounds in tests
8acd25d85 rpc: Allow typeAny in RPCTypeCheck
55f89da1a Don't test against the mempool min fee information in mempool_limit.py
fadb39ca6 test: Plug memory leaks and stack-use-after-scope
98ea64cf2 Let wallet importmulti RPC accept labels for standard scriptPubKeys
e4c924c51 createmultisig no longer takes addresses
eacc5b24f Declare CMutableTransaction a struct in rawtransaction.h
ac91ea64c [depends] Allow depends system to support armv7l
a6e6e39a8 Bugfix: respect user defined configuration file (-conf) when open conf. file from QT settings
d2ee6e3e0 init: Remove translation for `-blockmaxsize` option help
42e1b5d97 [test] Round target fee to 8 decimals in assert_fee_amount
92f1f8b31 Split off key_io_tests from base58_tests
119b0f85e Split key_io (address/key encodings) off from base58
ebfe217b1 Stop using CBase58Data for ext keys
32e69fa0d Replace CBitcoinSecret with {Encode,Decode}Secret
fa41d68a2 qa: Fix python TypeError in script.py
4d14d06fc docs: clarified systemd installation instructions in init.md for Ubuntu users.
d60234885 Add test for signrawtransaction
eefff65a4 scripted-diff: change signrawtransaction to signrawtransactionwithwallet in tests
1e79c055c Split signrawtransaction into wallet and non-wallet
eb9183535 Add setter for g_initial_block_download_completed
8b661f971 fixes #12465 added missing terminating newline character in log message
df47afb60 Revert "[tests] bind functional test nodes to 127.0.0.1"
f8c249ab9 Assert CPubKey::ValidLength to the pubkey's header-relevent size
fa9461473 [doc] dev-notes: Members should be initialized
e710387ca test: Fix bip68 sequence test to reflect updated rpc error message
b22cce014 scripted-diff: validateaddress to getaddressinfo in tests
b98bfc5ed Create getaddressinfo RPC and deprecate parts of validateaddress
1598f3230 [rpc] Move DescribeAddressVisitor to rpc/util
f98b54352 Only call NotifyBlockTip when the active chain changes
152b7fb25 [tests] Add a (failing) test for waitforblockheight
835a21b42 Squashed 'src/leveldb/' changes from c521b3ac65..64052c76c5
0851a75b5 rpc: Interrupt block generation on shutdown request
dd7e42cbb test: Add missing signal.h header
39633ecd5 [rpc] split wallet and non-wallet parts of DescribeAddressVisitor
d7f438a02 gitian: bump descriptors for (0.)17
fa44af5cd travis: Full clone for git subtree check
57e678620 qa: Improve getchaintxstats functional test
501b43921 rpc: Refactor blockhash parse in getchaintxstats
fafbf7f74 devtools: Exclude patches from lint-whitespace
face7220b qa: Move common args to bitcoin.conf
5b8b38775 Fix overly eager BIP30 bypass
1d4cbd26e test: Add unit test for LockDirectory
fc888bfca util: Fix multiple use of LockDirectory
25409b16f fixme: depends: Add D_DARWIN_C_SOURCE to miniupnpc CFLAGS
3335d45f2 [depends] latest config.guess and config.sub
41550d6d1 [depends] miniupnpc 2.0.20180203
61647a4b8 [depends] ccache 3.4.1
5a10859a8 [depends] expat 2.2.5
ada1af6d8 Fix typo in test_runner.py causing error
f506c0a7f [qt] send: Clear All also resets coin control options
5f605e172 Make signrawtransaction accept P2SH-P2WSH redeemscripts
fc1bfcf9f Update mac_alias to 2.0.7
deee216bd Delete mac_alias patch
e97b113b0 [tests] Change invalidblockrequest to use BitcoinTestFramework
2b7064eda [tests] Fix flake8 warnings in invalidblockrequest
54b8c580b [test] Fix nits leftover from 11771
fa27623ed qt: Initialize members in WalletModel
19ac86e20 Remove useless string initialization.
be45a6789 Add some script tests related to BOOL ops and odd values like negative 0.
b7f6002ed Fix rescan test failure due to unset g_address_type, g_change_type
ceaefdd5f fix possible shutdown assertion with -reindex-shutdown
f40df29d9 Fix Windows build errors introduced in #10498
2e9406c0c Interrupt loading thread after shutdown request
a8b5d20f4 Reset pblocktree before deleting LevelDB file
11376b558 Fix a-vs-an typos
fa5f51830 rpc: Reject deprecated reserveChangeKey in fundrawtransaction
9b6454c52 Improve "Turn Windows Features On or Off" step
91986ed20 scripted-diff: Use UniValue.pushKV instead of push_back(Pair())
a57009802 Squashed 'src/univalue/' changes from 07947ff2da..51d3ab34ba
464015f6f [scripts] gitian-builder.sh: fix --setup doc, LXC is default
3f56df5b7 [QA] add NODE_NETWORK_LIMITED address relay and sync test
158e1a6f0 [QA] fix mininode CAddress ser/deser
fa999affa [QA] Allow addrman loopback tests (add debug option -addrmantest)
6fe57bdaa Connect to peers signaling NODE_NETWORK_LIMITED when out-of-IBD
31c45a927 Accept addresses with NODE_NETWORK_LIMITED flag
c4af73876 Fix ignoring tx data requests when fPauseSend is set on a peer
1687cb4a8 Refactor: One CBaseChainParams should be enough
004f99994 boost: drop boost threads for [alert|block|wallet]notify
08272671d boost: drop boost threads from torcontrol
ba9172494 boost: remove useless threadGroup parameter from Discover
f26866b9c boost: drop boost threads for upnp
2f960b507 [wallet] Indent only change of CWallet::AvailableCoins
1beea7af9 [wallet] Make CWallet::ListCoins atomic
bb00c95c1 Consistently use FormatStateMessage in RPC error output
8b8a1c4f8 Add test for 'mempool min fee not met' rpc error
c04e0f607 Fix 'mempool min fee not met' debug output
db1cbcc85 [RPC] Remove deprecated addmultisigaddress return format
cb28a0b07 [RPC] Remove deprecated createmultisig object
ed45c8201 [tests] Remove test for deprecated createmultsig option
2222bf02c qt: Poll ShutdownTimer after init is done
1e5d14b3f qt: Clarify some comments
f5a4c3ddf qt: Make sure splash screen is freed on AppInitMain fail
11e01515f http: Remove numThreads and ThreadCounter
45eea40aa Bech32 addresses in dumpwallet
b947d3811 Add gitian PGP key: akx20000
dd2de47c6 Fix fast-shutdown crash if genesis block was not loaded
1c9394ad4 Fix fast-shutdown hang on ThreadImport+GenesisWait
02fc88636 Add braces to meet code style on line-after-the-one-changed.
f94665466 http: Remove WaitExit from WorkQueue
b1c2370dd http: Join worker threads before deleting work queue
85aa8398f Hold mempool.cs for the duration of ATMP.
27736f22d add fivepiece key fingerprint
fa795cf9c wallet: Disallow abandon of conflicted txes
8a6c62be6 [tests] Update README after filename change
54604600c Add AbsPathForConfigVal to consolidate datadir prefixing for path args
a1e13055c Clarify help messages for path args to mention datadir prefix
d066a1c06 [rpc] Remove deprecated getmininginfo RPC option
c6f09c271 [rpc] remove deprecated estimatefee RPC
a25cb0f31 Use ptrdiff_t type to more precisely indicate usage and avoid compiler warnings.
c887f87d5 Extend #11583 to include the most common message generated by non-contributing peers (port scanners?) 37% of the log default log entries for a node that has been up for ~24hrs was "version handshake timeout..."
a8e437a02 [tests] Remove estimatefee from rpc_deprecated.py test
a5623b161 [tests] Remove tests for deprecated estimatefee RPC
d119f2ec1 [tests] Fix style warnings in feature_fee_estimation.py
7444149de Document method for reviewers to verify chainTxData
d3e467520 Properly alphabetize output of CLI --help option.
c409b1ada [rpc] Reduce scope of cs_main and cs_wallet locks in listtransactions
6558f8acc [gui] Defer coin control instancing
660f5f19a net: don't retry failed oneshot connections forever
96dbd381c net: initialize socket to avoid closing random fd's
eeeb416d7 Remove suggestion to make cloned repository world-writable for Windows build.
9bb59cf7b QA: segwit.py: s/find_unspent/find_spendable_utxo/
7f968ae10 doc: Explain how to update chainTxData in release process
526e28220 contrib: Add support for out-of-tree builds in gen-manpages.sh
90ba2df11 Fix missing cs_main lock for GuessVerificationProgress()
ee5e8968b Organise Linux build instructions to be categorised by distro
4c855174e Add NetBSD build instruction links
aac6bce11 test: Make ua_comment test pass on 0.16.0
95e2e9af1 [tests] Change invalidtxrequest to use BitcoinTestFramework
359d06757 [tests] Fix flake8 warnings in invalidtxrequest
c32cf9f62 [tests] Add P2PDataStore class
9cb230905 doc: Update manpages to 0.16.99
4602dc704 build: Bump version to 0.16.99
10847fe2d qt: Periodic translations update
125f4a490 [tests] Require all tests to follow naming convention
11c5827ca [build] Add NETBSD leveldb target to configure.ac
1944fa320 [doc] Create build-netbsd.md
5bdbbdc09 Refactor HaveKeys to early return on false result
faca18dcf feebumper: Use PreconditionChecks to determine bump eligibility
ee1112122 Add special error for genesis coinbase to gettransaction
a9d0ebc26 Enable flake8 warnings for all currently non-violated rules
4cbab15e7 tests: Fix accidental redefinition of previously defined variable via list comprehension
0b9207efb Enable flake8 warning for "list comprehension redefines 'foo' from line N" (F812)
ffcc687c5 [net] add seed.bitcoin.sprovoost.nl to DNS seeds
cc046f66a [tests] Reduce NodeConn connection logging from info to debug
336685e17 [build] Add db4_cxx to bitcoin_find_bdb48.m4
c6b638565 [rpc] Mention that HD is enabled if hdmasterkeyid is present
a2808cf8a [tests] Fix names of excluded extended tests for travis
b1149ee4c Remove redundant code in MutateTxSign(CMutableTransaction&, const std::string&)
039425cf4 [wallet] Remove duplicate mapWallet lookups
1340eda3b Fix typos
669c9433c Avoid leaking prioritization information when relaying transactions
e868b2291 fee estimator: avoid sorting mempool on shutdown
a777244e4 Build: Add a makefile target for Doxygen documentation
a8c344b91 Update chainTxData for 0.16
082a61c69 Move scheduler/threadGroup into common-init instead of per-app
bde8bcd8a Update defaultAssumeValid according to release-process.md.
fa796bb69 qa: Add missing syncwithvalidationinterfacequeue to tests
1e2e09e2f Fix intermittent failure in p2p-versionbits-warning.py
3bbd84370 Improve comments/logging in p2p-versionbits-warning.py
ef2beb2c1 Fix flake8 warnings in p2p-versionbits-warning.py
6f881cc88 [tests] Remove EXPECTED_VIOLATION_COUNT
3150b3fea [tests] Rename misc functional tests.
81b79f2c3 [tests] Rename rpc_* functional tests.
61b8f7f27 [tests] Rename p2p_* functional tests.
90600bc7d [tests] Rename wallet_* functional tests.
ca6523d0c [tests] Rename feature_* functional tests.
faefd2923 qa: Prepare functional tests for Windows
1e9054415 net: Update hardcoded seeds
55f52bd28 contrib: Update ATTERN_AGENT to include 0.15.x
fa7ecbf9f initwallet: Do not translate highly technical addresstype help
f523c6bec [qa] Use address type in addmultisigaddress to avoid addwitnessaddress
ba490d246 qt: Bump BLOCK_CHAIN_SIZE to 200GB
7eb665fc8 [Trivial] link mentioned scripted-diff-commit
16f6f59dc [qa] Test fundrawtransaction with change_type option
536ddeb17 [rpc] Add change_type option to fundrawtransaction
31dbd5af4 [wallet] Add change type to CCoinControl
6e3fe9360 qt: Update translation source file
1e0d6e91c tx: Update transifex slug for 0.16
886a92f25 [rpc] Add address type option to addmultisigaddress
d3a185a33 net: Move misbehaving logging to net logging category
7f812502b Mention that other RPC calls report keys as "imported" while txns are still missing
ccd8ef65f Reduce cs_main lock in ReadBlockFromDisk, only read GetBlockPos under the lock
bc356b426 Make sure WalletRescanReserver has successfully reserved the rescan
dbf8556b4 Add RAII wallet rescan reserver
8d0b610fe Avoid pemanent cs_main/cs_wallet lock during wallet rescans
718f05cab move more bumpfee prechecks to feebumper::PreconditionChecks
fae7b14a0 qa: Make TestNodeCLI command optional in send_cli
ffffb10a9 qa: Rename cli.args to cli.options
04ededf00 Make CKey::Load references const
596c44633 [wallet] use P2WPKH change output if any destination is P2WPKH or P2WSH
bf1897710 [trivial][docs] Fix incorrect link in /test/ README.md
2b839abd3 Update chainparams comment for more info on service bits per dnsseed
62e764219 Fall back to oneshot for DNS Seeds which don't support filtering.
51ae7660b Use GetDesireableServiceFlags in static seeds, document this.
ac96e788f test_runner: Readable output if create_cache.py fails
b21244e0b Updating benchmarkmarking.md with an updated sample output and help options
09754063e Correct mempool mapTx comment
34328b498 Use PACKAGE_NAME instead of hardcoding application name in log message
ec527c6c8 Don't allow relative -walletdir paths
cdf3e03a7 wallet: Deprecate addwitnessaddress
776784260 Trivial: Fix spelling in zapwallettxes test description
fa1e69e52 qa: Sync with validationinterface queue in sync_mempools
cc90a4f46 Avoid potential null dereference in ReceiveCoinsDialog constructor
49e5f3ff7 rpc: Add deprecation error for `getinfo`
63ac8907c [qt] receive tab: bech32 address opt-in checkbox
65682da7e [tests] bind functional test nodes to 127.0.0.1
0c74e2e89 Log debug build status and warn when running benchmarks
2f3bd47d4 Abstract directory locking into util.cpp
5260a4aca Make .walletlock distinct from .lock
64226de90 Generalise walletdir lock error message for correctness
c9ed4bd58 Add a test for wallet directory locking
e60cb99c5 Add a lock to the wallet directory
59f9e2aaf Use flexible font size for QRCode image address
97c3cada9 [docs] Clarify -walletdir usage
0a22a5291 Use mempool's ancestor sort in transaction selection
5f911c5cc trivial: fix address_type help text of getnewaddress and getrawchangeaddress
7abfa538b Add test for new ancestor feerate sort behavior
648bdc8cc Trivial: Fix #include sys/fcntl.h to just fcntl.h (without sys/)
1e747e3c1 Make segwit failure due to CLEANSTACK violation return a SCRIPT_ERR_CLEANSTACK error code.
134cdc7ce Test walletpassphrase timeout bounds and clamping
0b63e3c7b Clamp walletpassphrase timeout to 2^(30) seconds and check its bounds
a73aab7cd Use the character based overload for std::string::find.
1df206f85 Disallow using addresses in createmultisig
f765bb378 Fix ListCoins test failure due to unset g_address_type, g_change_type
91769d6e2 [Doc] Fix link for bip 159 pull request
b224a47a1 Add address_types test
7ee54fd7c Support downgrading after recovered keypool witness keys
940a21932 SegWit wallet support
f37c64e47 Implicitly know about P2WPKH redeemscripts
57273f2b3 [test] Serialize CTransaction with witness by default
cf2c0b6f5 Support P2WPKH and P2SH-P2WPKH in dumpprivkey
37c03d3e0 Support P2WPKH addresses in create/addmultisig
35c2b1fe3 Fix rare failure in p2p-segwit.py
9a5131957 Sort mempool by min(feerate, ancestor_feerate)
6773f92b3 Refactor CompareTxMemPoolEntryByDescendantScore
8e617e370 Remove unused mempool index
a14dbff39 Allow multiwallet.py to be used with --usecli
f6ade9ce1 [tests] allow tests to be run with --usecli
ff9a363ff TestNodeCLI batch emulation
ca9085afc Prevent TestNodeCLI.args mixups
fcfb952bc Improve TestNodeCLI output parsing
8dbf740f8 [scripts] lint-whitespace: check last N commits or unstaged changes
2be2b5d58 Remove the ending slashes from RPC URI format.
30ded3e3d [Refactor] Remove unused fQuit var from checkqueue.h
5fbf7c478 fix nits: variable naming, typos
7f67dd0aa [qa] Improve prioritisetransaction functional test
40b17f5f9 [scripts] lint-whitespace: use perl instead of grep -P
f3196a03a [contrib] Add --disable-replication to install_db4
311a423bd [contrib] Use BDB_LIBS/CFLAGS in install_db4
4aa64557b Fix incorrect Markdown link
8a9354341 Replaces numbered place marker %2 with %1.
18be3ab13 Adding test case for SINGLE|ANYONECANPAY hash type in tx_valid.json
c316fdffe [qt] Add support to search the address book
c99a3c32c [tests] util_tests.cpp: actually check ignored args
3eaa003c8 Extend validateaddress information for P2SH-embedded witness
30a27dc5b Expose method to find key for a single-key destination
985c79552 Improve witness destination types and use them more
cbe197470 [refactor] GetAccount{PubKey,Address} -> GetAccountDestination
0c8ea6380 Abstract out IsSolvable from Witnessifier
5fecd842a [tests] Remove redundant import in blocktools.py test
0d663f819 Fixes issue #12067 `sendmany` curl example is wrong.
595a7bab2 Increment MIT Licence copyright header year on files modified in 2017
415f86c6a [scripts] Add missing univalue file to copyright_header.py
6dda059bd [qt] Simplifies boolean expression model && model->haveWatchOnly()
c9439e735 [Trivial] Update license year range to 2018
ebcee1de2 bips: add bip176 (Bits Denomination)
bdb3231be Implements a virtual destructor on the BaseRequestHandler class.
aad309065 [rpc] Adding ::minRelayTxFee amount to getmempoolinfo and updating mempoolminfee help description
1e0ee9095 Use best-fit strategy in Arena, now O(log(n)) instead O(n)
275b2eeed [qt] change µBTC to bits
5ec3eae39 remove brew c++ flag
97d2b09c1 Add helper to wait for validation interface queue to catch up
36137497f Block ActivateBestChain to empty validationinterface queue
5a933cefc Add an interface to get the queue depth out of CValidationInterface
a99b76f26 Require no cs_main lock for ProcessNewBlock/ActivateBestChain
a73489603 Avoid cs_main in net_processing ActivateBestChain calls
66aa1d58a Refactor ProcessGetData in anticipation of avoiding cs_main for ABC
fb6f6b151 bluematt's testnet-seed now supports x9 (and is just a static list)
c198dc00e [Doc] Clarify the meaning of fee delta not being a fee rate in prioritisetransaction RPC
760af8407 Removed CCheckQueueSpeed benchmark
00721e69f Improved microbenchmarking with multiple features.
ac5104f88 [build] .gitignore: add QT Creator artifacts
6915f93cc doc: Update OpenBSD build instructions for 6.2
5cbbbd714 [Wallet] Use RBF by default in QT only
a6365c5c3 depends: fix libzmq's needless linking against libstdc++
fadf60e38 qa: Note on test order in test_runner
06edc23f7 Improve readability by removing redundant casts to same type (on all platforms)
a71c56aeb clientversion: Use full commit hash for commit-based version descriptions
2712742ef doc: Update FreeBSD build instructions to use bdb4
d95c83d19 contrib: FreeBSD compatibility in install_db4.sh
3d3e58e46 [Doc] Fix link to installation script
656fde53a Add script birthtime metadata to dump and import wallet
1bab9b23a Add script dump note to RPC help text and release notes
68c1e00a0 Add test for importwallet
9e1184dd5 Add dumpwallet scripts test
ef0c73022 Add scripts to importwallet RPC
b702ae812 Add CScripts to dumpwallet RPC
cdc260afd Add GetCScripts to CBasicKeyStore
be9a13c8a Add configuration/argument testing
88411e98e Squashed 'src/univalue/' changes from fe805ea74f..07947ff2da
ee5efad6c [tests] refactor node_network_limited
b425131f5 [tests] remove redundant duplicate tests from node_network_limited
2e0298459 [tests] node_network_limited - remove race condition
dbfe29480 [tests] define NODE_NETWORK_LIMITED in test framework
128531204 [tests] fix flake8 warnings in node_network_limited.py
62e7c04fb Remove dead feeest-file read code for old versions
c8edc2c3c [docs] initial QT documentation, move Qt Creator instructions
450851925 test: Fix rawtransactions test
fabb72baa contrib: Remove xpired 522739F6 key
bdaed4755 tests: Remove unused variable (firstAddrnServices)
c0298b06e contrib: Make X=Y arguments work in install_db4
b798f9bab contrib: New clang patch for install_db4
ce552b62e contrib: fix typo in install_db4.sh help message
3eb4d4595 [build] Warn that only libconsensus can be built without boost
faeab66f8 contrib: Replace developer keys with list of pgp fingerprints
ecf9b25a0 remove unused fNoncriticalErrors variable from CWalletDB::FindWalletTx
f455a24da [net] add seed.testnet.bitcoin.sprovoost.nl to testnet DNS seeds
58c909d8d Typo fix
818075ada Create new mutex for orphans, no cs_main in PLV::BlockConnected
937bf4335 Use std::thread::hardware_concurrency, instead of Boost, to determine available cores
31a013563 Add required package dependencies for depends cross compilation [skip-ci]
176db6147 simplify CheckMinimalPush checks, add safety assert
03a5dc9c3 [wallet] Make CWallet::FundTransaction atomic
95d4450a4 [wallet] Tidy up CWallet::FundTransaction
9360f5032 Drop extra script variable in ProduceSignature
c79d73dc9 Clarify getbalance meaning a tiny bit in response to questions.
88af5028a test: Add createrawtransaction functional tests
27c619937 test: Add multidict to support dictionary with duplicate key (laanwj)
3f09e03e0 Remove unused include in hash.cpp
aac6b3f06 Update files.md for new wallets/ subdirectory
b67342906 Cleanups for walletdir PR
3830b6e06 net: use CreateSocket for binds
df3bcf89e net: pass socket closing responsibility up to caller for outgoing connections
9e3b2f576 net: Move IsSelectableSocket check into socket creation
1729c29de net: split socket creation out of connection
9c5a4a6ed Stop special-casing phashBlock handling in validation for TBV
2862b562c [tests] remove redundant univalue_tests.cpp
320669a36 rpc: Validate replaceable type in createrawtransaction
5b2529343 wallet: Remove unnecessary mempool lock in ReacceptWalletTransactions
6ef86c92e Do not un-mark fInMempool on wallet txn if ATMP fails.
5c8ff26b2 [tests] Add NetworkThread assertions
34e08b351 [tests] Fix network threading in functional tests
74e64f24b [tests] Use network_thread_start() in tests.
5fc6e71d1 [tests] Add network_thread_ utility functions.
6697a7089 add test for unconfirmed balance between restarts
6ba8f30e7 don't attempt mempool entry for wallet transactions on startup if already in mempool
d60b32074 Add Travis check for unused Python imports
c7399e708 Remove unused Python imports
a3ac7672e Fix string concatenation to os.path.join and add exception case
9c8eca770 Split up key and script metadata for better type safety
f05d34988 gui: Fix proxy setting options dialog crash
9b20bb40f [tests] Check tests conform to naming convention
1ec0c0a01 Make boost::multi_index comparators const
de74c6258 [Doc] Update bip.md, add support for BIP 159
e054d0e53 [QA] Add node_network_limited test
b3411435a [build] Add missing stuff to clean-local - test/functional/test_framework/__pycache__ - test/cache
3121d76ba doc: Update release notes for share/rpcauth/rpcauth.py rename
fa4c16d2e qa: Add getrawtransaction in_active_chain=False test
3fdb29778 Rename rpcuser.py to rpcauth.py
bd0941652 Avoid leaking the prune height through getdata (fingerprinting countermeasure)
27df193ef Always set NODE_NETWORK_LIMITED bit
7caba3856 Add NODE_NETWORK_LIMITED flags and min block amount constants
a38686cea [verify-commits] Fix gpg.sh's echoing for commits with '\n'
07c483895 Always return true if AppInitMain got to the end
6d2f277b1 rpcuser.py: Use 'python' not 'python2'
529b86675 Test datadir in conf file exists
434526aba [test] Add tests for getrawtransaction with block hash.
b16795167 [rpc] Allow getrawtransaction to take optional blockhash to fetch transaction from a block directly.
22fdddeab Avoid calling GetSerializeSize on each tx in a block if !fTxIndex
2862aca40 Move some additional variables into CChainState private
fd4d80a2f Create initial CChainState to hold chain state information
e104f0fb7 Move block writing out of AcceptBlock
50701ba5f Move txindex/undo data disk location stuff out of ConnectBlock
93a34cfee Make DisconnectBlock unaware of where undo data resides on disk
bf20a7d64 [docs] Fixed outdated link with archive.is
5a7c09aeb test: Add tests for `-debuglogfile` with subdirs
415873494 doc: Update release notes for `-debuglogfile`
23232422e test: Add test for `-debuglogfile`
e4d0af4fe Loop through the bip9 soft fork deployments instead of hard coding
cf5f432c6 Add `-debuglogfile` option
7250b4e56 [tests] README.md nit fixes
543ab40a4 Docs: Bump OSX version to 10.13 in build-osx.md
9b80fc149 Prefix leveldb debug logging
33698c94b Trivial: fix comments for ZeroMQ bitcoind args
873beca6d [tests] Rename NodeConn and NodeConnCB
ff8a9b068 [tests] Add combinedlogslen argument to test_runner.py
dba94ead0 [tests] [travis-ci] Move Travis functional test log post processing to test_runner
bba1c54ed [tests] Improve logging shutdown and add hint for combine_logs
126999d1c depends: fix zmq build with mingw < 4.0
387879dd4 [depends] ZeroMQ 4.2.2
a5f5a2ce5 [rpc] Fix fVerbose parsing (remove excess if cases).
e9dfa9bcc [tests] Move version message sending from NodeConn to NodeConnCB
dad596fc3 [tests] Make NodeConnCB a subclass of NodeConn
e30d40438 [tests] Move only: move NodeConnCB below NodeConn
4d5059856 [tests] Tidy up mininode
d31e5c1d0 Fix shutdown in case of errors during initialization
f7f7e2cd3 threads: add a thread_local autoconf check
f2ae6f32a [tests] Remove mininode periodic (half-hour) ping messages
bfb0c0a5b Add Clang thread safety analysis annotations
fae98f66f [Docs] Bump minimum required version of GCC to 4.8
3e1ee3104 [Tests] Adding unit tests for GetDifficulty in blockchain.cpp.
ec59523c5 [tests] Remove rpc property from TestNode in p2p-segwit.py.
8b2c7330d clarify abortrescan rpc use
e1a8ec56c Fix: Open files read only if requested
d2ea2bcb5 trivial: Fix unsuccessful typo
63f21d27e net: Add missing locks in net.{cpp,h}
d6f3a7373 Remove redundant locks
d9340ce91 Fix sendrawtransaction hang when sending a tx already in mempool
9d811dc18 Document partial validation in ConnectBlock()
fe27a7236 [docs] links to code style guides
c60c49b67 Improve help text and behavior of RPC-logging
57ac471a2 Call BannedListChanged outside of cs_setBanned lock
bba9bd0d9 Switched sync.{cpp,h} to std threading primitives.
49bd6590f tests: move pwalletMain to wallet test fixture
db0b7373f [Qt] Improved copy: RBF checkbox, tooltip and confirmation screen
65e91f5ed [tests] Test that mempool rejects coinbase transactions
f94c2ecb4 Fix for mismatched extern definition in wallet test classes which was breaking msvc linking.
c3055bbea Add help-console command to Qt debug console
9d42cc333 [tests] address review comments
f522fb7c9 tests: Remove unused mininode functions deser_int_vector(f) and ser_int_vector(l)
0f3b752ec Remove unused imports
06abcbf9b scripted-diff: Orthogonalize string quoting
e0496d3b9 bitcoin_qt.m4: Add missing dollar sign for variable.
079f4b2a2 bitcoin_qt.m4: Add missing braces around variables in autoconf messages.
8695315fb bitcoin_qt.m4: Use correct M4 quoting characters.
db32a4fd6 bitcoin_qt.m4: Improve QT_VERSION tests.
dcfef277b cli: Reject arguments to -getinfo
1cecea71a doc: Specify required source location for Windows WSL builds
c1e5d40e1 Make debugging test crash easier
8263f6a5a Create walletdir if datadir doesn't exist and fix tests
9587a9c12 Default walletdir is wallets/ if it exists
d9878890e Add release notes for -walletdir and wallets/ dir
80c5cbc14 Add test for -walletdir
0530ba0ea Add -walletdir parameter to specify custom wallet dir
a720b928c Remove includes in .cpp files for things the corresponding .h file already included
6e4cdd67b [docs] Add reference to install_db4.sh in OS X build instructions
af9103eb7 [build] Add a script for installing db4
f0c4ab9a7 [tests] fix flakiness in sendheaders.py
25fd6e2c2 [tests] refactor check_last_announcement() in sendheaders.py
f39d4bbd1 [tests] tidy up BaseNode in sendheaders.py
e89adbac9 Make default issue text all comments to make issues more readable
2613c545f [tests] fix flake8 warnings in sendheaders.py
f88d90035 Add gitian PGP key: willyko
ec85248c4 [travis-ci] Only run linters on Pull Requests
7b91b5f8a Remove trailing whitespace causing travis failure
434f5a250 Recommend #include<> syntax in developer notes
96b92810a refactor: Include obj/build.h instead of build.h
138016bf9 test: refactor: Use absolute include paths for test data files
e7b31631c qt: refactor: Changes to make include paths absolute
0c715214d build: Remove -I for everything but project root
5b56ec969 qt: refactor: Use absolute include paths in .ui files
1a445343f scripted-diff: Replace #include "" with #include <> (ryanofsky)
fa61c6f6a qa: Add multiwallet prefix test
b077fe908 fix the StartupWMClass for bitoin-qt, so gnome-shell can recognize it
a7c949f64 [build] Add temp_bitcoin_locale_qrc to CLEAN_QT to fix make distcheck
5ff01c236 [docs] Add instructions for lcov coverage report generation
ea3f363aa Make ISSUE_TEMPLATE a bit shorter, mention hardware tests
d8ac89326 trivial: Fix typo – "Ubutntu" → "Ubuntu"
73a7e6d18 Update WSL installation for Fall Creators update
fafdad0d4 qa: Remove unused NodeConn members
069215ebe Initialize recently introduced non-static class member lastCycles to zero in constructor
faaa7db25 qa: Only allow disconnecting all NodeConns
2f041f0e7 contrib/init: Update openrc-run filename
4a426d890 Add note about Valgrind suppressions file in developer-notes.md
fa0c7c7f8 doc: Add getreceivedbyaddress release notes
6de3203cd doc: Add historical release notes for 0.15.1
ac51a26bd During IBD, when doing pruning, prune 10% extra to avoid pruning again soon after
927f4ff5a GUI: Receive: Remove option to reuse a previous address
aed1d90ac [wallet] Change feebumper from class to functions
37bdcca3c [refactor] Make feebumper namespace
7c4f00919 [trivial] Rename feebumper variables according to project code style
5e0ba8f8c [wallet] getreceivedbyaddress should return error if address is not mine
ea0cd24f7 [tests] Tidy up receivedby.py
1135c796a [tests] Tidy up mininode.py module
f9cd9b1bf [tests] Move test_framework Bitcoin primitives into separate module
109a85899 tests: Add missing locks to tests
63c2d83e5 Explicitly state assumption that state.m_chain_sync.m_work_header != nullptr in ConsiderEviction
eac2abca0 Qt: Enable searching by transaction id
c407c61c5 Qt: Avoid invalidating the search filter, when it doesn't really change
b1f634242 Qt: Rename confusingly-named "address prefix" to "search string"
be9f38c61 Do not make it trivial for inbound peers to generate log entries
fa0025dc3 Revert "Remove unused variable in shell script"
fbf327b13 Minimal code changes to allow msvc compilation.
620bae34c Require a steady clock for bench with at least micro precision
c8538123a Update ban-state in case of dirty-state during periodic sweep
a357293c8 Use MakeUnique<Db>(...)
3e09b390b Use MakeUnique<T>(...) instead of std::unique_ptr<T>(new T(...))
86179897e Add MakeUnique (substitute for C++14 std::make_unique)
d223bc940 Use unique_ptr for pcoinscatcher/pcoinsdbview/pcoinsTip/pblocktree
b45c597ca Use unique_ptr for pdbCopy (Db) and fix potential memory leak
29ab96dbd Use unique_ptr for dbenv (DbEnv)
f72cbf9ba Use unique_ptr for pfilter (CBloomFilter)
8ccf1bb0c Use unique_ptr for sem{Addnode,Outbound} (CSemaphore)
73db0635a Use unique_ptr for upnp_thread (boost::thread)
002453162 Use unique_ptr for dbw (CDBWrapper)
fa6d1228e Use unique_ptr:s for {fee,short,long}Stats (TxConfirmStats)
5a6f76889 Use unique_ptr for httpRPCTimerInterface (HTTPRPCTimerInterface)
860e91258 Use unique_ptr for pwalletMain (CWallet)
9e9e31aa1 Fix qt build broken by 5a5e4e9
12781db05 [Tests] check specific validation error in miner tests
fb00c45c3 [tests] Explicitly disallow support for p2p versions below 60001
3858aabbd [tests] Remove support for p2p alert messages
c0b127470 [tests] Remove support for bre-BIP31 ping messages
2904e301c [tests] Remove dead code from mininode.py
32ae82f5c [tests] use TestNode p2p connection in tests
5e5725cc2 [tests] Add p2p connection to TestNode
b86c1cd20 [tests] fix TestNode.__getattr__() method
7536b08c1 trivial: Fix typo – alreardy → already
5ce7cb951 [net] De-duplicate connection eviction logic
24a0bddf4 bench: prefer a steady clock if the resolution is no worse
c515d266e bench: switch to std::chrono for time measurements
7963335d2 Fix -disablewallet default value
b411c2a12 Improve -disablewallet parameter interaction
d0b1fc88d Docs: Change formatting for sequence of steps
cabff7588 rpc: Make logging RPC public
a9b6ba0b7 Add missing cs_main locks when calling blockToJSON/blockheaderToJSON
d61845818 Have SegWit active by default
4bd89210a Unit tests for always-active versionbits.
d07ee77ab Always-active versionbits support
18e071841 [consensus] Pin P2SH activation to block 173805 on mainnet
526023aa7 Improve handling of BIP9Deployment limits
76ea17c79 Add mutex requirement for AddToCompactExtraTransactions(…)
4616c825a Use -Wthread-safety-analysis if available (+ -Werror=thread-safety-analysis if --enable-werror)
7e319d639 Fix -Wthread-safety-analysis warnings. Change the sync.h primitives to std from boost.
4a110a009 [build] .gitignore: add background.tiff
223a4aabd [build] Don't fail when passed --disable-lcov and lcov isn't available
41b15cfc9 Add sjors gitian key
a02c5e459 [trivial] Fix error messages in CFeeBumper
abbd23021 Move RPC registration out of AppInitParameterInteraction
97932cd26 rpc: further constrain the libevent workaround
725b79a9c [test] Verify node doesn't send headers that haven't been fully validated
626291508 Add unit test for stale tip checking
83df25736 Add CConnmanTest to mutate g_connman in tests
ac7b37cd2 Connect to an extra outbound peer if our tip is stale
6b58360f9 rpc: work-around an upstream libevent bug
db32a6589 Track tip update time and last new block announcement from each peer
2d4327db1 net: Allow connecting to extra outbound peers
720d9e8fa [Wallet] always show help-line of wallet encryption calls
f3d4adfa6 Make p2p-acceptablock not an extended test
00dcda60f [qa] test that invalid blocks on an invalid chain get a disconnect
015a5258a Reject headers building on invalid chains by tracking invalidity
932f118e6 Accept unrequested blocks with work equal to our tip
3d9c70ca0 Stop always storing blocks from whitelisted peers
3b4ac43bc Rewrite p2p-acceptblock in preparation for slight behavior changes
3ab545d7f addrman: Add missing lock in Clear() (CAddrMan)
3788a8479 Do not send (potentially) invalid headers in response to getheaders
2530bf27b net: Add missing lock in ProcessHeadersMessage(...)
6eddd43e6 Fix warnings when building with DEBUG_ADDRMAN
60b98f8e1 [Util] Update tinyformat.h
f927ee1aa Fixed a couple small grammatical errors.
37886d5e2 Disconnect outbound peers relaying invalid headers
4637f1852 moveonly: factor out headers processing into separate function
e065249c0 Add unit test for outbound peer eviction
5a6d00c6d Permit disconnection of outbound peers on bad/slow chains
c60fd71a6 Disconnecting from bad outbound peers in IBD
11413646b [trivial] (whitespace only) fix getblockchaininfo alignment
bd9c18171 [rpc] Add initialblockdownload to getblockchaininfo
659b2061c Make listsinceblock refuse unknown block hash
fd3a2f313 [tests] Add fuzz testing for BlockTransactions and BlockTransactionsRequest
9d30f54ef [Docs] Update OpenBSD Build Instructions for OpenBSD 6.2
a6f33ea77 Sanity-check script sizes in bitcoin-tx
bc9c0a7b7 Improve wallet-accounts test
6d51eaefe qa: Fix race condition in sendheaders.py
cc5c39ddc [Build] Add AM_OBJCXXFLAGS and QT_PIE_FLAGS to OBJCXXFLAGS to future-proof darwin targets
f8c66972d Fix automake warnings when running autogen.sh
d23be309c [verify-commits] Allow revoked keys to expire
c96b2e4f0 qa: Fix replace-by-fee race condition failures
01b52cedd Add comment explaining forced processing of compact blocks
08fd82277 qa: add test for minchainwork use in acceptblock
ce8cd7a7d Don't process unrequested, low-work blocks
fa81534d0 Add share/rpcuser to dist. source code archive
7a5f9303a Avoid slow transaction search with txindex enabled
478a89c1e Avoid opening copied wallet databases simultaneously
132d3225f Remove my testnet DNS seed as I currently don't have the capacity to keep it up to date.
c098c5819 Wrap dumpwallet warning and note scripts aren't dumped
ff35de8f0 [ui] Add toggle for unblinding password fields
3d1c31126 Revert "travis: filter out pyenv"
a86e81b78 travis: move back to the minimal image
a3f56578a Add test cases covering the relevant key length boundaries: 64 bytes +/- 1 byte for HMAC-SHA256 and 128 bytes +/- 1 byte for HMAC-SHA512
13a81b19d Add quotes to variable assignment (as requested by @TheBlueMatt)
683b9d280 Fix valid path output
193c2fb4c Use bash instead of POSIX sh. POSIX sh does not support arrays.
80f5f28d3 Fix incorrect quoting of quotes (the previous quotes had no effect beyond unquoting)
564a172df Add required space to [[ -n "$1" ]] (previously [[ -n"$1" ]])
1e44ae0e1 Add error handling: exit if cd fails
b9e79ab41 Remove "\n" from echo argument. echo does not support escape sequences.
f6b3382fa Remove unused variables
7383d7726 Updated instructions for Windows 10 Fall Creators Update.
6b1891e2c Add Sent and Received information to the debug menu peer list
8e4aa35ff move human-readable byte formatting to guiutil
f89308532 [tests] Don't subclass from object for Python 3
8f9e3627e [tests] authproxy.py: tidy up __init__()
323d8f61e [tests] fix flake8 warnings in authproxy.py
fc0176d01 [tests] use python3 for authproxy.py
b296bf149 Init: Remove redundant exit(EXIT_FAILURE) instances and replace with return false
207408b08 Fix crash via division by zero assertion
e0fc4a735 Updated Windows build doc for WSL/Xenial workarounds.
7104de8b1 [wallet] Fix leak in CDB constructor
a38bfbc51 Add wallet backup text to import*, add* and dumpwallet RPCs
43f76f6ac Add missing comma from rescanblockchain
89f03120a Remove redundant pwallet nullptr check
c4784b506 Add a dev notes document describing the new wallet RPC blocking
3ea8b7528 Give ZMQ consistent order with UpdatedBlockTip on scheduler thread
cb06edf93 Fix wallet RPC race by waiting for callbacks in sendrawtransaction
e545dedf7 Also call other wallet notify callbacks in scheduler thread
17220d632 Use callbacks to cache whether wallet transactions are in mempool
5d67a7868 Add calls to CWallet::BlockUntilSyncedToCurrentChain() in RPCs
5ee317263 Add CWallet::BlockUntilSyncedToCurrentChain()
0b2f42d73 Add CallFunctionInQueue to wait on validation interface queue drain
2b4b34503 Add ability to assert a lock is not held in DEBUG_LOCKORDER
0343676ce Call TransactionRemovedFromMempool in the CScheduler thread
a7d3936de Add a CValidationInterface::TransactionRemovedFromMempool
f4c4e3888 [trivial] Make namespace explicit for is_regular_file
15f5d3b17 Switch DNSSeed-needed metric to any-automatic-nodes, not services
5ee88b4bd Clarify docs for requirements/handling of addnode/connect nodes
57edc0b0c Rename fAddnode to a more-descriptive "manual_connection"
44407100f Replace relevant services logic with a function suite.
fafa00397 qa: Remove never used return value of sync_with_ping
fa9de370b qa: Make tmpdir option an absolute path
fe862c5ad Avoid division by zero in the case of a corrupt estimates file
7a91ceb5e [QA] Add RPC based rescan test
c77170fbd [Wallet] add rescanblockchain <start_height> <stop_height> RPC command
28f8b6657 Diagnose unsuitable outputs in lockunspent().
149dffd3b [rpc] mempoolinfo should take ::minRelayTxFee into account
c5dfa90aa [tests] Add uacomment tests
487aff421 Check subtree consistency in Travis
e1d0cc23a Improve git-subtree-check.sh
a44a21517 Fix importmulti bug when importing an already imported key
cc9ee809a Improve ZMQ functional test
857b32b4b [tests] Add -walletnotify functional test
df18d29a0 [tests] Add -blocknotify functional test
9c72a464f [tests] Tidy up forknotify.py
82b2712a6 [tests] move witness util functions to blocktools.py
1e1085403 [tests] [docs] update README for new test naming scheme
5d465e396 Ensure backupwallet fails when attempting to backup to source file
680bc2cbb Use range-based for loops (C++11) when looping over map elements
f902e40c7 fix typo in comment of chain.cpp
0aacfa43c Remove accidental stray semicolon
748157913 [tests] Make comp test framework more debuggable
68feb4910 Use nullptr instead of NULL
aa57590d7 Update importprivkey named args documentation
c6b07fddc Fix a vs. an typo
f617d1b06 [depends] native_ds_store 1.1.2
46b752ab5 [depends] native_mac_alias 2.0.6
dd9bb253c Fix code style in keystore.cpp/crypter.cpp
47ba8cf71 scripted-diff: rename assert_raises_jsonrpc to assert_raises_rpc error
677d893ff [tests] do not allow assert_raises_message to be called with JSONRPCException
5864e9c16 [tests] remove direct testing on JSONRPCException from individual test cases
208fda69b CCrypter: move relevant implementation out of the header
3155fd23f CKeystore: move relevant implementation out of the header
63179d028 Scope the ECDSA constant sizes to CPubKey / CKey classes
f35d03336 build: Make "make clean" remove all files created when running "make check"
4526d21e5 Add test for multiwallet batch RPC calls
74182f235 Add missing batch rpc calls to python coverage logs
505530c6c Add missing multiwallet rpc calls to python coverage logs
ce2418fa4 [gui] reset addrProxy/addrSeparateProxyTor if colon char missing
9f67646f1 Make AuthServiceProxy._batch method usable
e02007aad Limit AuthServiceProxyWrapper.__getattr__ wrapping
edafc718a Fix uninitialized URI in batch RPC requests
eff4bd8ab [test] P2P functional test for certain fingerprinting protections
a2be3b66b [net] Ignore getheaders requests for very old side blocks
696ce4630 [Docs] Update Windows build instructions for using WSL and Ubuntu 17.04
96c2ce9d3 Fix validationinterface build on super old boost/clang
76fed838f Avoid NULL pointer dereference when _walletModel is NULL (which is valid)
4971a9a3c Use two boolean literals instead of re-using variable
b5fb33943 Remove duplicate uriParts.size() > 0 check
746699167 Remove redundant check (!ecc is always true)
55224af6b Remove redundant NULL checks after new
fae60e338 qa: Fix lcov for out-of-tree builds
4f890ba6b Add new step to clean $PATH var by removing /mnt specific Window's %PATH% paths that cause issues with the make system
fae2673d5 qa: check-rpc-mapping must not run on empty lists
fafff1220 qa: Restore bitcoin-util-test py2 compatibility
92848e505 Remove unused fTry from push_lock
bb8376bbc Verify DBWrapper iterators are taking snapshots
b7dfc6c4b [rpc] getblockchaininfo: add size_on_disk, prune_target_size, automatic_pruning
1088b5322 add functional test for mempoolreplacement command line arg
fd86f998f Squashed 'src/secp256k1/' changes from 84973d393..0b7024185
619bb0503 Squashed 'src/univalue/' changes from 16a1f7f6e..fe805ea74
ab5bba778 Fix launchctl not being able to stop bitcoind
cee28fbc3 Add error string for CLEANSTACK script violation, preventing an "unknown error" if the CLEANSTACK error condition is set.
6f33d8c79 Correct typo in comments
8213838db [Qt] tolerate BIP173/bech32 addresses during input validation
06eaca631 [RPC] Wallet: test importing of native witness scripts
fd0041aa2 Use BIP173 addresses in segwit.py test
e278f12ca Support BIP173 in addwitnessaddress
c091b9937 Implement BIP173 addresses and tests
bd355b8db Add regtest testing to base58_tests
6565c5501 Convert base58_tests from type/payload to scriptPubKey comparison
8fd226705 Import Bech32 C++ reference code & tests
bb174e19b [docs] Remove partial gitian instructions from descriptors dir
5ddf56045 script: Change SignatureHash input index check to an assert.
5e69a430e Add test for bitcoin-cli -getinfo
382625318 rpc: Handle `getinfo` locally in bitcoin-cli w/ `-getinfo`
395cef760 Change getmininginfo errors field to warnings
8502b2085 Unify help text for GetWarnings output in get*info RPCs
f77f0e482 Add warnings field to getblockchaininfo
49f869fe9 Fix bip68-sequence rpc test
603efe9fc Fix parameter name typo in ErasePurpose walletdb method.
6643b80d1 Add state message print to AcceptBlock failure message.
048e0c3e2 [rpc] [tests] Add deprecated RPC test
d4cdbd6fb [rpc] Deprecate estimatefee RPC
0cd9273fd rpc: Prevent `dumpwallet` from overwriting files
22f816ef4 net: Improve and document SOCKS code
fa082b4ee doc: move gitian building to external repo
90ab62c45 [docs] document scripted-diff
204cc9826 fix  link error
884913041 Remove lxcbr0 lines from gitian-build.sh
1e46ebdf8 Implement {Encode,Decode}Destination without CBitcoinAddress
723aa1b87 qt: Backup former GUI settings on `-resetguisettings`
9ad6746cc Use static_cast instead of C-style casts for non-fundamental types
46c90437f Remove some unused functions and methods
3a131b724 Rename out to m_tx_out in CScriptCheck
7a1e873b2 [script] Unit tests for IsMine
d7afe2d15 [script] Unit tests for script/standard functions
13baf7217 Replace save|restoreWindowGeometry with Qt functions
6951a1c67 Remove extremely outdated share/certs dir
46ce223d1 Add tests for CMerkleBlock usage with txids specified
5ab586f90 Consolidate CMerkleBlock constructor into a single method
28d4542a0 Disallow uncompressed pubkeys in bitcoin-tx [multisig] output adds
4e955c58e Near-Bugfix: Reestablish consensus check removed in 8d7849b
3e8c91629 Introduce CheckInputsAndUpdateCoins static wrapper in txmempool.cpp
832e0744c Optimization: Minimize the number of times it is checked that no money is created
f6ffb1436 [test] Add getblockchaininfo functional test
fd8f45fe8 [test] Add restart_node to BitcoinTestFramework
1ab1b687c doc: Add release notes for 0.15.0.1
634e38ca7 [Tests] Add Qt GUI tests to Overview and ReceiveCoin Page
d3677ab75 Tests for zmqpubrawtx and zmqpubrawblock
22fd04beb Remove nBlockMaxSize from miner opt struct as it is no longer used.
b887676e1 net: remove now-unused functions
45fd75453 net: remove now-superfluous numeric resolve
2416dd7cc net: separate resolving and conecting
7b137aced [Qt] Add delay before filtering transactions Fixes 3141
5b9748f97 Small refactor of CCoinsViewCache::BatchWrite()
2a07f878a Refactor: Modernize disallowed copy constructors/assignment
e9e939108 [tests] Check connectivity before sending in assumevalid.py
e53fa4a1c Remove custom fee radio group
a0b4c2461 Trivial: Fix validation comments
b4058ed9c Fix code constness in CBlockIndex::GetAncestor() overloads
cdaf3a1f9 Fix Qt 0.14.2->0.15.0 segfault if "total at least" is selected
dc2f737ae Trivial: Fix comments for DEFAULT_WHITELIST[FORCE]RELAY
96d91b79b contrib: Ignore historical release notes for whitespace check
86700d3d0 doc: add release-notes for 0.15.0 to master
77939f27f Fix uninitialized g_connman crash in Shutdown()
1f379b1f0 Add tab char lint check and exclude imported dependencies
dd365612f Add a lint check for trailing whitespace.
1817398b3 mininode: add an optimistic write and disable nagle
f97ab35fa qa: Fix bug introduced in p2p-segwit.py
a7820422e qa: Treat mininode p2p exceptions as fatal
d552ed678 Put back inadvertently removed copyright notices
d052e3847 [qt] Add use available balance in send coins dialog
fb1f32582 Add listwallets RPC test to multiwallet.py
fadd0c16b [qa] zapwallettxes: Wait up to 3s for mempool reload
fa4fad9d8 travis: Revert default datadir check
bf64c3cb3 Ignore transactions added to mempool during a reorg for fee estimation purposes.
04f78ab5b Do not reject based on mempool min fee when bypass_limits is set.
fd849e1b0 Change AcceptToMemoryPool function signature
fadf31ef0 wallet: Display non-HD error on first run
fa65dcdda doc: Update release notes for 0.16.0
fa2c3b6cf doc: Bump manpages to 0.15.99
05cae8aef range-based loops and const qualifications in net.cpp
1789e4675 Force explicit double -> int conversion for CFeeRate constructor
53a6590f4 Make float <-> int casts explicit outside of test, qt, CFeeRate
0b1b9148c Remove countMaskInv caching in bench framework
6f703e9bf Add release notes describing blockmaxweight deprecation
3dc263c9b Use a sensible default for blockmaxweight
ba206d2c6 Deprecate confusing blockmaxsize, fix getmininginfo output
35e5c2269 remove unused IsArgSet check
605918272 add m_added_nodes to connman options
df10edfd0 More user-friendly error message when partially signing
d601f1662 Fix invalid memory access in CScript::operator+=
b73628d5a Make sure ~/.bitcoin doesn't exist before build
c626dcb50 Make fUseCrypto atomic
f38c05104 [depends] Don't build libevent sample code
b8d91e03a [Docs] Fix broken Markdown table in dependencies.md. Cleanups.
7d03418ae Add -usehd to excluded args in check-doc.py
91c39e38d Update CONTRIBUTRING.md to reduce unnecesarry review workload
5acd82de9 rpc: make estimatesmartfee argument naming consistent with documentation
24697c40e rpc: update cli for estimatefee argument rename
713a92073 Remove usehd option and warn when it is used
d4c18f733 Bump wallet version number to 159900
5d2a3995e [trivial] fixup comment for VerifyWallets()
43b0e81d0 [wallet] Add StartWallets() function to wallet/init.cpp
290f3c56d [wallet] Add RegisterWalletRPC() function to wallet/init.cpp
062d63102 [wallet] Add CloseWallets() function to wallet/init.cpp
77fe07c15 [wallet] Add StopWallets() function to wallet/init.cpp
2da5eafa4 [wallet] Add FlushWallets() function to wallet/init.cpp
1b9cee66e [wallet] Rename WalletVerify() to VerifyWallets()
9c76ba18c [wallet] Rename InitLoadWallet() to OpenWallets()
3a3a9f978 Ignore old format estimation file
592404f03 Changing &vec[0] to vec.data(), what 9804 missed
77aa9e59e test: Check RPC argument mapping
aa2e0f09e travis: filter out pyenv
2525b972a net: stop both net/net_processing before destroying them
203a4aa31 Fix CTxMemPoolEntry::UpdateAncestorState: modifySigOps param type int -> int64_t
f151f5f50 [macOS] remove Growl support, remove unused code
d2be7b25b Typo in optionsdialog.ui Tooltip displayed ampersand incorrectly, &amp; should be in text.
061297f0a Ensure that data types are consistent
3f0ee3e50 Proper indentation for CheckTxInputs and other minor fixes
731065b11 Consistent parameter names in txdb.h
35aeabec6 Make fReindex atomic to avoid race
58d91af59 Fix race for mapBlockIndex in AppInitMain
29e1dfbd9 [test] Add bitcoin-cli -stdin and -stdinrpcpass functional tests
ce379b47b [test] Replace check_output with low level version
232e3e847 [test] Add assert_raises_process_error to assert process errors
5c18a84b9 [test] Add support for custom arguments to TestNodeCLI
e1274947d [test] Improve assert_raises_jsonrpc docstring
769684132 Fix style in -stdin and -stdinrpcpass handling
80e2e9d0c net: drop unused connman param
8ad663c1f net: use an interface class rather than signals for message processing
aece8a463 (finally) remove getinfo in favor of more module-specific infos
28f11e940 net: pass CConnman via pointer rather than reference
86e6dd4b6 Remove duplicate destination decoding
8d0041e60 Remove unused GetKeyID and IsScript methods from CBitcoinAddress
fa40b0eb5 travis: Assert default datadir isn't created, Run scripted diff only once
e91b96192 Create dependencies.md, and link dependencies file from README & build docs
1444c2e7d Switch memory_cleanse implementation to BoringSSL's to ensure memory clearing even with link-time optimization.
864cd2787 Move CBitcoinAddress to base58.cpp
5c8ff0d44 Introduce wrappers around CBitcoinAddress
faa8d9581 [qa] TestNode: Add wait_until_stopped helper method
fdc329376 Document assumptions that are being made to avoid NULL pointer dereferences
478d4fb79 [docs] explain how to recompile only what bitcoind tests need
1aa97ee08 Add savemempool RPC
467cbbcbf Add return value to DumpMempool
3a4401a6b [Qt] Terminate string *pszExePath after readlink and without using memset
b86a42077 when clearing addrman clear mapInfo and mapAddr
6f39ac043 Add test for decoderawtransaction bool
bbdbe805a Add iswitness parameter to decode- and fundrawtransaction RPCs
c8d38abd6 Refactor tipUpdate as per style guide
3b69a08c5 Fix division by zero in time remaining
a1ea1cfbd qt: Use IsMine to validate custom change address
dabee00ef github-merge: Coalesce git fetches
eac64bb7a [qa] Test nMinimumChainWork
0311836f6 Allow setting nMinimumChainWork on command line
b3d6fc654 Improve signmessages functional test
87fe21f81 Add translation note to CONTRIBUTING.md
d1138e362 Remove redundant testutil files
47ba2c312 Fix currency/fee-rate unit string in the help text
8fdb6f912 [tests] fixup dbcrash interaction with add_nodes()
258d33b41 [mempool] Mark unaccepted txs present in mempool as 'already there'.
d01a9682b wallet: update stored witness in AddToWallet
9db9d6215 Refactor: make the read function simpler
dc334fe74 Update hmac_sha256.h
3918d93f3 [tests] fixups from set_test_params()
7148b74dc [tests] Functional tests must explicitly set num_nodes
5448a1471 [tests] don't override __init__() in individual tests
6cf094a02 [tests] Avoid passing around member variables in test_framework
36b626867 [tests] TestNode: separate add_node from start_node
be2a2ab6a [tests] fix - use rpc_timeout as rpc timeout
dea086f49 Stop test_bitcoin-qt touching ~/.bitcoin
5abb93f0e Fix include path for bitcoin-config.h in crypto/common.h
617c459c6 qa: rpc test for wtxid in mempool entry
7e5d5965d RPC: add wtxid to mempool entry output
7bb5d3000 Add python3 to list of dependencies on some platforms
14ccd4d8d [Qt] Fix display of package name on 'open config file' tooltip
e91211878 [Refactor] Combine scriptPubKey and amount as CTxOut in CScriptCheck
ec6902d0e rpc: Push down safe mode checks
6d2d2eb49 RPC: gettxout: Slightly improve doc and tests
4f2905b76 Add getmininginfo functional test
78214588d Use for-loop instead of list comprehension
823979436 Use the variable name _ for unused return values
2e6080bbf Remove unused variables and/or function calls
9b94054b7 Avoid reference to undefined name: stderr does not exist, sys.stderr does
51cb6b822 Use print(...) instead of undefined printf(...)
25cd520fc Use sys.exit(...) instead of exit(...): exit(...) should not be used in programs
538cc0ca8 build: Mention use of asm in summary
ce5381e7f build: Rename --enable-experimental-asm to --enable-asm and enable by default
55509f1a1 Document assumptions that are being made to avoid division by zero
b426e2467 Remove redundant explicitly defined copy ctors
946638d0a Improve versionbits_computeblockversion test code consistency
e2548302f Make tabs toolbar no longer have a context menu
5ac072caa Fix boost headers included as user instead of system headers
9b348ff9e Fix memory leaks in qt/guiutil.cpp
37c4362f2 Trivial: Documentation fixes for CVectorWriter ctors
8897b1b1b Add meshcollider gitian key
bc70ab5df Fix header guards using reserved identifiers
6af49ddde Output a bit more information for fee calculation report.
a54c7b94f Fix rounding errors in calculation of minimum change size
eefc2f36f Move local include to before system includes
ac1cf8d55 Trivial: Improve #endif comments
e40fa987e Simplify bswap_16 implementation
62ecce75e [doc] Add RPC response notes
82dd7195e rpc: Write authcookie atomically
07704c1b3 Add some tests for getchaintxstats
33366768a Fix getchaintxstats()
0063d2c3d [tests] Make p2p-leaktests.py more robust
de9a1db2e Acquire cs_main lock before cs_wallet during wallet initialization
c6a995e7e Improve readability of DecodeBase58Check(...)
79191f51b Add option -stdinrpcpass to allow RPC password to be read from standard input
2b4ea520b [tests] fix timeout issues from TestNode
fa14b6797 [doc] build-windows: Mention that only trusty works
ecb11f561 Document the non-strict-DER-conformance of one test in tx_valid.json.
c00199244 Fix potential null dereferences
f1708ef89 Add recommendation: By default, declare single-argument constructors `explicit`
cd0ea4874 Changing -txindex requires -reindex, not -reindex-chainstate
ee4d1493e Drop upgrade-cancel callback registration for a generic "resumeable"
c1470a058 test: Increase initial RPC timeout to 60 seconds
4452829b1 gitian: quick hack to fix version string in releases
a65e02803 Build with --enable-werror under OS X
06a3aecf0 Docs: Hash in ZMQ hash is raw bytes, not hex
360b464a0 Comments: More comments on functions/globals in standard.h.
bea8e9e66 Document the preference of nullptr over NULL or (void*)0
f9ca0fe44 Fix combinerawtransaction RPC help result section
07685d1bc Add length check for CExtKey deserialization
6bbdafcdc Pass serialization flags and whether to include hex to TxToUniv
5be6e9b4f doc: Update build-openbsd for 6.1
6c4042a5d Assert that CWallet::SyncMetaData finds oldest transaction.
08ce33f8e qa: Move wait_until to util
bfebc0b80 Remove dead store in ecdsa_signature_parse_der_lax.
d1e6f91f8 Prefer compile-time checking over run-time checking
67ceff403 [wallet] Add logging to MarkReserveKeysAsUsed
1221f60c9 [wallet] Remove keypool_topup_cleanups
84e2462cc contrib: Add Valgrind suppressions file
64fb0ac01 Declare single-argument (non-converting) constructors "explicit"
36d326e8b Use nullptr instead of zero (0) as the null pointer constant
f42fc1d50 doc: spelling fixes
e53615b44 Remove vchDefaultKey and have better first run detection
c6ec4358a [tests] Add bitcoin_cli.py test script
b23549f6e [tests] add TestNodeCLI class for calling bitcoin-cli for a node
745d2e315 Clean up getbalance RPC parameter handling
844b73e48 disable jni in builds
789733891 [tests] Introduce TestNode
fd5d71ec4 Update developer notes after params.size() cleanup
e067673f4 Avoid treating null RPC arguments different from missing arguments
e666efcdb Get rid of redundant RPC params.size() checks
8f2f1e045 wallet: Avoid second mapWallet lookup
c06755f5c wallet: Fix memory leak when loading a corrupted wallet file
a897d0e37 tests: Remove OldSetKeyFromPassphrase/OldEncrypt/OldDecrypt
cffe85f97 Skip sys::system(...) call in case of empty command
6fb8f5f17 Check that -blocknotify command is non-empty before executing
99ba0c300 Don't use pass by reference to const for cheaply-copied types (bool, char, etc.).
b109a1c39 Remove redundant nullptr checks before deallocation
140de14a1 gitian: bump descriptors for master
f6283b471 build: bump version to 0.15.99
f01103c1e MOVEONLY: Init functions wallet/wallet.cpp -> wallet/init.cpp
e7fe3208a MOVEONLY: Fee functions wallet/wallet.cpp -> wallet/fees.cpp
d97fe2016 Move some static functions out of wallet.h/cpp
fcbde9091 remove unused gArgs wrappers
bb81e1735 scripted-diff: stop using the gArgs wrappers
1227be30e doc: Update release notes from wiki
e93ff718c Add instructions for multi-processor gitian builds
08f71c29e [Trivial] Add a comment on the use of prevector in script.
bdf607e43 test: Add resendwallettransactions functional tests
793667af1 Improve shutdown process
f1bf31186 [qa] Fix block message processing error in sendheaders.py
86279464b [RPC] trivial: gettxout no longer shows version of tx
e029c6e70 Only return hex field once in getrawtransaction
85c82b50d Avoid masking of difficulty adjustment errors by checkpoints
4aa25089b Bugfix: Use testnet RequireStandard for -acceptnonstdtxn default
faa76d1b7 qa: Fix inv race in example_test
d34957e17 [wallet] [tests] Add keypool topup functional test
095142d1f [wallet] keypool mark-used and topup
cc5d38f4b Add option to attach a python debugger if test fails
67f6f1c2d qt: Periodic translations update
8c2f4b888 Expose more parallelism with relaxed atomics (suggested in #9938). Fix a test to check the exclusive or of two properties rather than just or.
ab8e8b97a Remove unused variables in shell scripts.
1bcd44223 Remove the virtual specifier for functions with the override specifier
03bc719a8 [wallet] Close DB on error.
3f8fa7f58 Make sure to clean up mapBlockSource if we've already seen the block
13b1e9a16 Capitalize bullet points in CONTRIBUTING guide
f4c3d2c9d Enable disablesafemode by default.
9d5e98ff8 Fix typos.
055d95f84 [wallet] return correct error code from resendwallettransaction
5e35cd94c [tests] Test disconnecting unsupported service bits logic.
861f9a28b Skip remainder of init if upgrade is cancelled
ce076383a doc: Add comment to use ValueFromAmount/AmountFromValue for JSON, not utilmoneystr
ec05c508c rpc: Use ValueFromAmount instead of FormatMoney in TxToUniv
46347add4 rpc: Move ValueFromAmount to core_write
dac37823d doc: Correct AmountFromValue/ValueFromAmount names
446e2610b [qt] Fix potential memory leak in newPossibleKey(ChangeCWallet *wallet)
90d4d8923 scripted-diff: Use the C++11 keyword nullptr to denote the pointer literal instead of the macro NULL
01699fb28 Fix resendwallettransactions assert failure if -walletbroadcast=0
1de73f4e1 Disconnect network service bits 6 and 8 until Aug 1, 2018
6d2aac8bb Travis: Test build against system libs (& Qt4)
8d82e1336 Travis: Remove bc tool from dependencies
1967d2a4d qt: Increase BLOCK_CHAIN_SIZE constants
c25d90f12 [wallet] Add HasUnusedKeys() helper
9baca4198 build: always attempt to enable targeted sse42 cxxflags
f2123e3a7 [wallet] Cache keyid -> keypool id mappings
ce3baa193 changed regtest RPCport to 18443 to avoid conflict with testnet 18332
8842d1a5d Add undocumented -forcecompactdb to force LevelDB compactions
b1973d618 Update chain transaction statistics
3498a8d01 depends: fix fontconfig with newer glibc
83f1ec33c [wallet] Don't hold cs_LastBlockFile while calling setBestChain
2376bfcf2 [wallet] [moveonly] Move LoadKeyPool to cpp
cab8557e3 [wallet] [moveonly] Move CAffectedKeysVisitor
11dd29b65 [net] Fix use of uninitialized value in getnetworkinfo(const JSONRPCRequest& request)
d3d946a29 Pass SendCoinsRecipient (208 bytes) by const reference
7f121a079 Fix typo in sendcoinsdialog.
e7539f864 Fix some broken init-time prints/constants
3eb53b867 Avoid returning a BIP9Stats object with uninitialized values
13ab35382 Check for empty coinsview instead of just-reset coinsview in init
fce3f4f49 Fix resume-of-reindex-after-restart
efac91e65 Always wait for threadGroup to exit in bitcoind shutdown
b13a68e12 Squashed 'src/leveldb/' changes from 196962ff0..c521b3ac6
fd05132e5 Restore default format state of cout after printing with std::fixed/setprecision
986255026 Use the noexcept specifier (C++11) instead of deprecated throw()
42307c4bf qt: Periodic translations update
f0aceddf8 p2p: Hardcoded seeds update pre-0.15 branch
d201e40c5 Update init.md: Fix section numbering.
bdd5543ad Clarify help message for -discardfee
d84e78ec3 [wallet] Specify wallet name in wallet loading errors
a6da027d8 Reject invalid wallet files
3ef77a0c1 Reject duplicate wallet filenames
efeb27330 Force on-the-fly compaction during pertxout upgrade
49d903e69 Eliminate fee overpaying edge case when subtracting fee from recipients
9a8b05418 Update defaultAssumeValid according to release-process.md.
e222dc2ae Replace ismine with producesignature check in witnessifier
c0025d0a9 Fix segfault when shutting down before fully loading
138569722 Order chainstate init more logically.
ff3a21919 Call RewindBlockIndex even if we're about to run -reindex-chainstate
b0f32497b More user-friendly error message if UTXO DB runs ahead of block DB
eda888e57 Fix some LoadChainTip-related init-order bugs.
ee2d10ad0 Check if sys/random.h is required for getentropy on OSX.
df389bca2 Change wallet method disabled error text
e526b3d34 Fix misleading "Method not found" multiwallet errors
065039da1 [tests] Fix incorrect memory_cleanse(…) call in crypto_tests.cpp
1e65f0f33 Use compile-time constants instead of unnamed enumerations (remove "enum hack")
60f9778ab Revert "[tests] Allow tests to pass when stderr is non-empty"
9f8a46f07 Properly document target_confirmations in listsinceblock
88af22768 test: Make sure wallet.backup is created in temp path
6e8c48dc5 Add const to methods that do not modify the object for which it is called
4a7a4ff1f developer-notes: add reference to snake_case and PascalCase
a622a1768 Fix constness of ArgsManager methods
72f00608d Replace traditional for with ranged for in primitives
fe09b0197 add missing lock to crypter GetKeys()
5cb3da04b keystore GetKeys(): return result instead of writing to reference
a56f8b0be Add missing lock in CScheduler::AreThreadsServicingQueue()
f228b8e16 remove some unused functions
05e023f2e Move CloseSocket out of SetSocketNonBlocking and pass SOCKET by const reference in SetSocket* functions
0be03c71b Qt: Use _putenv_s instead of setenv on Windows builds
44eb9d406 [QA] Avoid running multiwallet.py twice
876e92bf5 Testing: listsinceblock should display all transactions that were affected since the given block, including transactions that were removed due to a reorg.
f999c46ca listsinceblock: optionally find and list any transactions that were undone due to reorg when requesting a non-main chain block in a new 'removed' array.
6adc3a373 qt: Periodic translations update
3707fcd94 [wallet] [tests] Add listwallets to multiwallet test
9508761ed [wallet] [rpc] Add listwallets RPC
4a057152d [wallet] [rpc] print wallet name in getwalletinfo
09eacee6b [wallet] fix comment for CWallet::Verify()
97375727b [Qt] Use wallet 0 in rpc console if running with multiple wallets
6b8d872e5 Protect SSE4 code behind a compile-time flag
fa9be909c Add selftest for SHA256 transform
c1ccb15b0 Add SSE4 based SHA256
2991c91d8 Add SHA256 dispatcher
4d50f38fe Support multi-block SHA256 transforms
352d582ba Add vConnect to CConnman::Options
a5ecaf149 Fix misspellings and remove safety verbiage
2264236da Rename -usewallet to -rpcwallet
72a184a78 Update init.md: Fix line breaks in section 3b.
1c9b81875 getinfo deprecation warning
6b4f231f5 Move transaction combining from signrawtransaction to new RPC
cf82a9e70 Do not allow users to get keys from keypool without reserving them
e0d459264 Avoid redundant redeclaration of GetWarnings(const string&)
5a6671c4c Fix typo: "conditon" → "condition"
35aff4321 Remove unused variable int64_t nEnd
99c7fc39a Prevent user from specifying conflicting parameters to fundrawtx
f4d00e63f Add a discard_rate
077d01f2f random: only use getentropy on openbsd
095b91746 Avoid using sizes on non-fixed-width types to derive protocol constants.
1ce9f0a95 Ensure that ECDSA constant sizes are correctly-sized
48abe78e5 Remove redundant `= 0` initialisations
17fa3913e Specify ECDSA constant sizes as constants
e4a10860a Update Debian copyright list
e181dbe74 Add comments
a3603ac6f Fix potential overflows in ECDSA DER parsers
b82c55af7 Add attribute [[noreturn]] (C++11) to functions that will not return
1fc8c3de0 No longer ever reuse keypool indexes
6b9faf747 [QA] add basic multiwallet test
979d0b8a6 [tests] [wallet] Add wallet endpoint support to authproxy
76603b132 Select wallet based on the given endpoint
32c9710c5 Fix test_bitcoin circular dependency issue
31e07203b Add wallet endpoint support to bitcoin-cli (-usewallet)
40a0f9fb9 Enable devirtualization opportunities by using the final specifier (C++11)
9a1675ee5 optim: mark a few classes final
c5ebddd11 Tests: address placement should be deterministic by default
06bcdb8da Convert named argument from nblocks to conf_target
439c4e8ad Improve api to estimatesmartfee
b0e8e2de8 Print one log message per keypool top-up, not one per key.
41dc16358 Increase wallet default keypool size to 1000.
30d8f3a18 Pushdown walletdb though CWallet::AddKeyPubKey to avoid flushes.
dba485d65 init: Factor out AppInitLockDataDirectory
4dc1915bc check for null values in rpc args and handle appropriately
999ef2073 importmulti options are optional
a70d02536 fixup some rpc param counting for rpc help
b1385852e Remove factor of 3 from definition of dust.
dd2185c29 Register wallet endpoint
2c2e90d1d Fix incorrect Doxygen tag (@ince → @since). Make Doxygen parameter names match actual parameter names.
41bf1598f Remove unreachable code
d0413c670 Use range based for loop
c53369cc2 Remove duplicate include
3a53f1971 Pushdown walletdb object through GenerateNewKey/DeriveNewChildKey.
912da1dcc Use AC_ARG_VAR to set ARFLAGS.
a8ae0b252 Fix resource leak
4c3b538c6 [logs] fix zapwallettxes startup logs
4d4fb33fc Rename member field according to the style guide.
e7a2181b4 [wallet] fix zapwallettxes interaction with persistent mempool
ff7365e78 [tests] fix flake8 warnings in zapwallettxes.py
e061d8d7a Remove declaration of unused function: void UpdatedTransaction(const uint256 &)
0189d8ed1 Fix typos
6835cb0ab Avoid static analyzer warnings regarding uninitialized arguments
11590d39b Properly bound check conf_target in wallet RPC calls
fd29d3df2 Remove checking of mempool min fee from estimateSmartFee.
2fffaa973 Make QT fee displays use GetMinimumFee instead of estimateSmartFee
1983ca6cb Use CoinControl to pass custom fee setting from QT.
03ee70116 Refactor to use CoinControl in GetMinimumFee and FeeBumper
ecd81dfa3 Make CoinControl a required argument to CreateTransaction
d40a72ccb Clarify *(--.end()) iterator semantics in CWallet::TopUpKeyPool
28301b978 Meet code style on lines changed in the previous commit
4a3fc3562 Track keypool entries as internal vs external in memory
c73b8be24 Explicitly initialize prevector::_union to avoid new warning
3babbcb48 Remove confusing MAX_BLOCK_BASE_SIZE.
674848fe1 Clarify entropy source
a2420ae2f Avoid unnecessary work in SetNetworkActive
a9e82f651 Use cpuid intrinsics instead of asm code
465279114 Fix uninitialized atomic variables
5c643241e [utils] allow square brackets for ipv6 addresses in bitcoin-cli
dd97a529a Properly forbid -salvagewallet and -zapwallettxes for multi wallet.
d34d77a51 build: verify that the assembler can handle crc32 functions
2aef1f182 [Qt] migrate old fee slider value to new dropbown Always round up (conservative)
bc1be90e3 [Qt] replace fee slider with a Dropdown, extend conf. targets
37495e0d8 Reorder C{,Mutable}Transaction for better packing
69a4339ef missing white space in function arg
fe4fabaf1 [refactor] move SplitHostPort() into utilstrencodings
228987d84 getbalance example covers at least 6 confirms
1016dacfa Fix signed/unsigned comparison warning introduced in c8e29d7ff0.
8276e70de Adding assert to avoid a memory access violation inside of PartialMerkleTree::CalcHash()
0f402b926 Fix rare edge case of paying too many fees when transaction has no change.
253cd7ec4 Only reserve key for scriptChange once in CreateTransaction
c8e29d7ff Replace MAX_OPCODE for OP_NOP10.
1f668b646 Expose if CScheduler is being serviced, assert its not in EmptyQueue
5e3b7b568 Improve error reporting for estimaterawfee
1fafd704d Add function to report highest estimate target tracked per horizon
9c85b91dc Change API to estimaterawfee
475c08cb4 Add PR description to merge commit in github-merge.py
f135923ee Add RPC options for RBF, confirmation target, and conservative fee estimation.
1e3a3200a Simplify "!foo || (foo && bar)" as "!foo || bar"
49eb0916d [tests] Avoid redundant assignments. Remove unused variables.
30ac7688e Fix subscript[0] potential bugs in key.cpp
4b1c0f2e2 Remove unnecessary branches in utilstrencodings string constructors.
e19db7b5a Fix subscript[0] in utilstrencodings.cpp
bc2e7fd98 Fix subscript[0] in streams.h
4cac0d1e0 Fix subscript[0] in validation.cpp
ac658e55f Fix subscript[0] in torcontrol
b6856ebed Fix subscript[0] in netaddress.cpp
361d95265 Fix subscript[0] in base58.cpp
6896dbf16 Cleanup (safe, it was checked) subscript[0] in MurmurHash3 (and cleanup MurmurHash3 to be more clear).
96f2119e6 Fix subscript[0] in compressor.cpp
500710bd2 Fix 2 subscript[0] bugs in pubkey.cpp, and eliminate one extra size check
e0451e3e2 Fix subscript[0] bug in net.cpp if GetGroup returns a 0-sized vector
d9d1bd326 nCheckDepth chain height fix
5618b7d1a Do not shadow upper local variable `state`.
0aadc11fd Avoid dereference-of-casted-pointer
3192975f1 Flush CValidationInterface callbacks prior to destruction
08096bbbc Support more than one CScheduler thread for serial clients
2fbf2dbe1 Add default arg to CScheduler to schedule() a callback now
cda1429d5 Give CMainSignals a reference to the global scheduler
301fd51b9 [tests] fix replace_by_fee.py
f0bf33da8 Change default fee estimation mode.
e0738e3d3 remove default argument from estimateSmartFee
d507c301b Introduce a fee estimate mode.
cfaef69ac remove default argument from GetMinimumFee
bc7d1032f Fix multi_rpc test for hosts that dont default to utf8
4ccc12a54 [qa] Rewrite BIP66 functional tests
191d12b07 qt: First translations update for 0.15
581c41157 Properly comment about shutdown process in init.cpp file
73c942ecd Use "replaceable" instead of "rbfoptin" in bitcoin-tx.
fb915d5b1 Use "replaceable" instead of "optIntoRbf" in fundrawtransaction.
928c6811f Use "replaceable" instead of "optintorbf" in createrawtransaction.
58e986408 [rpc] fix verbose argument for getblock in bitcoin-cli
9bbf60047 Use method name from __func__ macro
bd00fa52a [test] don't run dbcrash.py on Travis
3a19fed9d Make ValidationInterface signals-type-agnostic
ff6a834fc Use TestingSetup to DRY qt rpcnestedtests
ecb4fc382 fix typo in help text for removeprunedfunds
27c63dc05 [tests] nits in dbcrash.py
959dd8781 Avoid printing incorrect block indexing time due to uninitialized variable
1cc251f50 Explicitly search for bdb5.3.
1d8df0141 Fix MD formatting in REST-interface.md and spelling mistake in test_runner.py
01013f5d2 Simplify tx validation tests
2dd6f8068 Add a test that all flags are softforks
2851b7731 Make all script verification flags softforks
d4f0d87b6 [qa] Rewrite BIP65 functional tests
f2f1d0a83 document script-based return fields for validateaddress
b8bb4257f REST/RPC example update
542ce6e24 Report [CANCELLED] instead of [DONE] when shut down during txdb upgrade
83fbea3f2 Report txdb upgrade not more often then every 10%
06c5b6edd Show txdb upgrade progress in debug log
316fcb510 Allow to cancel the txdb upgrade via splashscreen callback
ae09d4583 Allow to shut down during txdb upgrade
00cb69bc8 [Qt] allow to execute a callback during splashscreen progress
5ba83c1d4 [tests] fix nits.
d64ac3f4a [tests] Allow tests to pass when stderr is non-empty
05b8c081b [tests] reorganize utils.py module (code move only)
0d473c539 [tests] move mocktime property and functions to BitcoinTestFramework
cad967a89 [tests] Move stop_node and start_node methods to BitcoinTestFramework
f1fe5368f [tests] fix flake8 warnings in test_framework.py and util.py
37065d2ed [tests] remove unused imports from utils.py
2a962834f rpc: Update `generate` for developer notes
df7e2f057 rpc: Move the `generate` RPC call to rpcwallet
4ed36539b [qa] Bugfix: allow overriding extra_args in ComparisonTestFramework
3c85332f2 contrib: Update laanwj key
aa95947de Use the override specifier (C++11) where we expect to be overriding the virtual function of a base class
21d4afa12 Comment clarifications in coins.cpp
e3f9c05b9 Add CheckInputs() unit tests
3c8a9aeff Add belt-and-suspenders in DisconnectBlock
381b8fc36 Clarify CCoinsViewMemPool documentation.
18bacec6c Make check to distinguish between orphan txs and old txs more efficient.
22378adbe Remove no longer used mempool.exists(outpoint)
7ec3343df add gdb attach process to test README
11ba8e9cd [tests] rename getblocktemplate_proposals.py to mining.py
b29dd41f0 [tests] add test for submit block
9bf0d80ab [tests] run successful test in getblocktemplate first
82dc59706 [tests] don't build blocks manually in getblocktemplate test
f82c709fb [tests] clarify assertions in getblocktemplate test
66c570a38 [tests] Don't build the coinbase manually in getblocktemplate test
38b38cd2d [tests] getblocktemplate_proposals.py: add logging
0a3a5ff45 [tests] Fix flake8 warnings in getblocktemplate tests
32cffe6be [tests] Fix import order in getblocktemplate test
ca67ddf0b Move the AreInputsStandard documentation next to its implementation
fd9599b13 [qt] Avoid potential null pointer dereference in TransactionView::exportClicked()
73041c3c9 RPC Docs: addmultisigaddress is intended for non-watchonly addresses
e7ba6c16b [tests] add example test
76859e6a7 [tests] Update functional tests documentation
41f3e84aa Fix inconsistencies and grammar in various files
ed866ab92 Indentation after 'Remove redundant calls to gArgs.IsArgSet()'
506b700dc Util: Remove redundant calls to gArgs.IsArgSet()
21180ff73 Simplify return values of GetCoin/HaveCoin(InCache)
176c021d0 [qa] Test non-atomic chainstate writes
d6af06d68 Dont create pcoinsTip until after ReplayBlocks.
eaca1b7b0 Random db flush crash simulator
0580ee08f Adapt memory usage estimation for flushing
013a56aa1 Non-atomic flushing using the blockchain as replay journal
b3a279cd5 [MOVEONLY] Move LastCommonAncestor to chain
c07475294 [RPC] Add an uptime command that displays the amount of time that bitcoind has been running
5155d1101 Initialize randomness in benchmarks
fab1fb737 [qa] blockchain: Pass on closed connection during generate call
deaf48b04 Handle TIMESTAMP_WINDOW within CWallet::RescanFromTime
5b2be2b78 Make CWallet::RescanFromTime comment less ambiguous
92fb8bd81 Slightly overhaul NSI pixmaps
c1be28536 chainparams: make supported service bits option explicit
d5c7c1cfe net: use an internal address for fixed seeds
6270d624c Verify binaries from bitcoincore.org and bitcoin.org
a3543af3c Better document CheckInputs parameter meanings
309ee1ae7 Update -maxsigcachesize doc clarify init logprints for it
b014668e2 Add CheckInputs wrapper CCoinsViewMemPool -> non-consensus-critical
0a5a6b90b Fixed multiple typos
b1268a19d clang-format: Delete ForEachMacros
5995735c5 scripted-diff: Remove #include <boost/foreach.hpp>
3eff827f8 scripted-diff: Remove BOOST_REVERSE_FOREACH
33aed5bf8 Fix const_reverse_iterator constructor (pass const ptr)
300851ec1 Introduce src/reverse_iterator.hpp and include it...
700d8d85b Remove obsolete _MSC_VER check
999923e4b [qa] util: Check return code after closing bitcoind proc
5555fa8b7 qa: Add stopatheight test
2c3fc5150 [depends] expat 2.2.1
e503b2b68 fixed listunspent rpc convert parameter
fab9b60fb doc: Remove outdated minrelaytxfee comment
279fde58e Check for rpcuser/rpcpassword first then for cookie
22229dec4 doc: Add 0.14.2 release notes
9af207c81 random: fix crash on some 64bit platforms
18873373b Add a comment explaining the use of MAX_BLOCK_BASE_SIZE.
07b2afef1 add Binds, WhiteBinds to CConnman::Options
ce79f3251 add WhitelistedRange to CConnman::Options
131a8ceb7 Make clang-format use C++11 features (e.g. A<A<int>> instead of A<A<int> >)
cc0ed2675 Supress struct/class mismatch warnings introduced in #10284.
6cdc488e3 net: switch to dummy internal ip for dns seed source
6d0bd5b73 net: do not allow resolving to an internal address
7f31762cb net: add an internal subnet for representing unresolved hostnames
781099333 [trivial] fix indentation for ArgsManager class
61718268b Don't create change at the dust limit, even if it means paying more than expected
0ef7de953 [RPCs] Remove submitblock parameters argument help text
f2fb132cb Net: Fix resource leak in ReadBinaryFile(...)
e9cd7786d Pass in smart fee slider value to coin control dialog
cb24c8539 Use rdrand as entropy source on supported platforms
1d1ea9f09 Turn TryCreateDirectory() into TryCreateDirectories()
1bebfc8d3 Output Fee Estimation Calculations in CreateTransaction
d5711f4a2 Filter subtrees and and benchmarks from coverage report
dd869c60c Add an explanation of quickly hashing onto a non-power of two range.
8e69adc66 Add missing include for atomic in db.h
4087d9ea7 Remove unnecessary forward class declarations in header files
0a4912e46 [tests] timeout integration tests on travis after 20 minutes
7c51e9f0d [tests] destroy zmq context in zmq_tests.py
b1bac1cb7 [tests] in zmq test, timeout if message not received
4265bf351 Remove unreachable or otherwise redundant code
a090d1c1c Header include guideline
67ca81684 Simplify "bool x = y ? true : false" to "bool x = y"
3ee3d0437 Add extra LevelDB source to Makefile
2424989e4 leveldb: enable runtime-detected crc32 instructions
cf44e4ca7 Squashed 'src/leveldb/' changes from a31c8aa40..196962ff0
c45cbaf69 Fix stopatheight
e241a63c2 Clarify prevector::erase and avoid swap-to-clear
405b86a92 Replace lcov -r commands with faster way
9417d7a33 Be much more agressive in AccessCoin docs.
f58349ca8 Restore some assert semantics in sigop cost calculations
3533fb4d3 Return a bool in SpendCoin to restore pre-per-utxo assert semantics
e53a0fa12 Remove duplicate includes
dce82397c Comment out unused constant REJECT_DUST
763106677 Use the "domain name setup" image (previously unused) in the gitian docs
49de096c2 Remove unused Boost includes
bf376eacc Return early in IsBanned.
3ec5ad88e Add test for rpcuser/rpcpassword
3289ef4fe Remove unused constant MEMPOOL_GD_VERSION
525769853 Change semantics of HaveCoinInCache to match HaveCoin
5ebd5f9e1 [tests] tidy up zmq_test.py
c53c9831e Replace cookie auth in tests
ec98b78e1 Tests for wallet encryption stuff
3ff1fa8c4 Use override keyword on CCoinsView overrides
4a0c08fdc [tests] update zmq test to use correct config.ini file
7222388bb Avoid printing generic and duplicated "checking for QT" during ./configure
9f841a6c3 [tests] Remove accidental trailing semicolon
30c2d9db4 [tests] Remove unused function InsecureRandBytes(size_t len)
6294f3283 gettxoutproof() should return consistent result
c8914b9db Have `make cov` optionally include branch coverage statistics
ac4e43822 Sanity check transaction scripts in DecodeHexTx
5b75c4778 Add a valid opcode sanity check to CScript
e94584858 scripted-diff: Use new naming style for insecure_rand* functions
0abc58890 [tests] Remove printf(...)
227ae9b34 [tests] Use FastRandomContext instead of boost::random::{mt19937,uniform_int_distribution}
2fcd9cc86 scripted-diff: Use randbits/bool instead of randrange where possible
2ada67852 Use randbits instead of ad-hoc emulation in prevector tests
5f0b04eed Replace rand() & ((1 << N) - 1) with randbits(N)
3ecabae36 Replace more rand() % NUM by randranges
e5c616888 Fix instantiation and array accesses in class base_uint<BITS>
24e44c354 Don't return stale data from CCoinsViewCache::Cursor()
eada04e77 Do not print soft-fork-script warning with -promiscuousmempool
b5fea8d0c Cache full script execution results in addition to signatures
6d22b2b17 Pull script verify flags calculation out of ConnectBlock
246a02fb1 Use std::unordered_{map,set} (C++11) instead of boost::unordered_{map,set}
c237bd750 wallet: Update formatting
9cbe8c80b wallet: Forbid -salvagewallet, -zapwallettxes, and -upgradewallet with multiple wallets
a2a5f3f0f wallet: Base backup filenames on original wallet filename
b823a4c9f wallet: Include actual backup filename in recovery warning message
84dcb4501 Bugfix: wallet: Fix warningStr, errorStr argument order
008c36008 Wallet: Move multiwallet sanity checks to CWallet::Verify, and do other checks on all wallets
0f08575be Wallet: Support loading multiple wallets if -wallet used more than once
b124cf04e Wallet: Replace pwalletMain with a vector of wallet pointers
8ad5bdef7 Merge bctest.py into bitcoin-util-test.py
3fb81a848 Use list initialization (C++11) for maps/vectors instead of boost::assign::map_list_of/list_of
40796e1a9 Remove references to priority that snuck back in in 870824e9.
24980a3e4 Make functions in validation.cpp static and pass chainparams
b083db617 [trivial] Fix typo: "occurrences" (misspelled as "occurrances")
8d4dafd77 contrib/verifybinaries: allow filtering by platform
ec1271f2b Remove useless mapNextTx lookup in CTxMemPool::TrimToSize.
fa62dadab [qa] fundrawtx: Fix shutdown race
9a5a1d7d4 RPC/rawtransaction: createrawtransaction: Check opt_into_rbf when provided with either value
23b0fe34f bitcoin-tx: rbfoptin: Avoid touching nSequence if the value is already opting in
b005bf21a Introduce MAX_BIP125_RBF_SEQUENCE constant
575cde460 [bitcoin-tx] add rbfoptin command
5d2624414 [Tests] extend the replace-by-fee test to cover RPC rawtx features
36bcab235 RPC/Wallet: Add RBF support for fundrawtransaction
891c5eeec Wallet: Refactor FundTransaction to accept parameters via CCoinControl
578ec80d4 RPC: rawtransaction: Add RBF support for createrawtransaction
19b3648bb CWalletDB: Store the update counter per wallet
74e873896 Bugfix: ForceSetArg should replace entr(ies) in mapMultiArgs, not append
23fb9adae wallet: Move nAccountingEntryNumber from static/global to CWallet
9d15d5548 Bugfix: wallet: Increment "update counter" when modifying account stuff
f28eb8020 Bugfix: wallet: Increment "update counter" only after actually making the applicable db changes to avoid potential races
76f74811c Add timeout for headers sync
efee1db21 scripted-diff: use insecure_rand256/randrange more
1119927df Add various insecure_rand wrappers for tests
124d13a58 Merge test_random.h into test_bitcoin.h
90620d66c scripted-diff: Rename cuckoo tests' local rand context
37e864eb9 Add FastRandomContext::rand256() and ::randbytes()
8b22af3ee Replace bytes_serialized with bogosize
1238f13cf scripted-diff: Remove PAIRTYPE
18dc3c396 scripted-diff: Remove Q_FOREACH
7c00c2672 scripted-diff: Fully remove BOOST_FOREACH
a5410ac5e Small preparations for Q_FOREACH, PAIRTYPE and #include <boost/foreach.hpp> removal
4f92b5fb3 Run Qt wallet tests on travis
9bb66ab66 Add RescanFromTime method and use from rpcdump
ccf84bb9c Move birthday optimization out of ScanForWalletTransactions
345733138 test: Add test for `getpeerinfo` `bindaddr` field
a7e3c2814 rpc: Add listen address to incoming connections in `getpeerinfo`
16be7ddba Improve bitcoind systemd service file
90593ed92 Limit variable scope
656dbd871 Perform member initialization in initialization lists where possible
a8c09affc Remove unused variables
cc36b5e3d [test] Add test for getchaintxstats
9aa215bff Bugfixes: missing == 0 after randrange
e4bc19f6f Remove xvfb configuration from travis
d9bec888f Use REJECT_DUPLICATE for already known and conflicted txn
cf68a488a Deduplicate addrdb.cpp and use CHashWriter/Verifier
589827975 scripted-diff: various renames for per-utxo consistency
a5e02bc7f Increase travis unit test timeout
73de2c1ff Rename CCoinsCacheEntry::coins to coin
119e552f7 Merge CCoinsViewCache's GetOutputFor and AccessCoin
580b02309 [MOVEONLY] Move old CCoins class to txdb.cpp
8b25d2c0c Upgrade from per-tx database to per-txout
b2af357f3 Reduce reserved memory space for flushing
41aa5b79a Pack Coin more tightly
97072d668 Remove unused CCoins methods
ce23efaa5 Extend coins_tests
508307968 Switch CCoinsView and chainstate db from per-txid to per-txout
4ec0d9e79 Refactor GetUTXOStats in preparation for per-COutPoint iteration
13870b56f Replace CCoins-based CTxMemPool::pruneSpent with isSpent
05293f3cb Remove ModifyCoins/ModifyNewCoins
961e48397 Switch tests from ModifyCoins to AddCoin/SpendCoin
8906a9a0d Fix bumpfee test after #10449
8b3868c1b Switch CScriptCheck to use Coin instead of CCoins
c87b957a3 Only pass things committed to by tx's witness hash to CScriptCheck
f68cdfe92 Switch from per-tx to per-txout CCoinsViewCache methods in some places
000391132 Introduce new per-txout CCoinsViewCache functions
bd83111a0 Optimization: Coin&& to ApplyTxInUndo
cb2c7fdac Replace CTxInUndo with Coin
b9b814a38 Avoid CWalletTx copies in GetAddressBalances and GetAddressGroupings
5f672ca8c net: Denote some CNode functions const
53f6775fe fixup: fix nits
ac9cd953d contrib: Update location of seeds.txt
a473eff8f [bench] Replace 0.00(000)1 with MICRO/MILLI #defines in validation.cpp.
5f850b031 [bench] Include ms/blk stats in Connect* benchmarks.
a433d8a15 [tests] Update start/stop node functions to be private module functions
d8c218f9c [tests] Functional tests call self.start_node(s) and self.stop_node(s)
5a9b50827 [trivial] Add end of namespace comments
cf390dff8 build: silence gcc7's implicit fallthrough warning
1983c8772 devtools: Retry after signing fails in github-merge
5432fc3d5 Fail on commit with VERIFY SCRIPT but no scripted-diff
b463bc921 scripted-diff: s/BIP9DeploymentInfo/VBDeploymentInfo/
29c07196d Rename -bip9params to -vbparams
42a83e545 [trivial] Fix comment for ForceSetArg()
5d6752602 add SeedNodes to CConnman::Options
f128f78dd getmempool mempoolminfee is a BTC/KB feerate
b6fbfc228 net: only enforce the services required to connect
16d94d3d0 Fixing typo in rpcdump.cpp
f28514576 Introduce static DoWarning (simplify UpdateTip)
47d844146 Update style guide
422634e2f Introduce Coin, a single unspent output
7d991b55d Store/allow tx metadata in all undo records
c3aa0c119 Report on-disk size in gettxoutsetinfo
d34242430 Remove/ignore tx version in utxo and undo
7e0032290 Add specialization of SipHash for 256 + 32 bit data
e484652fc Introduce CHashVerifier to hash read data
f54580e7e error() in disconnect for disk corruption, not inconsistency
e66dbde6d Add SizeEstimate to CDBBatch
010d68e80 Broadcast address every day, not 9 hours
88b8f0b68 Simplify feebumper minimum fee code slightly
620444bd5 Fix broken q4 test build
513da90cd Add test for empty chain and reorg consistency for gettxoutsetinfo.
afc693dea contrib/init/bitcoind.openrcconf: Don't disable wallet by default
1b6602fbe Fix bumpfee rpc "errors" return value
6d7104c99 [Qt] make sure transaction table entry gets updated after bump
32325a3f5 [Qt] hide bump context menu action if tx already has been bumped
cd5622dca Make bitcoind invalid argument error message specific
822755a42 Fix: make CCoinsViewDbCursor::Seek work for missing keys
870824e91 RPC/Mining: Restore API compatibility for prioritisetransaction
5749a4882 Add Qt tests for wallet spends & bumpfee
efc2e3302 [trivial] Fix three recently introduced typos
888cce57a Add perf counter data to GetStrongRandBytes state in scheduler
399fb8f2d Add internal method to add new random data to our internal RNG state
930deb9b2 [tests] skipped tests should clean up after themselves
f3ba86973 [tests] Add libFuzzer support.
2300a5e13 [Trivial] Add BITCOIN_FS_H endif footer in fs.h
43c587738 Prevent shadowing the global dustRelayFee.
211adc074 Use range-based for loops (C++11) when looping over vector elements
693247b82 [test] Speed up fuzzing by ~200x when using afl-fuzz
6b51b0a07 tests: fix spurious addrman test failure
b040243cc [tests] improve tmpdir structure
307013469 Populate services in GetLocalAddress
b324b2820 Globals: Pass Consensus::Params through CBlockTreeDB::LoadBlockIndexGuts()
e49b868cf [qt] Remove excess logic
8d4f40126 Fix timestamp in fee estimate debug message
38bc1ec4a Make more json-like output from estimaterawfee
6e9e02665 Expand signrawtransaction.py to cover error witness checking
9f7341b07 Add witness data output to TxInError messages
af5d48c9a [depends] miniupnpc 2.0.20170509
108f04f2d Add missing LOCK2 in CWallet::GetAvailableBalance
429aa9eb5 [test] Move some tests from qt -> wallet
d944bd7a2 [qt] Move some WalletModel functions into CWallet
ef8ca179e [test] Add tests for some walletmodel functions
bc63d0ed3 Add query options to listunspent rpc call
0f1b26a5a Fix docs (there's no rpc command setpaytxfee)
2a8e35a11 Fix importwallet edge case rescan bug
49a199bb5 torcontrol: Handle escapes in Tor QuotedStrings
0182a1173 torcontrol: Log invalid parameters in Tor reply strings where meaningful
0b6f40d4c torcontrol: Check for reading errors in ReadBinaryFile
d63677bbb torcontrol: Fix ParseTorReplyMapping
29f3c2007 torcontrol: Add unit tests for Tor reply parsers
d8e03c034 torcontrol: Improve comments
2f84cf665 tests: Correct testcase in script_tests.json for large number OP_EQUAL
1530bfc72 Add logging to FinalizeNode()
4d2d6045a Fix importmulti failure to return rescan errors
fac79e4d1 qa: Warn when specified test is not found
1b936f592 Replace boost::function with std::function (C++11)
e3c9f2ddb Use a verbosity instead of two verbose parameters
091a9ae21 remove minimum total fee option
65d484adf Output line to debug.log when IsInitialBlockDownload latches to false
a38783747 Make sure we re-check the conditions of a feebump during commit
9b9ca538c Only update the transactionrecord if the fee bump has been commited
6ed4368f1 Make sure we use nTxConfirmTarget during Qt fee bumps
be08fc39d Make sure we always update the table row after a bumpfee call
2678d3dc6 Show old-fee, increase a new-fee in Qt fee bumper confirmation dialog
2ec911f60 Add cs_wallet lock assertion to SignTransaction()
fbf385cc8 [Qt] simple fee bumper with user verification
761392db3 [logging] log system time and mock time
f203ecc62 Shadowing is not enabled by default, update doc accordingly.
2d2e17052 Comments and improved documentation
ef589f8d4 minor cleanup: remove unnecessary variable
3ee76d6de Introduce a scale factor
5f1f0c649 Historical block span
aa19b8ea4 Clean up fee estimate debug printing
10f7cbd24 Track first recorded height
3810e976d Rewrite estimateSmartFee
c7447ec30 Track failures in fee estimation.
4186d3fdf Expose estimaterawfee
2681153af minor refactor: explicitly track start of new bucket range and don't update curNearBucket on final loop.
1ba43cc0e Make EstimateMedianVal smarter about small failures.
d3e30bca1 Refactor to update moving average on fly
e5007bae3 Change parameters for fee estimation and estimates on all 3 time horizons.
4f3782ed6 [doc] Removing comments about dirty entries on txmempool
d4668f35a [test] Add test for getmemoryinfo
3ba2c0898 [tests] fix disconnect_ban intermittency
a80f29566 [tests] Clean up addrman_tests.cpp
78da882ed Util: Small improvements in gArgs usage
52922456b Util: Put mapMultiArgs inside ArgsManager
b3cbd554d scripted-diff: Util: Encapsulate mapMultiArgs behind gArgs
f2957ce6c Util: Create ArgsManager class...
56befa03a [tests] increase timeouts in sendheaders test
b0bfa233a [tests] Make wait_until timeout 60 seconds by default
5a5e4e9cc [wallet] Remove CTransaction&() helper conversion operator from wallet implementation.
012fa9b99 Add OSX keystroke to clear RPCConsole
fa7396d6d qa: disablewallet: Check that wallet is really disabled
e2652002b Delay parallel block download until chain has sufficient work
329ac3bab [tests] use wait_until in mempool_persist.py
20187e4ad test: Add elapsed time to RPC tracing
c707ca872 removed unused code in INV message
6c2e25caf [qa] Test prioritise_transaction / getblocktemplate interaction
acc2e4bc9 Bugfix: PrioritiseTransaction updates the mempool tx counter
f19abd905 [qa] Fixes segwit block relay test after inv-direct-fetch was disabled
3a0a5bc23 [doc] Add hint about getmempoolentry to getrawmempool help.
455004990 Reorganize BitcoinTestFramework class
2c0a6f157 Use sanity check timestamps as entropy
33f853d8d Test that GetPerformanceCounter() increments
f544094d5 Use hardware timestamps in RNG seeding
e7c1b4490 Squashed 'src/secp256k1/' changes from 8225239..84973d3
91700aa1d Re-enable upnp support in contrib/debian
c5071e1f0 Build with QT5 on Debian-based systems using contrib/debian
965a12442 [tests] Fix abandonconflict.py intermittency
a637734ba rpc/wallet: Workaround older UniValue which returns a std::string temporary for get_str
a8e928699 Bump minimum boost version in contrib/debian
c1235e3f2 Add RecursiveDynamicUsage overload for std::shared_ptr
71f190335 Store disconnected block transactions outside mempool during reorg
9decd648a [qa] Relax assumptions on mempool behavior during reorg
97477c537 Maintain state across GetStrongRandBytes calls
0f3471f3a net: make CNode's id private
9ff0a5116 scripted-diff: net: Use accessor rather than node's id directly
e50c33ea2 devtools: add script to verify scriptable changes
6c914ac17 [wallet] Securely erase potentially sensitive keys/values
95836c5eb Use shared config file for functional and util tests
89fcd3586 Use an .ini config file for environment vars in bitcoin-util-test.py
e9265df15 Change help_text in bitcoin-util-test.py to a docstring.
ce58e93ec Change bitcoin-util-test.py to use Python3
c1082a7d3 Chainparams: Use the factory for pow tests
2351a064a Chainparams: Get rid of CChainParams& Params(std::string)
f87f3626e Chainparams: Use a regular factory for creating chainparams
381a46e38 Consensus: Policy: MOVEONLY: Move CFeeRate out of the consensus module
330bb5a45 Consensus: Minimal way to move dust out of consensus
997021986 Update contrib/debian to latest Ubuntu PPA upload.
981e586ab [tests] remove import-abort-rescan.py
3e3c22f09 [tests] fix wait_for_inv()
355c11679 [depends] dbus 1.10.18
a8d7474ff [depends] ccache 3.3.4
daeb767f2 [depends] libevent 2.1.8-stable
d78269ac9 [depends] Boost 1.64.0
7d92c6f3b [depends] Latest config.guess and config.sub
bd1f138e7 Add getchaintxstats RPC
6345f0b7e Remove unused argument from MarkBlockAsInFlight(...)
0c60c63de Remove unused Python imports
b7dd44c52 Add start and stop node methods to BitcoinTestFramework
b111324ac move initialize_chain() and initialize_chain_clean() to be methods of BitcoinTestFramework
ed36de59e [tests] Update Unit Test for addrman.h/addrman.cpp
cb184b3a5 Add constant for maximum stack size
c9cc76dca [tests] Remove is_network_split from funtional test cases
3fe8a8396 Remove unused forward declaration for non-existent ScriptPubKeyToJSON(...)
1ff2bb4e3 Remove unused args from GetFetchhFlags()
c26655ed3 doc: Add RPC interface guidelines
3503716f1 Trivial: remove extra character from comment
b8251f633 [tests] allow zmq test to be run in out-of-tree builds
dadfee38e [test] Add test for listaddressgroupings
70d39454e Fix potential NPD introduced in b297426c
7c588637d [Wallet] unset change position when there is no change on exact match
56f09df9d [Makefile] Alphabetically Reorder addrdb.cpp
db994b2de Simplify DisconnectBlock arguments/return value
dd1ea5962 [test] Add gettxout call
85f950a5c [test] Add tests for getconnectioncount, getnettotals and ping
d6732d832 [tests] update disconnect_ban.py test case to work with listbanned
77c54b270 [net] listbanned RPC and QT should show correct banned subnets
0ff9320bf refactor TxToJSON() and ScriptPubKeyToJSON()
4fbae7792 Improved efficiency in COutPoint constructors
b297426c9 Add -stopatheight for benchmarking
3edbd79a6 cleanup: reduce to one GetMinimumFee call signature
b51aaf1c4 Remove unused C++ code not covered by unit tests
dcb69fde5 [test] Unit test amount.h/amount.cpp
02d9f50d5 [wallet] Remove unneeded legacy getbalance code
82b7dc373 [wallet] Add GetLegacyBalance method to simplify getbalance RPC
1b144495d [test] Add Unit Test for GetListenPort
e8babc433 Use `with` in `macdeployqtplus` script.
4f3ac7ddd Remove unused variable from `macdeployqtplus` script.
c36ea693e [wallet] Make sure pindex is non-null before possibly referencing in LogPrintf call.
5ec883667 Prevent warning: variable 'x' is uninitialized
93dbb1595 Remove Clang workaround for Boost 1.46
94807be8c Trivial: fix fee estimate write error log message
661caf83b [doc] Minor corrections to osx dependencies
f8feaa463 doc: Add historical release notes for 0.14.1
dd07068d6 Fixed typo in documentation for merkleblock.h
de487b730 Tests: Add test for getnetworkhashps
b50842410 contrib: github-merge improvements
911a4808f wallet: Add comment describing the various classes in walletdb.h
f478d98fe Fix some empty vector references
e6756ad33 Switch CCoinsMap from boost to std unordered_map
344a2c412 Add support for std::unordered_{map,set} to memusage.h
ed60970c8 [test] Test abortrescan command.
0611bc343 Minor fix in build documentation for FreeBSD 11
c0a273f4c Change file format for fee estimates.
fb463d171 [qt] Don't call method on null WalletModel object
bc5375261 Tests: Add simple test for getaddednodeinfo
c39a6b9ec Tests: Refactor to create witness script creation function
69d2e9ba6 wallet: Make IsDummy private in CWalletDBWrapper
33232810d wallet: CWalletDB CDB composition not inheritance
6803e09e6 Move zmq test skipping logic into individual test case.
be9e1a968 wallet: Reduce references to global bitdb environment
071c95570 wallet: Get rid of fFileBacked
71afe3c09 wallet: Introduce database handle wrapper
394ccf76a Make Boost use std::atomic internally
1d31093d4 fix tsan: utiltime race on nMockTime
321bbc207 fix ubsan: bitcoin-tx: not initialize context before IsFullyValid
4082fb000 Add missing <atomic> header in clientmodel.h
928d4a9ac Set both time/height header caches at the same time
610a91719 Declare headers height/time cache mutable, re-set the methods const
821dd5e3e Tests: Add test for getdifficulty
cf92bce52 Update the remaining blocks left in modaloverlay at init.
7148f5e7d Reduce cs_main locks during modal overlay by adding an atomic cache
d54297f1a [tests] disconnect_ban: add tests for disconnect-by-nodeid
5cc3ee24d [tests] disconnect_ban: remove dependency on urllib
12de2f252 [tests] disconnect_ban: use wait_until instead of sleep
2077fdacd [tests] disconnect_ban: add logging
395561bec [tests] disconnectban test - only use two nodes
e367ad5b4 [tests] rename nodehandling to disconnectban
d6564a26f [tests] fix nodehandling.py flake8 warnings
23e6e64a2 Allow disconnectnode() to be called with node id
91ab8f5a9 build: fix bitcoin-config.h regeneration after touching build files
357760370 build: remove wonky auto top-level convenience targets
2a52ae63b Remove duplicate method definitions in NodeConnCB subclasses
52e15aa4d Adds helper functions to NodeConnCB
a4186dd23 wallet: Use boost to more portably ensure -wallet specifies only a filename
9141622a0 [rpc] Add abortrescan command to RPC interface.
637706dc9 Tests: Put Extended tests first when they're included
a97ed80f9 [tests] test_runner - check unicode
75a08e7d1 [wallet] Add support for aborting wallet transaction rescans.
08e51c1c0 [tests] Remove cache directory by default when running test_runner
c85b080cc [test] add warnings to test_runner
608bbccfb [qt] Stop treating coinbase outputs differently: show them at 1conf
3ddd227c2 [doc] Add blob about finding reviewers.
b2c925420 Check interruptNet during dnsseed lookups
846dc179b [doc] Wording fixes in CONTRIBUTING.md.
1ae86ec5e Changed event RAII helper functions to inline to deal with duplicate symbol linker errors.
c9e31c36f Clarify importprivkey help text with example of blank label without rescan Occasionally I waste a lot of time not remembering that the second parameter to importprivkey must be blank if you intend to stop rescan with "false" as the third parameter.
883154cbc [rpc] rename disconnectnode argument
185c7f08b Avoid reading the old hd master key during wallet encryption
5f4bcf28e [tests] Remove maxblocksinflight testcase
25660e91e pass Consensus::Params& to ReceivedBlockTransactions()
9fececb2c Remove CValidationInterface::UpdatedTransaction
164019d61 Add dumpwallet output test
9f8213477 Add friendly output to dumpwallet refs #9564
c37e32af0 [Wallet] Prevent CInputCoin to be in a null state
f597dcb7c [Wallet] Simplify code using CInputCoin
e78bc4581 [Wallet] Decouple CInputCoin from CWalletTx
1c897fc3d Missing includes
a1fd45032 Trivial: Remove unneeded includes from .h:
f9c88079d Deduplicate SignatureCacheHasher
c851be4b2 net: define NodeId as an int64_t
d0cd0bd6d Make CWallet::SyncTransactions() interface friendlier
e96462fbe tests: Fix test_runner return value in case of skipped test
714e4ad13 AddToWalletIfInvolvingMe should test pIndex, not posInBlock
7fd50c3b7 allow libevent logging to be updated during runtime
5255aca3f [rpc] Add logging RPC
4d9950d3b Set BCLog::LIBEVENT correctly for old libevent versions.
66082e011 [trivial] Fix typos (tempoarily → temporarily, inadvertantly → inadvertently)
d89f8adf2 Make DisconnectBlock and ConnectBlock static in validation.cpp
68af65149 MOVEONLY: move TxConfirmStats to cpp
2332f19be Initialize TxConfirmStats in constructor
5ba81e54e Read and Write fee estimate file directly from CBlockPolicyEstimator
14e10aa84 Call estimate(Smart)Fee directly from CBlockPolicyEstimator
dbb9e3699 Give CBlockPolicyEstimator it's own lock
f6187d6e3 Make processBlockTx private.
ae7327b83 Make feeEstimator its own global instance of CBlockPolicyEstimator
8c3e6c698 Changed "Send" button default status from true to false
c99ab3ca4 RPC: Allow multiple names for parameters
e9ff818b6 Fix for issues with startup and multiple monitors on windows.
9a763d4f8 Remove excess logic.
fd44ac1e8 [Wallet] Rename std::pair<const CWalletTx*, unsigned int> to CInputCoin
45ce471ab Reduce spammy test logging
dd7e43e43 Fix build warning from #error text
bcca57eff [trivial] Fix typo ("improssible" → "impossible")
9eaf7189d Ignore Doxyfile generated from Doxyfile.in template.
d80baaa51 fixup - align summary row correctly and make colors/glyphs globals
b1a6d4cd5 Take a CTransactionRef in AddToWalletIfInvolvingMe to avoid a copy
1c95e2f9c Use std::shared_ptr instead of boost::shared_ptr in ScriptForMining
91f1e6ce5 Remove dead-code tracking of requests for blocks we generated
acad82f37 Add override to functions using CValidationInterface methods
e6d5e6cbb Hold cs_wallet for whole block [dis]connection processing
461e49fee SyncTransaction->TxAddedToMempool/BlockConnected/Disconnected
f40433491 Handle SyncTransaction in ActivateBestChain instead of ConnectTrace
a1476877c Keep conflictedTxs in ConnectTrace per-block
d3167ba9b Handle conflicted transactions directly in ConnectTrace
29e6e231c Make ConnectTrace::blocksConnected private, hide behind accessors
822000cf8 Add pblock to connectTrace at the end of ConnectTip, not start
f5e9a019a Include missing #include in zmqnotificationinterface.h
3491476b6 Wallet: reduce excess logic InMemPool()
618d07faa MOVEONLY: tx functions to consensus/tx_verify.o
bb92d839d [tests] Add unicode symbols for tests passing/failing/skipping
1352092db Log calls to getblocktemplate
9ff781884 doc: Update release process for simplified version bumping
08d9aee3e build: Remove duplicate version information from src/clientversion.h
63062bda1 [tests] color test results and sort alphabetically
ad415bc16 [net] Added SetSocketNoDelay() utility function
168a7034f doc: Make build system insert version in Doxyfile
b67eb8dde doc: Remove version numbers from READMEs
faafa801e init: Remove redundant logging code
faab6241d logging: Fix off-by-one for shrinkdebugfile
73b37219d Remove accidental trailing semicolons
b8d9a86dc Remove unused import
cd7f39467 initialize flag variable to 0 (and continue if GetLogCategory() fails)
16791c5e2 [trivial] remove unused line in Travis config
9bef02e36 Bugfix: ancestor modifed fees were incorrect for descendants
ba7dd8bf6 Test prioritisetransaction and ancestor fee state
bf1026412 Run bitcoin_test-qt under minimal QPA platform
3bde55642 Add -debugexclude option to switch off logging for specified components
f110272dc Remove `namespace fs=fs`
75594bd7f torcontrol: Use fs::path instead of std::string for private key path
2a5f57476 Use fsbridge for fopen and freopen
bac5c9cf6 Replace uses of boost::filesystem with fs
7d5172d35 Replace includes of boost/filesystem.h with fs.h
19e36bbef Add fs.cpp/h
30f30c0f9 Add braces to submitblock per current style.
4f15ea102 Check transaction count early in submitblock.
ada0caa16 Make GetWitnessCommitmentIndex callable on blocks without a coinbase txn.
4b87973c3 [rpc] Remove auth cookie on shutdown
31a14d490 Correct indentation and remove unnecessary braces
5f59d3ecb Improve CFeeBumper interface, add comments, make use of std::move
0df22ed6f Cancel feebump is vErrors is not empty
44cabe638 Use static calls for GetRequiredFee and GetMinimumFee, remove make_pair from emplace_back
bb78c1599 Restore CalculateMaximumSignedTxSize function signature
51ea44f01 Use "return false" instead assert() in CWallet::SignTransaction
bcc72cccc Directly abort execution in FeeBumper::commit if wallet or tx is not available
2718db070 Restore invalid fee check (must be > 0)
0337a39d3 Refactor Bumpfee core functionality
d1a95e8d3 Bumpfee move request parameter interaction to the top
6b3bb3d9b Change LogAcceptCategory to use uint32_t rather than sets of strings.
2c8391140 build: Disable Wshadow warning
1b55e07b7 Make threshold for flushing more conservative.
5d08c9c57 Send the correct error code in reject messages
f33afd3b2 Lower default memory footprint slightly
5b95a190e Make pcoinsTip memory calculations consistent
e025246fe scheduler: fix sub-second precision with boost < 1.50
19ecd1e2e Add tests for bitcoin-tx input checking
21704f633 Check stderr when testing bitcoin-tx
eb66bf9bd bitcoin-tx: Fix missing range check
3f098cccf Decrease testcase sizes in cuckoocache tests
7228ce853 Compensate for memory peak at flush time
6a18bb9a3 [tests] sync_with_ping should assert that ping hasn't timed out
6426716a9 Add send_await_disconnect() method to p2p-compactblocks.py
625488ace util: Work around (virtual) memory exhaustion on 32-bit w/ glibc
c0651cca4 Update bitcoin.conf with example for pruning
bd41d9831 Datadir option in linearize scripts
4fd2d2fc9 Add a FastRandomContext::randrange and use it
16329224e Switch FastRandomContext to ChaCha20
011124a2b Update benchmarking with package statistics
42cd8c890 Add benchmarking for CreateNewBlock
eed816af6 Mining: return early when block is almost full
f885b6702 refactor: Make rest.cpp dependency on `*toJSON` in `blockchain.cpp` explicit
e04326fe6 Add ChaCha20
663fbae77 FastRandom benchmark
c21cbe61c Introduce FastRandomContext::randbool()
6d5dd60c8 No need to use OpenSSL malloc/free
a4fd89fdd Make forknotify.py more robust
1f3d78b4e Wait for connection to open in bip9-softforks.py
159fe88ab Remove SingleNodeConnCB
53351321c ApproximateBestSubset should take inputs by reference, not value
85de9d474 Remove call to gettransaction(...) where the result is unused
bd0242233 Remove accidental trailing semicolons in Python code
91f1f1967 Make all Travis test runs quiet, non just cron job runs
4115af7ac Fix rebase issue where pwalletMain was used instead of pwallet Ser./Deser. nInternalChainCounter as last element
8c7288c06 Print out the final 1000 lines of test_framework.log if test fails
e9a64615c Make qt wallet test compatible with qt4
6d780b1b0 Update travis config to run rpc-tests.py in quiet mode
55992f130 Add --quiet option to suppress rpc-tests.py output
29d6634a6 Check that all test scripts in test/functional are being run
8d8f28dd5 refactor: Move RPCNotifyBlockChange out of `rpc/server.h`
e6dcfeec0 refactor: Move GetDifficulty out of `rpc/server.h`
fa4535df5 [qa] combine_logs: Use ordered list for logfiles
727853773 [Qt] Don't add arguments of sensitive command to console window
9382f0425 Do not break backward compatibility during wallet encryption
0fb288725 Move several relay options into the Relay help group
1403b1a68 move rpcserialversion into RPC option group
d5690f1ab remove 'noconnect' option from documentation
fa5585321 rpc: Rename first named arg of createrawtransaction
dd5be2c7b [QA] Renaming rawTx into rawtx
fa697b719 [qa] Add setnetworkactive smoke test
4df76e270 Ensure an item exists on the rpcconsole stack before adding
b1f584dbc fix build if spaces in src dir path
557c9a68f RPC: getblockchaininfo: BIP9 stats
717ad131f Actually run assumevalid.py.
81a3857c4 Deduplicated sigaction() boilerplate
803e6a350 [QA] Fix typo in fundrawtransaction test
1df08d158 Add assertion for CanSupportFeature(FEATURE_HD_SPLIT)
cd468d07d Define CWallet::DeriveNewChildKey() as private
ed79e4f49 Optimize GetOldestKeyPoolTime(), return as soon as we have both oldest keys
771a304ff Make sure we set the wallets min version to FEATURE_HD_SPLIT at the very first point
1b3b5c6f8 Slightly modify fundrawtransaction.py test (change getnewaddress() into getrawchangeaddress())
003e19749 Remove FEATURE_HD_SPLIT bump TODO
d9638e5aa Overhaul the internal/external key derive switch
1090502c3 Fix superfluous cast and code style nits in RPC wallet-hd.py test
58e148333 CKeyPool avoid "catch (...)" in SerializationOp
e138876f0 Only show keypoolsize_hd_internal if HD split is enabled
add38d9b8 GetOldestKeyPoolTime: if HD & HD Chain Split is enabled, response max(oldest-internal-key, oldest-external-key)
dd526c2a2 Don't switch to HD-chain-split during wallet encryption of non HD-chain-split wallets
79df9df34 Switch to 100% for the HD internal keypool size
bcafca107 Make sure we always generate one keypool key at minimum
d0a627a53 Fix issue where CDataStream->nVersion was taken a CKeyPool record version
9af8f00a7 Make sure we hand out keypool keys if HD_SPLIT is not enabled
469a47b76 Make sure ReserveKeyFromKeyPool only hands out internal keys if HD_SPLIT is supported
05a9b493e Fix wrong keypool internal size in RPC getwalletinfo help
01de822c8 Removed redundant IsLocked() check in NewKeyPool()
d59531ddf Immediately return setKeyPool's size if HD or HD_SPLIT is disabled or not supported
02592f4c5 [Wallet] split the keypool in an internal and external part
0c1ade6a4 Skip rpcbind_test if OS/network requirements are not met.
c59aedc1b [trivial] Dead code removal
9ab9e7d1b Add a button to open the config file in a text editor
cc995e26c add missing spaces so that markdown recognizes headline
5ba61f003 [zmq] Call va_end() on va_start()ed args.
fd369d267 Switched httpserver.cpp to use RAII wrapped libevents.
389745901 [tests] Remove unused variables
72163d458 [tests] Remove unused and duplicate imports
a750d77b9 Add tests for mempool persistence
91c91e140 Control mempool persistence using a command line parameter.
88e3aa0bc Run extended tests once daily
232b6665b Allow test cases to be skipped
8317a4516 Python functional tests should log in UTC
61d75f587 Introduce combine_logs.py to combine log files from multiple bitcoinds.
dbf30ff10 [trivial] Fix typos in comments
f85ac54e2 [qa] Expand bumpfee test docstring
0b94e4983 [qa] Rename python input variable to tx_input
1dfd64fad [qa] Make bumpfee.py test function order consistent
e6b296324 [qa] Get rid of nondeterminism in bumpfee.py
94b528bb0 [qa] Remove bumpfee.py get_change_address hack
b5bec4e33 Avoid QTimer::singleShot compile error with Qt 5.3.2
d5046e72f Avoid scoped_connection compile error with boost 1.55.0
63d66ba20 Move src/test/bitcoin-util-test.py to test/util/bitcoin-util-test.py
5b0bff458 Rename --enable-extended-rpc-tests to --enable-extended-functional-tests
a9bd622a6 Rename test/pull-tester/rpc-tests.py to test/functional/test_runner.py
c28ee91db Rename rpc-tests directory to functional
00902c48c Rename qa directory to test
e141aa4ba Add mallocinfo mode to `getmemoryinfo` RPC
05a9f2235 Trivial: Fix typo in help getrawtransaction RPC
97b821367 Fix parameter naming inconsistencies between .h and .cpp files
b99fbadfa Fix init README format to render correctly on github
f490dae56 Trivial: Fix typo in key.h comment
d93b97fbc Set to nullptr after delete
d7f80b6dc Rename first iterator to prevent shadowing.
b42ff60c7 Fix shadowing of local variables.
c4b60b3d9 Make some global variables less-global (static)
bb2aaeeee Prevent -Wshadow warnings with gcc versions 4.8.5, 5.3.1 and 6.2.1.
e722777a4 fix logging in nulldummy and proxy_test
1f7065367 Use log.info() instead of print() in importmulti.py
8dc957ae0 Remove unused code
5073100f2 build: Fix typo s/HAVE_DONTWAIT/HAVE_MSG_DONTWAIT
9350e1339 util: rename variable to avoid shadowing
a3ca43bb3 [trivial] Fix a typo (introduced two days ago) in the default fee warning
cfce581d1 [LevelDB] Plug leveldb logs to bitcoin logs
b26ea0a8d specify blockchain size & default behaviour (over pruning)
9576b015a Enable xvfb in travis to allow running test_bitcoin-qt
9e6817ed1 Add new test_bitcoin-qt static library dependencies
2754ef1c4 Add simple qt wallet test sending a transaction
b61b34c89 Add braces to if statements in Qt test_main
c9bd0f642 Fix RPC failure testing (2 of 2)
1eff6c6ea fix gitian doc example typo
fb6f90a4c Initialize nRelockTime
c85ffe6d8 Test transaction selection when gbt called without segwit support
abe7b3d3a Don't require segwit in getblocktemplate for segwit signalling or mining
a327e8ea3 devtools: Make github-merge compute SHA512 from git, instead of worktree
b651270cd util: Throw tinyformat::format_error on formatting error
3b092bd9b util: Properly handle errors during log message formatting
655df06fb QA: getblocktemplate_longpoll.py should always use >0 fee tx
1269b8a12 Fix logging bug and improve readability of smartfees.py
b9f34e84b Improve readability of segwit.py
c62475329 depends: fix zlib build on osx
cc9503cec Make qt test compatible with TestChain100Setup framework
d055bd69c Fix extended rpc tests broken by 8910b4717e5bb946ee6988f7fe9fd461f53a5935
91e303595 Make test_bitcoin.cpp compatible with Qt Test framework
dcf2112de Add safe flag to listunspent result
af61d9f78 Add COutput::fSafe member for safe handling of unconfirmed outputs
df5bae2e7 Update trusted-sha512-root-commit for new bad tree hash
efc06c2c4 If GNU sha512sum is missing, try perl shasum in verify-commits
8ed849fbc Fix travis failing to fetch keys from the sks keyserver pool
fd5e905e2 Make verify-commits.sh non-recursive
64c080051 Use logging in individual tests
38ad281b2 Use logging in test_framework/comptool.py
ff190739b Use logging in test_framework/blockstore.py
2a9c7c74d Use logging in test_framework/util.py
b0dec4a04 Remove manual debug settings in qa tests.
af1363cb1 Always enable debug log and microsecond logging for test nodes.
6d0e3250b Use logging in mininode.py
553a97692 Add logging to p2p-segwit.py
0e6d23dd5 Add logging to test_framework.py
53a2ba351 [util] Remove redundant call to get() on smart pointer (thread_specific_ptr)
9ea249014 [trival] Fix typo introduced into rpc/protocol.h in commit 338bf06
54fae05da Remove unreachable code (g_rpcSignals.PostCommand)
3cef95058 Trivial: Add const modifier to GetHDChain and IsHDEnabled
819b513a5 Add missing braces in semaphore posts in net
e007b243c Fix shutdown hang with >= 8 -addnodes set
adaa281da Update release notes to include RPC error code changes.
338bf065a Add commenting around JSON error codes
a57845c20 Refactor: Remove using namespace <xxx> from util*
8a5228197 Refactor: Remove using namespace <xxx> from wallet/
8cbfc4e47 Refactor: Remove using namespace <xxx> from script/
f3c264e9a Refactor: Remove using namespace <xxx> from rpc/
218d91544 [bench] Avoid function call arguments which are pointers to uninitialized values
2de693030 Add historical release notes for 0.14.0
8e0720bdb Fix msvc compiler error C4146 (unary minus operator applied to unsigned type)
6c1fb73dd Improve logging in bctest.py if there is a formatting mismatch
dab804c18 Return correct error codes in fundrawtransaction().
a01208766 Return correct error codes in setban().
960bc7f77 Return correct error codes in removeprunedfunds().
c1190963b Return correct error codes in blockchain.cpp.
6d07c6232 Return correct error codes in bumpfee().
309bf1625 devtools: Fix a syntax error typo
fdab30967 [trivial] Fix typos introduced in 7184e25c80aa8b1629a700bb7a7e290ad0bb2792
0235be1e7 Rename FlushWalletDB -> CompactWalletDB, add function description
735d9b536 Use CScheduler for wallet flushing, remove ThreadFlushWalletDB
73296f54d CScheduler boost->std::function, use millisecs for times, not secs
b3ec305f8 Fix bashisms in verify-commits and always check top commit's tree
f20e664f4 Check gpg version before setting --weak-digest
292112f87 Fix msvc compiler error C4146 (minus operator applied to unsigned type)
99fecf80d tests: Delete unused function _rpchost_to_args
188f89c3b Disallow copy of CReserveKeys
7184e25c8 [Wallet] refactor CWallet/CWalletDB/CDB
025dec0e5 [qa] assert_start_raises_init_error
bbd757940 Fix regsig checking for subkey sigs in verify-commits
a4d1c9f04 compat: use `unsigned int` instead of `u_int`
25da1ee36 build: cleanup: define MSG_DONTWAIT/MSG_NO_SIGNAL locally
c459d509b build: Probe MSG_DONTWAIT in the same way as MSG_NOSIGNAL
d025bc796 Allow any subkey in verify-commits
eddc77a1b Add comment re: why SHA1 is disabled
d9c450ffb Verify Tree-SHA512s in merge commits, enforce sigs are not SHA1
b421e6ddc Update example bitcoin.conf
7d4e9509a Allow setting minrelaytxfee to 0
359e8a03d [cleanup] Remove coin age priority completely.
f9b9371c6 [rpc] Remove priorityDelta from prioritisetransaction
49be7e1be [rpc] Remove priority information from mempool RPC calls
0315888d0 [test] Remove priority from tests
f83800544 No longer allow "free" transactions
e57a1fd89 Define 7200 second timestamp window constant
02c57b521 Optimize GetWitnessHash() for non-segwit transactions
7759aa23d Save watch only key timestamps when reimporting keys
630fc549e Clean up braces in CWallet::ComputeTimeSmart
6c996c2df Add documentation describing CWallet::nTimeSmart.
1f98abe47 Factor out CWallet::nTimeSmart computation into a method.
c6b82d1db Add tests for CWalletTx::nTimeSmart
fa7da3fd9 [contrib] gh-merge: Move second sha512 check to before signing
e5b449c3e Docs: correct and elaborate -rpcbind doc
cf66f0436 Add FindEarliestAtLeast test for edge cases
64854666f test: Report InitBlockIndex result
90a1d9a55 Docs: add details to -rpcclienttimeout doc
666597798 remove 'label' filter for rpc command help
be908a69b Fail merge if there are any symlinks
30abce7a9 Improve ScanForWalletTransactions return value
7ed143c10 Add test for CWalletTx::GetImmatureCredit() returning stale values.
9e4d842af depends: make osx output deterministic
6d37ee831 Trivial: Debug log ambiguity fix for peer addrs
8c156b7f7 Bugfix: Only install manpages for built programs
343ba8fef [wallet] Remove redundant initialization
95543d874 [net] Avoid possibility of NULL pointer dereference in MarkBlockAsInFlight(...)
584460945 [net] Avoid initialization to a value that is never read
fa32a16c5 travis: Verify commits only for one target
a4b02f427 Add Pieter's old signed commits to revsig-commits
d678771c6 Wallet: Sanitise -wallet parameter
9756be382 Wallet/RPC: Use filename rather than CWallet pointer, for lockwallet RPCRunLater job name
86be48a77 More tightly couple EnsureWalletIsAvailable with GetWalletForJSONRPCRequest where appropriate
a4356328e Move wallet RPC declarations to rpcwallet.h
ad1573472 RPC: Pass on JSONRPCRequest metadata (URI/user/etc) for "help" method
bf8a04a16 Reformat touched lines with C++11
2e518e313 Move nWalletUnlockTime to CWallet::nRelockTime, and name timed task unique per CWallet
d77ad6d41 RPC: Do all wallet access through new GetWalletForJSONRPCRequest
eca550f25 RPC/Wallet: Pass CWallet as pointer to helper functions
d4ee7baef prevector: assert successful allocation
fe71661ae [doc] Update doc/bips.md for BIP90 implementation
ad727f4ea [rpc] sendrawtransaction no longer bypasses minRelayTxFee
fe282acd7 [cleanup] Remove estimatePriority and estimateSmartPriority
400b15147 [debug] Change -printpriority option
272b25a6a [mining] Remove -blockprioritysize.
12839cdd5 [rpc] Remove estimatepriority and estimatesmartpriority.
ddf58c757 wallet: Remove sendfree
306bd7215 Fix importmulti returning rescan errors for wrong keys
75a109338 tests: Fix dangling pwalletMain pointer in wallet tests
19cafc623 test: Replace remaining sprintf with snprintf
0a177148e uint256: replace sprintf with HexStr and reverse-iterator
fa89670d3 Add SHA512 tree hash to merge commits
277b472fb Run miner_tests with fixed options
48faf0bf6 Abstract out BlockAssembler options
83ac719d3 Change bitcoin address in RPC helpaddress to an invalid address, so people don't accidentally send coins there (like I did).
c5f008a41 don't throw std::bad_alloc when out of memory. Instead, terminate immediately
dc222f8f6 Trivial: Rephrase the definition of difficulty in the code.
30aedcbdb BIP32 extra test vector
ef9f495e9 Trivial: fix comments referencing AppInit2
b23dcd2bf Fix segwit getblocktemplate test.
b49ad44ef Add comment about cs_most_recent_block coverage
c47f5b798 Cache witness-enabled state with recent-compact-block-cache
efc135ff6 Use cached [compact] blocks to respond to getdata messages
864890adf [qa] Make import-rescan.py watchonly check reliable
f81f0d003 Update sendfrom RPC help to correct coin selection misconception
3f95a806b Fix docstrings in qa tests
5b528d746 qt: clean up initialize/shutdown signals
205830a37 build: add --enable-werror option
fa4cd2e99 qa: Check return code when stopping nodes
f5aba8a3c Move tx version 2 standardness check to after bip68 activation
09fe346a4 Avoid -Wshadow warnings in wallet_tests
9829c54de build: force a c++ standard to be specified
4b183d33f Remove block file location upgrade code
3333ad0b6 qa: Set correct path for binaries in rpc tests
7e6dcd999 random: Add fallback if getrandom syscall not available
7cad84929 sanity: Move OS random to sanity check function
aa09ccbb7 squashme: comment that NUM_OS_RANDOM_BYTES should not be changed lightly
eaea2bbb4 Removed redundant parameter from mempool.PrioritiseTransaction
224e6eb08 util: Specific GetOSRandom for Linux/FreeBSD/OpenBSD
874c7363d Fix pruning test broken by 2 hour manual prune window
b602fe0f7 build: warn about variable length arrays
bc8fd1228 Remove harmless read of unusued priority estimates
312c4f105 Fix segfault crash when shutdown the GUI in disablewallet mode
a87d02ada use EXIT_ codes instead of magic numbers
c5784085e Add exclude option to rpc-tests.py
40f11f887 Fix for issue #9775. Added check for open() returning a NULL pointer.
171fc91f0 Read/write mempool.dat as a binary.
f36bdf02c Enable host lookups for -proxy and -onion parameters
851f6a39f [qa][doc] Correct rpc test options in readme
41e721912 [trivial] Add tests_config.ini to .gitignore
3b4dd2a67 Add seed.btc.petertodd.org to mainnet DNS seeds
4d51e9be1 Assert ConnectBlock block and pIndex are the same block
eb4910193 doc: Update manpages for master
1bfe6b426 Use package name variable inside $(package)_file_name variable
5c8fd5081 Avoid VLA in hash.h
8e5cca027 gitian: bump descriptors for master
3301587dc boost: remove iostreams includes
c801c82e2 Move BIP70_MAX_PAYMENTREQUEST_SIZE to header
914fad155 Make KEY_SIZE a compile-time constant
a6a3e58c4 Various review markups for rpc-tests.py improvements
e2e2f4c85 Return errors from importmulti if complete rescans are not successful
f87e8f539 build: bump version to 0.14.99
ec1267f13 [wallet] Remove importmulti always-true check
7abe7bbf6 Qt/Send: Give fallback fee a reasonable indent
3e4d7bfcb Qt/Send: Figure a decent warning colour from theme
55c403b8f Ensure `-maxsigcachesize` is in valid range
91fb506e0 Add two hour buffer to manual pruning
3f78e460b Update nMinimumChainWork and defaultAssumeValid.
279f944e8 QA: Test GBT size/weight limit values
e662af358 Use 2 hour grace period for key timestamps in importmulti rescans
38d3e9ee5 [qa] Extend import-rescan.py to test imports on pruned nodes.
c28583d06 [qa] Extend import-rescan.py to test specific key timestamps
8be086688 [qa] Simplify import-rescan.py
00e623d0b [Trivial] Update comments referencing main.cpp
96c7f2c34 Add CheckQueue Tests
07afcd637 Add missing cs_wallet lock that triggers new lock held assertion
ba803efb6 Harden against mistakes handling invalid blocks
972714c95 pow: GetNextWorkRequired never called with NULL pindexLast
cc44c8f14 ContextualCheckBlockHeader should never have pindexPrev to NULL
6c5427d24 wallet: Prevent "overrides a member function but is not marked 'override'" warnings
0c9b9b7d6 [trivial] Fix recently introduced typos in comments
4b6ccccc1 Selectively suppress deprecation warnings
d9434918d qa: add a test to detect leaky p2p messages
8650bbb66 qa: Expose on-connection to mininode listeners
5b5e4f833 qa: mininode learns when a socket connects, not its first action
cbfc5a672 net: require a verack before responding to anything else
8502e7acb net: parse reject earlier
c45b9fb54 net: correctly ban before the handshake is complete
9acf25cc0 Return error when importmulti called with invalid address.
0b4f273e9 Bugfix: Qt/Options: Restore persistent "restart required" notice
64aa36e20 param variables made const
a432aa0aa Remove unused module from rpc-tests
a80f98b1c Use importmulti timestamp when importing watch only keys
a58370e6a Dedup nTimeFirstKey update logic
266a8114c Use MTP for importmulti "now" timestamps
3cf991756 Add test to check new importmulti "now" value
442887f27 Require timestamps for importmulti keys
99c0e81b9 Fix BIP68 activation test
db2dc7a58 Move CNode::addrLocal access behind locked accessors
036073bf8 Move CNode::addrName accesses behind locked accessors
d8f2b8a8c Make nTimeBestReceived atomic
22b4966a2 Move [clean|str]SubVer writes/copyStats into a lock
0f3187261 Make nServices atomic
96f42d8a1 Make nStartingHeight atomic
512731bed Access fRelayTxes with cs_filter lock in copyStats
ae683c1b1 Avoid copying CNodeStats to make helgrind OK with buggy std::string
644f1234e Make nTimeConnected const in CNode
321d0fc6b net: fix a few races. Credit @TheBlueMatt
056aba2b4 Remove fallbacks for boost_filesystem < v3
a60677e39 Pre-0.14.0 hardcoded seeds update
bfa9393c0 contrib/seeds: Update PATTERN_AGENT
4dfac2c95 Update seeds tooling to Python 3
7179e7ca0 qt: Periodic translations update
5e903a5ed devtools: Handle Qt formatting characters edge-case in update-translations.py
41b8821ad Add updating of chainTxData to release process
66f861ade Add a test for P2P inactivity timeouts
467df390f Remove nonsense #undef foreach
ca9955e70 Remove bitseed.xf2.org form the dns seed list
3ddfe2983 netbase: Do not print an error on connection timeouts through proxy
13f608582 netbase: Make InterruptibleRecv return an error code instead of bool
f6d18f5b3 Qt/Intro: Explain a bit more what will happen first time
36164faa3 Fix typo and spelling inconsistency in CONTRIBUTING.md
50c56570b Qt/Intro: Storage shouldn't grow significantly with pruning enabled
9adb694b1 Qt/Intro: Move sizeWarningLabel text into C++ code
a9baa6d74 Bugfix: Qt/Intro: Pruned nodes never require *more* space
93ffba716 Bugfix: Qt/Intro: Chain state needs to be stored even with the full blockchain
c8cee2610 Qt/Intro: Update block chain size
b436f92f7 qa: Expose on-connection to mininode listeners
8aaba7a6b qa: mininode learns when a socket connects, not its first action
9db8eecac Fix RPC failure testing
2cbd1196b Disconnect peers which we do not receive VERACKs from within 60 sec
618ee9249 Further-enforce lockordering by enforcing directly after TRY_LOCKs
29c53289a bench: Fix initialization order in registration
9949ebfa6 [Trivial] Remove incorrect help message from gettxoutproof()
a47da4b6f Use z = std::max(x - y, 0); instead of z = x - y; if (z < 0) z = 0;
5cc2ebb61 Update OpenBSD and FreeBSD build steps
8713de83a build: Add options to override BDB cflags/libs
9a0b784de net: add a lock around hSocket
45e2e0856 net: rearrange so that socket accesses can be grouped together
3de3ccdfa Refactor rpc-tests.py
afd38e7cc Improve rpc-tests.py arguments
91bfffff5 Use argparse in rpc_tests.py
45f09618f Prevent integer overflow in ReadVarInt.
ac719c936 Init ECC context for test_bitcoin_fuzzy.
9155241bd Change 'Clear' button string to 'Reset'
2a962d454 Fixup style a bit by moving { to the same line as if statements
7b2d96b63 Access WorkQueue::running only within the cs lock.
846563184 Always enforce lock strict lock ordering (try or not)
fd13eca14 Lock cs_vSend and cs_inventory in a consistent order even in TRY
6dbfe08c2 [qa] test signrawtransaction merge with missing inputs
4ec057dfa [wallet] Set correct metadata on bumpfee wallet transactions
ec4f7e433 [qa] Add second input to signrawtransaction test case
691710a64 [qa] Test that decoderawtransaction throws with extra data appended
922bea90c Better handle invalid parameters to signrawtransaction
7ea0ad539 Fail in DecodeHexTx if there is extra data at the end
08bb6f4ed net: log an error rather than asserting if send version is misused
7a8c25190 net: Disallow sending messages until the version handshake is complete
12752af0c net: don't run callbacks on nodes that haven't completed the version handshake
2046617b5 net: deserialize the entire version message locally
9fc7f0bce Bugfix: RPC/Mining: GBT should return 1 MB sizelimit before segwit activates
80ff0344a Dont deserialize nVersion into CNode, should fix #9212
885cfdd21 Fix super-unlikely race introduced in 236618061a445d2cb11e72
db07f9189 Assert that what might look like a possible division by zero is actually unreachable
ba94426d5 Test that pushes to bitcoin/bitcoin are signed per verify-commits
3e900acaf Require merge commits merge branches on top of other merge commits
3eba88d44 clarify listunspent amount description
1581ecbc3 Use configparser in rpc-tests.py
9522b53a9 rpc: bumpfee: handle errors more gracefully
f62659448 rpc: bumpfee: use correct maximum signed tx size for fee calculation
0729102f9 Net: pass interruptMsgProc as const where possible
fc7f2ffad Net: Make CNetMsgMaker more const
d45955fa0 Net: CConnman: Make some methods const
178454dde Contrib: Add jtimon pgp keys for commit sigs and future gitian builds
d625b907a wallet: Refactor dummy signature signing for reusability
71fc17f66 qt: periodic translations update
5f62e3eb6 Fix typos
fa5137c11 [doc] Remove unused clang format dev script
95f97f4b9 Skip RAII event tests if libevent is built without event_set_mem_functions
b5f374fef qt: fix build with zlib for target
8efa34fb7 depends: add a zlib build
342eb9618 build: find qt's renamed helper libs from 5.7
cc16d99f1 [trivial] Fix typos in comments
b7b48c8bb Refactor: Remove using namespace <xxx> from src/*.cpp.
4b189c134 Change bumpfee result value from 'oldfee' to 'origfee'.
0c0c63f70 Introduce WALLET_INCREMENTAL_RELAY_FEE
fab035f2f qa: Actually test assertions in pruning.py
e8021ec91 Use CWallet::GetMinimumFee in bumpfee
04b877361 [Qt] fix transaction details output-index to reflect vout index
ae9719ab8 Refactor GetMinimumFee to give option of providing targetFee
236618061 Do not add to vNodes until fOneShot/fFeeler/fAddNode have been set
b9d95bd9a Fix various minor linearization script issues
87ed39615 [trivial] Add comment documenting bumpfee mapValues
c4e4792c5 [Qt] Change RBF checkbox to reflect -walletrbf setting
838a58e7c [Qt] Add simple optin-RBF checkbox and confirmation info
2f10f0619 qa: Increase a sync_blocks timeout in pruning.py
99464bc38 net: Consistently use GetTimeMicros() for inactivity checks
29fb31185 Increase minimum debug.log size to 10MB after shrink.
3c37dc40d Ensure cs_vNodes is held when using the return value from FindNode
5be01906e Delete some unused (and broken) functions in CConnman
ac9a84679 [Trivial] fix logging typo in FlushStateToDisk()
0165a56f2 Refactor ZapWalletTxes to avoid layer vialotions
be31a2b36 [Trivial] Update license year range to 2017
568c05a59 Allow to opt-into RBF when creating a transaction
094e4b338 Better document usage of SyncTransaction
4afbde602 Introduce MemPoolConflictRemovalTracker
ff25c3239 mempool: add notification for added/removed entries
5a00659b5 [wallet] Clarify getbalance help string to explain interaction with bumpfee
5c66d41b7 [Trivial] Grammar and typo correction
8455e367f [test] Avoid reading a potentially uninitialized variable in tx_invalid-test
e2073424f Fix CCheckQueue IsIdle (potential) race condition and remove dangerous constructors.
003cd60cc Add missing mempool lock for CalculateMemPoolAncestors
5cdf10611 Remove redundant semicolons in Python code
dd5b0114c [Trivial] add comment about setting peer as HB peer.
de1ae324b Exclude RBF txs from fee estimation
af01cd3a3 qt: Periodic translation update
b8d1b8107 trivial: squash missing field 'argNames' initializer warning in qt tests
fe8e8efcf [rpc] Add incremental relay fee to getnetworkinfo
44f2baac4 Do not shadow local variable named `tx`.
8ff8d219c Send final alert message to older peers after connecting.
bd92f2481 [bugfix] save feeDelta instead of priorityDelta in DumpMempool
6b331e6cf Fix to have miner test aware of new separate block min tx fee
de6400de5 Fix missing use of dustRelayFee
5b158707f Use incrementalRelayFee for BIP 125 replacement
b471daf85 Adddress nits, use asyncio signal handling, create_task
4bb7d1bc4 Add python version checks and 3.4 example
5406d5106 Rewrite to not use Polling wrapper for asyncio, link to python2.7 example
5ea5368b3 ZMQ example using python3 and asyncio
fa4d47814 qt: Use nPowTargetSpacing constant
c9f3062d5 Add fundrawtransactions new reserveChangeKey option to the release notes
9eb325d07 [QA] Add test for fundrawtransactions new reserveChangeKey option
9aa4e6a6c [Wallet] Add an option to keep the change address key, true by default
989989354 Move wallet callbacks into cs_main (this effectively reverts #7946)
cc0243ad3 [RPC] bumpfee
52dde6677 [wallet] Add include_unsafe argument to listunspent RPC
fc089ae47 Add IPv6 support to qos.sh
40ec7c7b0 [Qt] Improve progress display during headers-sync and peer-finding
0da49b592 Skip precompute sighash for transactions without witness
c36ec715f depends: qt: disable printer for all platforms, not just osx
c70622e94 Docs: Update CONTRIBUTING.md
7ba0a00aa Testing: listsinceblock should not use orphan block height.
ee5c1ce5a Bug-fix: listsinceblock: use closest common ancestor when a block hash was provided for a chain that was not the main chain.
ad82cb06c Remove unnecessary min fee argument in CTxMemPool constructor
2a7b56cc0 CBlockPolicyEstimator now uses hard coded minimum bucket feerate
ac9d3d25f Change fee estimation bucket limit variable names
c5945804c Add braces around AddToCompactExtraTransactions
1ccfe9b1c Clarify comment about mempool/extra conflicts
b0819c7e9 qt: periodic translations update
eb30d1a5b Introduce -dustrelayfee
7b1add3c2 Introduce -incrementalrelayfee
7094bf797 Trim down the XP notice and say more about what we support.
241d8938f Wake message handling thread when we receive a new block
f13914a0e Make WakeMessageHandler public
7b5e3fe0c Add assumevalid testcase
c4a6929a3 Clarify assumptions made about when BlockCheck is called
8fc698935 Remove redundant semicolons
afab9f47f [test] Avoid potential NULL pointer dereference in addrman_tests.cpp
bb077fa5d [depends] Remove OBJCXX define from config.site.in
c37ea4d40 depends: fix qt translations build
2b32dea50 depends: use new variable layout for qt sdk
02fcb2944 [depends] Qt 5.7.1
02ee4eb26 Make most_recent_compact_block a pointer to a const
376b3c2c6 Make the cs_sendProcessing a LOCK instead of a TRY_LOCK
d7c58ad51 Split CNode::cs_vSend: message processing and message sending
95bab821b Remove unused Python imports
988d30093 [qt] Rename formateNiceTimeOffset(qint64) to formatNiceTimeOffset(qint64)
90fd29bd0 Remove unused int64_t nSinceLastSeen
ac4a09530 Remove unused Python variables
e440ac7ef Introduce assumevalid setting to skip presumed valid scripts.
e60360e13 net: remove cs_vRecvMsg
991955ee8 net: add a flag to indicate when a node's send buffer is full
c6e8a9bcf net: add a flag to indicate when a node's process queue is full
4d712e366 net: add a new message queue for the message processor
c5a8b1b94 net: rework the way that the messagehandler sleeps
c72cc88ed net: remove useless comments
ef7b5ecbb net: Add a simple function for waking the message handler
f5c36d19b net: record bytes written before notifying the message processor
60befa399 net: handle message accounting in ReceiveMsgBytes
fac4c7802 Make PartiallyDownloadedBlock::InitData's second param const
b55b41634 Add extra_count lower bound to compact reconstruction debug print
73666ad05 Add comment to describe callers to ActivateBestChain
82e8baab3 Avoid boost dynamic_bitset in rest_getutxos
99f001eb5 Fix memory leak in multiUserAuthorized
5a0b7e410 Fix memory leak in net_tests
6b03bfb84 Fix memory leak in wallet tests
f94f3e0df Avoid integer overflows in scriptnum tests
843c56000 Avoid unaligned access in crypto i/o
748278134 Allow non-power-of-2 signature cache sizes
34ede124a Document fee estimation changes
b348287b7 Clarify that prioritisetransaction remains supported
4b06e41c3 Add unit test for FindEarliestAtLeast
997a98a67 Replace FindLatestBefore used by importmuti with FindEarliestAtLeast.
fa2973678 test: Include tx data in EXTRA_DIST
962f7f054 Call ActivateBestChain without cs_main/with most_recent_block
db904db7e Deprecate non-txindex getrawtransaction and better warning
0df777db6 Use a temp pindex to avoid a const_cast in ProcessNewBlockHeaders
aad4cb505 Address ryanofsky feedback on CCheckQueue benchmarks. Eliminated magic numbers, fixed scoping of vectors (and memory movement component of benchmark).
54ee3fcb8 RPC help updated
918d1fb86 Return height of last block pruned by pruneblockchain RPC
df3637177 Update estimated transaction count data
e356d9a75 Shorten variable names and switch to tx/s
faaf3ca0a travis: make distdir before make
7f1fa99a2 [depends] native_ds_store 1.1.0
09fe2d9ec release: update docs to show basic codesigning procedure
67ca130f7 build: fix for out-of-tree/distdir qt builds
c6347aec6 [depends] dbus 1.10.14
a4c6da085 [depends] ccache 3.3.3
6019d21a4 [depends] FreeType 2.7.1
4ed6faf38 [depends] Boost 1.63.0
8ac18303d [depends] Latest config.guess and config.sub
f64275388 release: create a bundle for the new signing script
00683615d release: add win detached sig creator and our cert chain
45a5aaf14 Only call clear on prevector if it isn't trivially destructible and don't loop in clear
aaa02e7f2 Add prevector destructor benchmark
116419e58 Don't overwrite validation state with corruption check
fe7e593b2 Fix use-after-free in CTxMemPool::removeConflicts()
74994c657 Improve style w.r.t. if
863edb45b Consider all (<100k memusage) txn for compact-block-extra-txn cache
7f8c8cab1 Consider all orphan txn for compact-block-extra-txn cache
93380c524 Use replaced transactions in compact block reconstruction
1531652e0 Keep shared_ptrs to recently-replaced txn for compact blocks
766e8a40b [wallet] Add IsAllFromMe: true if all inputs are from wallet
afffeea7d fixup! Add pruneblockchain RPC to enable manual block file pruning.
1fc4ec7bf Add pruneblockchain RPC to enable manual block file pruning.
68eb56203 qt: periodic translations update
4e7e2e16e Update RPC argument names
481f28976 rpc: Named argument support for bitcoin-cli
6d8fe35b9 'help' rpc commands autocomplete
0c5090934 testcases: explicitly specify transaction version 1
edded808f Make ATMP optionally return the CTransactionRefs it replaced
c73554042 Move ORPHAN constants from validation.h to net_processing.h
9f03110f3 Add Basic CheckQueue Benchmark
7df5e382e Rename lambda argument name to prevent shadowing.
e6111b239 Make peer id logging consistent ("peer=%d" instead of "peer %d")
cc0589639 Remove stray semicolon (Fix empty body warning)
20449ef09 Don't overpay fee if we have selected new coins that result in a smaller transaction.
42f5ce409 Try to reduce change output to make needed fee in CreateTransaction
c5adf8f26 [Qt] Show more significant warning if we fall back to the default fee
c1ae4fcf7 Avoid holding cs_most_recent_block while calling ReadBlockFromDisk
032ba3f06 RPC help documentation for addnode peerinfo.
90f13e182 Add release notes for addnode changes.
50bd12ce0 Break addnode out from the outbound connection limits.
b3d7b1cbe Wallet: Do not perform ECDSA in the fee calculation inner loop.
9eb67f500 Ensure we meet the BIP 152 old-relay-types response requirements
5749a853b Cache most-recently-connected compact block
9eaec08dd Cache most-recently-announced block's shared_ptr
c80209214 Relay compact block messages prior to full block connection
698721957 Add a CValidationInterface::NewPoWValidBlock callback
325e400f9 [Qt] Do proper shutdown
9adb4e1a5 rpc: Argument name consistency
8d713f761 rpc: Named arguments for rawtransaction calls
37a166f14 rpc: Named arguments for wallet calls
78b684f2a rpc: Named arguments for mining calls
b8ebc595b rpc: Named arguments for net calls
2ca9dcd5b test: Add test for RPC named arguments
fba1a6150 rpc: Named arguments for misc calls
286ec08cb rpc: Add 'echo' call for testing
495eb44a4 rpc: Named arguments for blockchain calls
6f1c76ae1 rpc: Support named arguments
5865d41f8 authproxy: Add support for RPC named arguments
3c8f63ba7 Make linearize scripts Python 3-compatible.
d5aa19813 Allow linearization scripts to support hash byte reversal
6dd81169f Remove SIGCHECK_VERIFICATION_FACTOR
3641141c8 Move tx estimation data out of CCheckPointData
a4bac66cc [MOVEONLY] Move progress estimation out of checkpoints
180586fd4 Call AcceptBlock with the block's shared_ptr instead of CBlock&
8baaba653 [qa] Avoid race in preciousblock test.
9a0b2f4c5 [qa] Make compact blocks test construction using fetch methods
80175472d Make CBlockIndex*es in net_processing const
dd44ea39b Check FRESH validity in CCoinsViewCache::BatchWrite
0388afe69 Let autoconf detect presence of EVP_MD_CTX_new
ffeb1956c add test for -walletrejectlongchains
daec955fd Introduce -blockmintxfee
44b64b933 Fix edge case with stale fee estimates
78ae62d26 Add clarifying comments to fee estimation
5fe0f47aa Add extra logging to processBlock in fee estimation.
dc008c462 Add IsCurrentForFeeEstimatation
ebafdcabb Pass pointers to existing CTxMemPoolEntries to fee estimation
d825838e6 Always update fee estimates on new blocks.
6f06b268c rename bool to validFeeEstimate
84f7ab08d Remove member variable hadNoDependencies from CTxMemPoolEntry
60ac00de8 Don't track transactions at all during IBD.
4df44794c Remove extraneous LogPrint from fee estimation
ce370c181 Mark the minconf parameter to move as ignored
b50cd7a67 Fix dangerous condition in ModifyNewCoins.
56212e20a net: set message deserialization version when it's actually time to deserialize
0e973d970 net: remove redundant max sendbuffer size check
60425870d net: wait until the node is destroyed to delete its recv buffer
f6315e07f net: only disconnect if fDisconnect has been set
5b4a8ac6d net: make GetReceiveFloodSize public
e5bcd9c84 net: make vRecvMsg a list so that we can use splice()
53ad9a133 net: fix typo causing the wrong receive buffer size
8217bd1d4 [depends] libevent 2.1.7rc
388ea19bf qt: Set (count) placeholder in sendcoinsdialog to notranslate
facf3e760 [qt] `make translate`
fae26e8df [qt] Add more sources to translate
05a55a639 Added EVENT_CFLAGS to test makefile to explicitly include libevent headers.
35ee63c56 [Doc] Install Protobuf v3 on OS X
67ee4ec90 net: misc header cleanups
8b3159ef0 net: make proxy receives interruptible
5cb0fcee8 net: remove thread_interrupted catch
d3d7056d2 net: make net processing interruptible
098505231 net: make net interruptible
799df9115 net: add CThreadInterrupt and InterruptibleSleep
7325b1556 net: a few small cleanups before replacing boost threads
fab6c5f46 [qt] Do not translate `~`
d45b21e2b qt: Fill in English numerusforms
a9d615180 qt,wallet: Fix a few typos in messages
03e1d6ce3 doc: Add historical release notes for 0.13.2
73f41190b Refactoring: Removed using namespace <xxx> from bench/ and test/ source files.
1d2d67692 qt: Set transifex slug to 0.14
27765b640 Increment MIT Licence copyright header year on files modified in 2016
d4781ac6c Set peers as HB peers upon full block validation
2fb98f666 Fix bug in dmg builder so that it actually reads in the configuration file
9e351c958 SetMerkleBranch: remove unused code, remove cs_main lock requirement
b705a04b9 Update the Windows build notes
b7e144bb7 Add test cases to test new bitcoin-tx functionality
61a153443 Add all transaction output types to bitcoin-tx.
1814b089f add p2sh and segwit options to bitcoin-tx outscript command
ed1fcdcac Bugfix: Detect genbuild.sh in repo correctly
856279209 GUI/RPCConsole: Include importmulti in history sensitive-command filter
ff77faf48 Qt/RPCConsole: Use RPCParseCommandLine to perform command filtering
a79598ddf Qt/Test: Make sure filtering sensitive data works correctly in nested commands
629cd4236 Qt/RPCConsole: Teach RPCParseCommandLine how to filter out arguments to sensitive commands
e2d9213c3 Qt/RPCConsole: Make it possible to parse a command without executing it
1755c0457 Qt/RPCConsole: Truncate filtered commands to just the command name, rather than skip it entirely in history
d80a00660 Qt/RPCConsole: Add signmessagewithprivkey to list of commands filtered from history
afde12f26 Qt/RPCConsole: Refactor command_may_contain_sensitive_data function out of RPCConsole::on_lineEdit_returnPressed
de8980df9 Bugfix: Do not add sensitive information to history for real
904490863 Qt/RPCConsole: Don't store commands with potentially sensitive information in the history
fc95daa97 Qt/RPCConsole: Save current command entry when browsing history
e2b5c98ce Fix linker error when configured with --enable-lcov
fa558be2c test: Include tx data in EXTRA_DIST
c2f61bebb Add a ForceSetArg method for testing
35356b40e Remove unused variable in test, fixing warning.
bd02bddb9 Release cs_main before processing cmpctblock as header
680b0c013 Release cs_main before calling ProcessNewBlock (cmpctblock handling)
4e048142a Lock mapArgs/mapMultiArgs access in util
4cd373aea Un-expose mapArgs from utils.h
71fde5563 Get rid of mapArgs direct access in ZMQ construction
0cf86a667 Introduce (and use) an IsArgSet accessor method
2b5f085ad Fix non-const mapMultiArgs[] access after init.
c8042a48f Remove arguments to ParseConfigFile
407cdd6cb Do not evaluate hidden LogPrint arguments
54f80263f [CoinControl] Allow non-wallet owned change addresses
9479f8dfc Allow shutdown during LoadMempool, dump only when necessary
b01667c77 Mention RSVG dependency when creating the disk image on OSX
09aefb517 build: Fix 'make deploy' for OSX
ba3cecf5c Share unused mempool memory with coincache
3f6797265 updated listsinceblock rpc docs
afe5b3f55 Added missing colons in when running help command
2ddfcfd2d Make CScript (and prevector) c++11 movable.
91335ba38 Remove unused MakeTransactionRef overloads
6713f0f14 Make FillBlock consume txn_available to avoid shared_ptr copies
62607d796 Convert COrphanTx to keep a CTransactionRef
c44e4c467 Make AcceptToMemoryPool take CTransactionRef
d63ff6265 Make nWalletDBUpdated atomic to avoid a potential race.
b3717326c Re-enable a blank v1 Tx JSON test
0513c707a Make rpcauth help message clearer, add example in example .conf
280a5599e Added some simple tests for the RAII-style events.
fa8958186 build: Include cuckoocache header in Makefile
