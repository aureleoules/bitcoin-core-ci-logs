brew install boost libevent berkeley-db4 qt@5 miniupnpc libnatpmp ccache zeromq qrencode sqlite libtool automake pkg-config gnu-getopt
Warning: pkg-config 0.29.2_3 is already installed and up-to-date.
To reinstall 0.29.2_3, run:
  brew reinstall pkg-config
==> Downloading https://ghcr.io/v2/homebrew/core/icu4c/manifests/69.1
==> Downloading https://ghcr.io/v2/homebrew/core/icu4c/blobs/sha256:d46b8ec5c3db629e7848e9fd31e5ec99ed952d9c81c8936a2511fae803d831fd
==> Downloading from https://pkg-containers.githubusercontent.com/ghcr1/blobs/sha256:d46b8ec5c3db629e7848e9fd31e5ec99ed952d9c81c8936a2511fae803d831fd?se=2022-11-22T09%3A40%3A00Z&sig=EuiZv8XNzzhKXnHaQVzuBNVapohu%2BNxmNKvhPfztapk%3D&sp=r&spr=https&sr=b&sv=2019-12-12
==> Downloading https://ghcr.io/v2/homebrew/core/boost/manifests/1.75.0_3
==> Downloading https://ghcr.io/v2/homebrew/core/boost/blobs/sha256:9198af08180876d70b16decb22aa3237272a156b40a4f57e83840a3d30d2ca70
==> Downloading from https://pkg-containers.githubusercontent.com/ghcr1/blobs/sha256:9198af08180876d70b16decb22aa3237272a156b40a4f57e83840a3d30d2ca70?se=2022-11-22T09%3A40%3A00Z&sig=NBkg28azHQsVxehzU6%2BdEZlVvQ3hLM%2BvFzPJwYVluMI%3D&sp=r&spr=https&sr=b&sv=2019-12-12
==> Installing dependencies for boost: icu4c
==> Installing boost dependency: icu4c
==> Pouring icu4c--69.1.big_sur.bottle.tar.gz
==> Caveats
icu4c is keg-only, which means it was not symlinked into /usr/local,
because macOS provides libicucore.dylib (but nothing else).

If you need to have icu4c first in your PATH, run:
  echo 'export PATH="/usr/local/opt/icu4c/bin:$PATH"' >> ~/.zshrc
  echo 'export PATH="/usr/local/opt/icu4c/sbin:$PATH"' >> ~/.zshrc

For compilers to find icu4c you may need to set:
  export LDFLAGS="-L/usr/local/opt/icu4c/lib"
  export CPPFLAGS="-I/usr/local/opt/icu4c/include"

For pkg-config to find icu4c you may need to set:
  export PKG_CONFIG_PATH="/usr/local/opt/icu4c/lib/pkgconfig"

==> Summary
🍺  /usr/local/Cellar/icu4c/69.1: 259 files, 72.8MB
==> Installing boost
==> Pouring boost--1.75.0_3.big_sur.bottle.tar.gz
🍺  /usr/local/Cellar/boost/1.75.0_3: 15,058 files, 524.2MB
==> Downloading https://ghcr.io/v2/homebrew/core/libevent/manifests/2.1.12
==> Downloading https://ghcr.io/v2/homebrew/core/libevent/blobs/sha256:45758b448d82b82b6bea52bc9a72593ef22f04ebdaa4b4230cadf12768252e22
==> Downloading from https://pkg-containers.githubusercontent.com/ghcr1/blobs/sha256:45758b448d82b82b6bea52bc9a72593ef22f04ebdaa4b4230cadf12768252e22?se=2022-11-22T09%3A40%3A00Z&sig=Jw%2BsLriIIpJtbdWGe2APxuMRS9mea1kpIKwXxacYHnw%3D&sp=r&spr=https&sr=b&sv=2019-12-12
==> Pouring libevent--2.1.12.big_sur.bottle.tar.gz
🍺  /usr/local/Cellar/libevent/2.1.12: 57 files, 2MB
==> Downloading https://ghcr.io/v2/homebrew/core/berkeley-db/4/manifests/4.8.30-2
==> Downloading https://ghcr.io/v2/homebrew/core/berkeley-db/4/blobs/sha256:8a95577ecc798d7dd61b100d282c3b667eb278b3d719a41331db2cc57e0843c1
==> Downloading from https://pkg-containers.githubusercontent.com/ghcr1/blobs/sha256:8a95577ecc798d7dd61b100d282c3b667eb278b3d719a41331db2cc57e0843c1?se=2022-11-22T09%3A40%3A00Z&sig=ZEP4h4qFRcb2bo6U1ih8VbD7Retpwb2hG5vq6oRlFnE%3D&sp=r&spr=https&sr=b&sv=2019-12-12
==> Pouring berkeley-db@4--4.8.30.big_sur.bottle.2.tar.gz
==> Caveats
berkeley-db@4 is keg-only, which means it was not symlinked into /usr/local,
because this is an alternate version of another formula.

If you need to have berkeley-db@4 first in your PATH, run:
  echo 'export PATH="/usr/local/opt/berkeley-db@4/bin:$PATH"' >> ~/.zshrc

For compilers to find berkeley-db@4 you may need to set:
  export LDFLAGS="-L/usr/local/opt/berkeley-db@4/lib"
  export CPPFLAGS="-I/usr/local/opt/berkeley-db@4/include"

==> Summary
🍺  /usr/local/Cellar/berkeley-db@4/4.8.30: 4,596 files, 78MB
==> Downloading https://ghcr.io/v2/homebrew/core/qt/5/manifests/5.15.2
==> Downloading https://ghcr.io/v2/homebrew/core/qt/5/blobs/sha256:e7b8af5d4a61e1ab8ec6b564ed998adca00096b0d9253ab1869ffceae386e90e
==> Downloading from https://pkg-containers.githubusercontent.com/ghcr1/blobs/sha256:e7b8af5d4a61e1ab8ec6b564ed998adca00096b0d9253ab1869ffceae386e90e?se=2022-11-22T09%3A40%3A00Z&sig=Jbl4Zm4M%2B4Qh39w93yzz68GbklDxT99vuTzyKeoOzGk%3D&sp=r&spr=https&sr=b&sv=2019-12-12
==> Pouring qt@5--5.15.2.big_sur.bottle.tar.gz
==> Caveats
We agreed to the Qt open source license for you.
If this is unacceptable you should uninstall.

qt@5 is keg-only, which means it was not symlinked into /usr/local,
because this is an alternate version of another formula.

If you need to have qt@5 first in your PATH, run:
  echo 'export PATH="/usr/local/opt/qt@5/bin:$PATH"' >> ~/.zshrc

For compilers to find qt@5 you may need to set:
  export LDFLAGS="-L/usr/local/opt/qt@5/lib"
  export CPPFLAGS="-I/usr/local/opt/qt@5/include"

For pkg-config to find qt@5 you may need to set:
  export PKG_CONFIG_PATH="/usr/local/opt/qt@5/lib/pkgconfig"

==> Summary
🍺  /usr/local/Cellar/qt@5/5.15.2: 10,688 files, 367.9MB
==> Downloading https://ghcr.io/v2/homebrew/core/miniupnpc/manifests/2.2.2
==> Downloading https://ghcr.io/v2/homebrew/core/miniupnpc/blobs/sha256:8493cfd956df3566d8025042e44d4cf60995ff0a7a1c1cce4d6ef388e20c0b58
==> Downloading from https://pkg-containers.githubusercontent.com/ghcr1/blobs/sha256:8493cfd956df3566d8025042e44d4cf60995ff0a7a1c1cce4d6ef388e20c0b58?se=2022-11-22T09%3A40%3A00Z&sig=TzGjD2Cyafk4KshLaz79mRlXOrvoGTSQcOixXHUEGNY%3D&sp=r&spr=https&sr=b&sv=2019-12-12
==> Pouring miniupnpc--2.2.2.big_sur.bottle.tar.gz
🍺  /usr/local/Cellar/miniupnpc/2.2.2: 22 files, 271.6KB
==> Downloading https://ghcr.io/v2/homebrew/core/libnatpmp/manifests/20150609
==> Downloading https://ghcr.io/v2/homebrew/core/libnatpmp/blobs/sha256:b62f39f2cf735ed55841676e6d55473aa1fb5d9247c10151b71184ba20dccba1
==> Downloading from https://pkg-containers.githubusercontent.com/ghcr1/blobs/sha256:b62f39f2cf735ed55841676e6d55473aa1fb5d9247c10151b71184ba20dccba1?se=2022-11-22T09%3A40%3A00Z&sig=n95PBIVK%2B8BuHh%2FRSjNRZMosxAzvA8N8f34sDoqUHZ4%3D&sp=r&spr=https&sr=b&sv=2019-12-12
==> Pouring libnatpmp--20150609.big_sur.bottle.tar.gz
🍺  /usr/local/Cellar/libnatpmp/20150609: 10 files, 118.6KB
==> Downloading https://ghcr.io/v2/homebrew/core/zstd/manifests/1.4.9_1
==> Downloading https://ghcr.io/v2/homebrew/core/zstd/blobs/sha256:eeb8825bb703294879b70a5018efecb08a42863cb56c870fdd7215d886732778
==> Downloading from https://pkg-containers.githubusercontent.com/ghcr1/blobs/sha256:eeb8825bb703294879b70a5018efecb08a42863cb56c870fdd7215d886732778?se=2022-11-22T09%3A40%3A00Z&sig=GCIaVzAT2GjdN2bjwUQSbuWUSj33xtJiGl9hvVCeqQU%3D&sp=r&spr=https&sr=b&sv=2019-12-12
==> Downloading https://ghcr.io/v2/homebrew/core/ccache/manifests/4.2.1
==> Downloading https://ghcr.io/v2/homebrew/core/ccache/blobs/sha256:098a882c947780055053e5d961910f411026cea492a0435077b3c70a347b4ca7
==> Downloading from https://pkg-containers.githubusercontent.com/ghcr1/blobs/sha256:098a882c947780055053e5d961910f411026cea492a0435077b3c70a347b4ca7?se=2022-11-22T09%3A40%3A00Z&sig=Uh1oOVqhKpKnR0r85zGrX%2F3qEVLlemOgom5cb5VFSSM%3D&sp=r&spr=https&sr=b&sv=2019-12-12
==> Installing dependencies for ccache: zstd
==> Installing ccache dependency: zstd
==> Pouring zstd--1.4.9_1.big_sur.bottle.tar.gz
🍺  /usr/local/Cellar/zstd/1.4.9_1: 31 files, 2.6MB
==> Installing ccache
==> Pouring ccache--4.2.1.big_sur.bottle.tar.gz
==> Caveats
To install symlinks for compilers that will automatically use
ccache, prepend this directory to your PATH:
  /usr/local/opt/ccache/libexec

If this is an upgrade and you have previously added the symlinks to
your PATH, you may need to modify it to the path specified above so
it points to the current version.

NOTE: ccache can prevent some software from compiling.
ALSO NOTE: The brew command, by design, will never use ccache.
==> Summary
🍺  /usr/local/Cellar/ccache/4.2.1: 64 files, 1MB
==> Downloading https://ghcr.io/v2/homebrew/core/libsodium/manifests/1.0.18_1
==> Downloading https://ghcr.io/v2/homebrew/core/libsodium/blobs/sha256:5afc5678e30a174c1e46f1e905124f2619e6d9815ac776836090c0bff85631d6
==> Downloading from https://pkg-containers.githubusercontent.com/ghcr1/blobs/sha256:5afc5678e30a174c1e46f1e905124f2619e6d9815ac776836090c0bff85631d6?se=2022-11-22T09%3A40%3A00Z&sig=RlJ1tLwDdMTBF6R11Agb4%2BbCkUmAq5%2FDxqttiknsW6A%3D&sp=r&spr=https&sr=b&sv=2019-12-12
==> Downloading https://ghcr.io/v2/homebrew/core/zeromq/manifests/4.3.4
==> Downloading https://ghcr.io/v2/homebrew/core/zeromq/blobs/sha256:579862174f4ce6883fe9871e52d0d4306c8daa67ecc7b5ab94c6174e29bb54bb
==> Downloading from https://pkg-containers.githubusercontent.com/ghcr1/blobs/sha256:579862174f4ce6883fe9871e52d0d4306c8daa67ecc7b5ab94c6174e29bb54bb?se=2022-11-22T09%3A40%3A00Z&sig=9P3ZsZlMfDMzQWTuXk5lZIW6tx5wC2I%2FaYnBiEJA3yM%3D&sp=r&spr=https&sr=b&sv=2019-12-12
==> Installing dependencies for zeromq: libsodium
==> Installing zeromq dependency: libsodium
==> Pouring libsodium--1.0.18_1.big_sur.bottle.tar.gz
🍺  /usr/local/Cellar/libsodium/1.0.18_1: 73 files, 1MB
==> Installing zeromq
==> Pouring zeromq--4.3.4.big_sur.bottle.tar.gz
🍺  /usr/local/Cellar/zeromq/4.3.4: 83 files, 6.0MB
==> Downloading https://ghcr.io/v2/homebrew/core/libpng/manifests/1.6.37
==> Downloading https://ghcr.io/v2/homebrew/core/libpng/blobs/sha256:a8f1c35f9f004c4f7878c30027e35a9fb9551782df963f88deebd3dc29d94d51
==> Downloading from https://pkg-containers.githubusercontent.com/ghcr1/blobs/sha256:a8f1c35f9f004c4f7878c30027e35a9fb9551782df963f88deebd3dc29d94d51?se=2022-11-22T09%3A40%3A00Z&sig=k5ubzbSjBjCdyE2nPw1oM3ZCHO%2BBqXVCZd7ExeAtWaU%3D&sp=r&spr=https&sr=b&sv=2019-12-12
==> Downloading https://ghcr.io/v2/homebrew/core/qrencode/manifests/4.1.1
==> Downloading https://ghcr.io/v2/homebrew/core/qrencode/blobs/sha256:1b3d2022412f9d5486550fb68250aee25bb358a04e2cccc7bb85c7d65b1885b0
==> Downloading from https://pkg-containers.githubusercontent.com/ghcr1/blobs/sha256:1b3d2022412f9d5486550fb68250aee25bb358a04e2cccc7bb85c7d65b1885b0?se=2022-11-22T09%3A40%3A00Z&sig=AtM0y5V3JoqZkT7XSdFL8Oda96CJjBACIqL%2FfFFa8uY%3D&sp=r&spr=https&sr=b&sv=2019-12-12
==> Installing dependencies for qrencode: libpng
==> Installing qrencode dependency: libpng
==> Pouring libpng--1.6.37.big_sur.bottle.tar.gz
🍺  /usr/local/Cellar/libpng/1.6.37: 27 files, 1.3MB
==> Installing qrencode
==> Pouring qrencode--4.1.1.big_sur.bottle.tar.gz
🍺  /usr/local/Cellar/qrencode/4.1.1: 13 files, 273.6KB
==> Downloading https://ghcr.io/v2/homebrew/core/sqlite/manifests/3.35.4
==> Downloading https://ghcr.io/v2/homebrew/core/sqlite/blobs/sha256:861dc044ea531c39a2105010107feb95cf10977c3da94a4c4fce6aa1b3041c34
==> Downloading from https://pkg-containers.githubusercontent.com/ghcr1/blobs/sha256:861dc044ea531c39a2105010107feb95cf10977c3da94a4c4fce6aa1b3041c34?se=2022-11-22T09%3A40%3A00Z&sig=mGlqiXAIZd%2FnvPUNsuW4pZAcysVunt4paoDtb1WJYsI%3D&sp=r&spr=https&sr=b&sv=2019-12-12
==> Pouring sqlite--3.35.4.big_sur.bottle.tar.gz
==> Caveats
sqlite is keg-only, which means it was not symlinked into /usr/local,
because macOS already provides this software and installing another version in
parallel can cause all kinds of trouble.

If you need to have sqlite first in your PATH, run:
  echo 'export PATH="/usr/local/opt/sqlite/bin:$PATH"' >> ~/.zshrc

For compilers to find sqlite you may need to set:
  export LDFLAGS="-L/usr/local/opt/sqlite/lib"
  export CPPFLAGS="-I/usr/local/opt/sqlite/include"

For pkg-config to find sqlite you may need to set:
  export PKG_CONFIG_PATH="/usr/local/opt/sqlite/lib/pkgconfig"

==> Summary
🍺  /usr/local/Cellar/sqlite/3.35.4: 11 files, 4.2MB
==> Downloading https://ghcr.io/v2/homebrew/core/libtool/manifests/2.4.6_3
==> Downloading https://ghcr.io/v2/homebrew/core/libtool/blobs/sha256:a70ed5b9d74ec3b06bfc202ab36491c3ecd3da4ff2b602478675ba0c533aa466
==> Downloading from https://pkg-containers.githubusercontent.com/ghcr1/blobs/sha256:a70ed5b9d74ec3b06bfc202ab36491c3ecd3da4ff2b602478675ba0c533aa466?se=2022-11-22T09%3A40%3A00Z&sig=YmiydZlWtDKY9KpZjsh38GM9DABaxWd2yumpojnA5C0%3D&sp=r&spr=https&sr=b&sv=2019-12-12
==> Pouring libtool--2.4.6_3.big_sur.bottle.tar.gz
==> Caveats
In order to prevent conflicts with Apple's own libtool we have prepended a "g"
so, you have instead: glibtool and glibtoolize.
==> Summary
🍺  /usr/local/Cellar/libtool/2.4.6_3: 71 files, 3.7MB
==> Downloading https://ghcr.io/v2/homebrew/core/automake/manifests/1.16.3_1
==> Downloading https://ghcr.io/v2/homebrew/core/automake/blobs/sha256:11f09c63a49b30078f91bd00b8bed2408422100764cb7b039e8f96941aec3dfc
==> Downloading from https://pkg-containers.githubusercontent.com/ghcr1/blobs/sha256:11f09c63a49b30078f91bd00b8bed2408422100764cb7b039e8f96941aec3dfc?se=2022-11-22T09%3A40%3A00Z&sig=7Yc0zd01a2w6GxLstKeQyyc7tK%2FFg5VaPxTqn4uOTC8%3D&sp=r&spr=https&sr=b&sv=2019-12-12
==> Pouring automake--1.16.3_1.big_sur.bottle.tar.gz
🍺  /usr/local/Cellar/automake/1.16.3_1: 131 files, 3.4MB
==> Downloading https://ghcr.io/v2/homebrew/core/gnu-getopt/manifests/2.36.2
==> Downloading https://ghcr.io/v2/homebrew/core/gnu-getopt/blobs/sha256:ca1fed65658b4bc72775636b6cb21e30dd0ff3e0521b80eda2ed37119f89838d
==> Downloading from https://pkg-containers.githubusercontent.com/ghcr1/blobs/sha256:ca1fed65658b4bc72775636b6cb21e30dd0ff3e0521b80eda2ed37119f89838d?se=2022-11-22T09%3A40%3A00Z&sig=We2jvBtawJQike0UQfbHYJXAMk1iURD5lDuDQPif43g%3D&sp=r&spr=https&sr=b&sv=2019-12-12
==> Pouring gnu-getopt--2.36.2.big_sur.bottle.tar.gz
==> Caveats
gnu-getopt is keg-only, which means it was not symlinked into /usr/local,
because macOS already provides this software and installing another version in
parallel can cause all kinds of trouble.

If you need to have gnu-getopt first in your PATH, run:
  echo 'export PATH="/usr/local/opt/gnu-getopt/bin:$PATH"' >> ~/.zshrc

==> Summary
🍺  /usr/local/Cellar/gnu-getopt/2.36.2: 10 files, 200.2KB
Warning: Calling `cellar` in a bottle block is deprecated! Use `brew style --fix` on the formula to update the style or use `sha256` with a `cellar:` argument instead.
Please report this issue to the robotsandpencils/made tap (not Homebrew/brew or Homebrew/core), or even better, submit a PR to fix it:
  /usr/local/Homebrew/Library/Taps/robotsandpencils/homebrew-made/Formula/xcodes.rb:9

Warning: Calling `sha256 "digest" => :tag` in a bottle block is deprecated! Use `brew style --fix` on the formula to update the style or use `sha256 tag: "digest"` instead.
Please report this issue to the robotsandpencils/made tap (not Homebrew/brew or Homebrew/core), or even better, submit a PR to fix it:
  /usr/local/Homebrew/Library/Taps/robotsandpencils/homebrew-made/Formula/xcodes.rb:10

==> Caveats
==> icu4c
icu4c is keg-only, which means it was not symlinked into /usr/local,
because macOS provides libicucore.dylib (but nothing else).

If you need to have icu4c first in your PATH, run:
  echo 'export PATH="/usr/local/opt/icu4c/bin:$PATH"' >> ~/.zshrc
  echo 'export PATH="/usr/local/opt/icu4c/sbin:$PATH"' >> ~/.zshrc

For compilers to find icu4c you may need to set:
  export LDFLAGS="-L/usr/local/opt/icu4c/lib"
  export CPPFLAGS="-I/usr/local/opt/icu4c/include"

For pkg-config to find icu4c you may need to set:
  export PKG_CONFIG_PATH="/usr/local/opt/icu4c/lib/pkgconfig"

==> berkeley-db@4
berkeley-db@4 is keg-only, which means it was not symlinked into /usr/local,
because this is an alternate version of another formula.

If you need to have berkeley-db@4 first in your PATH, run:
  echo 'export PATH="/usr/local/opt/berkeley-db@4/bin:$PATH"' >> ~/.zshrc

For compilers to find berkeley-db@4 you may need to set:
  export LDFLAGS="-L/usr/local/opt/berkeley-db@4/lib"
  export CPPFLAGS="-I/usr/local/opt/berkeley-db@4/include"

==> qt@5
We agreed to the Qt open source license for you.
If this is unacceptable you should uninstall.

qt@5 is keg-only, which means it was not symlinked into /usr/local,
because this is an alternate version of another formula.

If you need to have qt@5 first in your PATH, run:
  echo 'export PATH="/usr/local/opt/qt@5/bin:$PATH"' >> ~/.zshrc

For compilers to find qt@5 you may need to set:
  export LDFLAGS="-L/usr/local/opt/qt@5/lib"
  export CPPFLAGS="-I/usr/local/opt/qt@5/include"

For pkg-config to find qt@5 you may need to set:
  export PKG_CONFIG_PATH="/usr/local/opt/qt@5/lib/pkgconfig"

==> ccache
To install symlinks for compilers that will automatically use
ccache, prepend this directory to your PATH:
  /usr/local/opt/ccache/libexec

If this is an upgrade and you have previously added the symlinks to
your PATH, you may need to modify it to the path specified above so
it points to the current version.

NOTE: ccache can prevent some software from compiling.
ALSO NOTE: The brew command, by design, will never use ccache.
==> sqlite
sqlite is keg-only, which means it was not symlinked into /usr/local,
because macOS already provides this software and installing another version in
parallel can cause all kinds of trouble.

If you need to have sqlite first in your PATH, run:
  echo 'export PATH="/usr/local/opt/sqlite/bin:$PATH"' >> ~/.zshrc

For compilers to find sqlite you may need to set:
  export LDFLAGS="-L/usr/local/opt/sqlite/lib"
  export CPPFLAGS="-I/usr/local/opt/sqlite/include"

For pkg-config to find sqlite you may need to set:
  export PKG_CONFIG_PATH="/usr/local/opt/sqlite/lib/pkgconfig"

==> libtool
In order to prevent conflicts with Apple's own libtool we have prepended a "g"
so, you have instead: glibtool and glibtoolize.
==> gnu-getopt
gnu-getopt is keg-only, which means it was not symlinked into /usr/local,
because macOS already provides this software and installing another version in
parallel can cause all kinds of trouble.

If you need to have gnu-getopt first in your PATH, run:
  echo 'export PATH="/usr/local/opt/gnu-getopt/bin:$PATH"' >> ~/.zshrc

                                  